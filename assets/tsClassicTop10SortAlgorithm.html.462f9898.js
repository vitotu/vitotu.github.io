import{_ as n,a as s,b as a,c as t,d as p,e as o,f as e,g as c}from"./countingSort.b97843bb.js";import{_ as l,o as i,c as u,e as r}from"./app.747858fb.js";const k="/assets/heap.6db57020.png",d="/assets/heapArray.03bd6c55.png",m={},v=r('<h1 id="ts\u5B9E\u73B0\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#ts\u5B9E\u73B0\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> ts\u5B9E\u73B0\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5</h1><h2 id="no-1-\u5192\u6CE1\u6392\u5E8F\u6CD5-bubblesort" tabindex="-1"><a class="header-anchor" href="#no-1-\u5192\u6CE1\u6392\u5E8F\u6CD5-bubblesort" aria-hidden="true">#</a> NO.1 \u5192\u6CE1\u6392\u5E8F\u6CD5(bubbleSort)</h2><ol><li>\u904D\u5386\u957F\u5EA6\u4E3An\u7684\u6570\u7EC4\uFF0C\u6BD4\u8F83\u76F8\u90BB\u4F4D\u7F6E\u7684\u5927\u5C0F</li><li>\u5C06\u8F83\u5927\u7684\u653E\u7F6E\u53F3\u8FB9\uFF0C\u4FDD\u8BC1\u4E86\u7B2C\u4E00\u6B21\u904D\u5386\u540E\u6570\u7EC4\u672B\u5C3E\u4E3A\u6700\u5927</li><li>\u5C06\u904D\u5386\u957F\u5EA6\u51CF1\uFF0C\u91CD\u590D\u4E0A\u8FF0\u64CD\u4F5C\uFF0C\u76F4\u5230\u904D\u5386\u957F\u5EA6\u4E3A2\u5373\u53EF\u5F97\u5230\u4ECE\u5C0F\u5230\u5927\u7684\u6392\u5E8F\u7684\u6570\u7EC4</li></ol><p>\u82E5\u60F3\u8981\u4ECE\u5927\u5230\u5C0F\u6392\u5E8F\uFF0C\u5219\u5C06\u8F83\u5C0F\u7684\u653E\u7F6E\u5728\u53F3\u8FB9\u5373\u53EF</p><ul><li>\u56FE\u89E3\uFF1A <img src="'+n+`" alt="bubbleSort.gif"></li><li>ts\u5B9E\u73B0:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u5B9A\u4E49\u6BD4\u8F83\u51FD\u6570\u63A5\u53E3
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span> \u6CDB\u578BT
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>boolean<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>left<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">,</span> right<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">SortAlgorithm</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">bubbleSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> exchangeFlag<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u662F\u5426\u53D1\u751F\u4EA4\u6362\u7684\u6807\u5FD7</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>length <span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        exchangeFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u8F6E\u5FAA\u73AF\u5F00\u59CB\u65F6\uFF0C\u521D\u59CB\u5316\u662F\u5426\u4EA4\u6362\u6807\u5FD7</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            exchangeFlag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>exchangeFlag<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u672A\u53D1\u751F\u4EA4\u6362\uFF0C\u5219\u6B64\u8F6E\u5FAA\u73AF\u5DF2\u6392\u597D\u5E8F\uFF0C\u76F4\u63A5\u8DF3\u51FA\u5373\u53EF</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5185\u7F6E\u6570\u5B57\u6BD4\u8F83\u51FD\u6570</span>
  <span class="token keyword">static</span> <span class="token function">NumberLE</span><span class="token punctuation">(</span>left<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">NumberGE</span><span class="token punctuation">(</span>left<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * <span class="token keyword">@description</span>: \u6D4B\u8BD5\u7528\u4F8B
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   */</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> nums<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// nums = [];</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>SortAlgorithm<span class="token punctuation">.</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> SortAlgorithm<span class="token punctuation">.</span>NumberLE<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

SortAlgorithm<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-2-\u9009\u62E9\u6392\u5E8F\u6CD5-selectionsort" tabindex="-1"><a class="header-anchor" href="#no-2-\u9009\u62E9\u6392\u5E8F\u6CD5-selectionsort" aria-hidden="true">#</a> NO.2 \u9009\u62E9\u6392\u5E8F\u6CD5(SelectionSort)</h2><p>\u6BCF\u6B21\u4ECE\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u9009\u62E9\u4E00\u4E2A\u6700\u5C0F\u503C(\u6700\u5927\u503C)\u653E\u5165\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E</p><ul><li>\u56FE\u89E3\uFF1A<br><img src="`+s+`" alt="selectionSort.gif"></li><li>ts\u5B9E\u73B0\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u63A5\u4E0A\u8FF0\u7C7B\u7684\u9759\u6001\u65B9\u6CD5</span>
<span class="token keyword">static</span> <span class="token generic-function"><span class="token function">selectionSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> length<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> targetIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        targetIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> temp<span class="token operator">:</span><span class="token constant">T</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-3-\u63D2\u5165\u6392\u5E8F\u6CD5-insertionsort" tabindex="-1"><a class="header-anchor" href="#no-3-\u63D2\u5165\u6392\u5E8F\u6CD5-insertionsort" aria-hidden="true">#</a> NO.3 \u63D2\u5165\u6392\u5E8F\u6CD5(InsertionSort)</h2><p>\u901A\u8FC7\u6784\u5EFA\u6709\u5E8F\u5E8F\u5217\uFF0C\u5BF9\u672A\u6392\u5E8F\u7684\u6570\u636E\uFF0C\u5728\u5DF2\u6392\u5E8F\u6570\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF<br> \u8BB0\u5F53\u524D\u4F4D\u7F6E\u4E3Atemp\uFF0C\u82E5\u626B\u63CF\u4F4D\u7684\u5143\u7D20\u6BD4temp\u5927\uFF0C\u5219\u5C06\u8BE5\u5143\u7D20\u540E\u79FB\u4E00\u4F4D<br> \u76F4\u5230\u627E\u5230\u6BD4temp\u5C0F\u7684\u5143\u7D20\u4E3A\u6B62\uFF0C\u628Atemp\u63D2\u5165\u5230\u8BE5\u5143\u7D20\u7684\u540E\u4E00\u4F4D\u3002</p><ul><li>\u6B65\u9AA4\uFF1A</li></ul><ol><li>\u5C06\u5217\u8868\u770B\u505A\u6392\u597D\u5E8F\u7684\u524D\u534A\u90E8\u5206\u548C\u6CA1\u6392\u5E8F\u7684\u540E\u534A\u90E8\u5206\uFF0C\u4F7F\u7528target\u6307\u9488\u4ECE\u7B2C\u4E8C\u4E2A\u5143\u7D20\u8D77\u904D\u5386\u5217\u8868</li><li>\u4F7F\u7528compare\u6307\u9488\uFF0C\u5C06\u6392\u597D\u5E8F\u7684\u524D\u534A\u90E8\u5206\u4ECE\u540E\u5411\u524D\u8FDB\u884C\u904D\u5386</li><li>\u82E5target &lt; compare\u5219\u4EA4\u6362\u6240\u6307\u5411\u7684\u503C</li><li>\u5411\u5DE6\u79FB\u52A8target\u6307\u9488(target\u6307\u5411compare\u7684\u6307\u5411\u7684\u4F4D\u7F6E)\uFF0C\u4FDD\u6301target\u59CB\u7EC8\u6307\u5411\u672C\u6B21\u904D\u5386\u521D\u59CB\u6307\u5411\u7684\u5143\u7D20</li><li>\u7EE7\u7EEDcompare\u7684\u4E0B\u4E00\u6B21\u904D\u5386\uFF0C\u82E5\u4E0D\u6EE1\u8DB3\u6B65\u9AA43\u5219\u8BF4\u660Etarget\u5927\u4E8Ecompare\u524D\u9762\u7684\u5143\u7D20\uFF0C\u76F4\u63A5\u8DF3\u51FA\u5185\u5C42\u5FAA\u73AF\uFF0C\u6267\u884C\u6B65\u9AA42</li></ol><ul><li>\u56FE\u89E3\uFF1A<br><img src="`+a+`" alt="insertionSort.gif"></li><li>ts\u5B9E\u73B0:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">insertionSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
  <span class="token comment">// \u8BE5\u7B97\u6CD5\u5BF9\u5143\u7D20\u64CD\u4F5C\u592A\u591A\uFF0C\u4EC5\u9002\u5408\u7528\u4E8E\u94FE\u8868\u7C7B\u6570\u7EC4\u6392\u5E8F</span>
  <span class="token keyword">let</span> length<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> target <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> compare <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> compare <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> compare<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>compare<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>compare<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>compare<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        target <span class="token operator">=</span> compare<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-4-\u5E0C\u5C14\u6392\u5E8F-shellsort" tabindex="-1"><a class="header-anchor" href="#no-4-\u5E0C\u5C14\u6392\u5E8F-shellsort" aria-hidden="true">#</a> NO.4 \u5E0C\u5C14\u6392\u5E8F(shellSort)</h2><p>shellSort\u662FinsertionSort\u7684\u5347\u7EA7\u7248\uFF0C\u7B97\u6CD5\u5047\u5B9A\u5927\u5C0F\u4E0D\u540C\u7684\u6570\u5B57\u4E3A\u5747\u5300\u5206\u5E03\uFF0C<br> \u901A\u8FC7\u95F4\u8DDD\u63D2\u5165\u6392\u5E8F\u6CD5\u5728\u6BCF\u6B21\u8FED\u4EE3\u4E2D\u5C3D\u53EF\u80FD\u7684\u5C06\u6570\u5B57\u63D2\u5165\u5230\u5176\u5927\u5C0F\u5408\u9002\u7684\u4F4D\u7F6E\uFF0C<br> \u6700\u540E\u53EF\u5F97\u5230\u7CBE\u786E\u7684\u4F4D\u7F6E\uFF0C\u5373\u6392\u5E8F\u597D\u7684\u6570\u7EC4\u3002</p><p>\u901A\u5E38shellSort\u7684\u6BD4\u8F83\u6B21\u6570\u548C\u6570\u5B57\u4EA4\u6362\u6B21\u6570\u4F1A\u5C0F\u4E8EinsertionSort<br> \u56E0\u6B64\u6027\u80FD\u8868\u73B0\u66F4\u597D\u5373\u5E73\u5747\u7B97\u6CD5\u590D\u6742\u5EA6\u66F4\u5C0FO( n^1.3 )\uFF0C\u4F46\u5176\u6700\u574F\u7B97\u6CD5\u590D\u6742\u5EA6\u76F8\u540CO( n^2 )</p><ul><li>\u6B65\u9AA4</li></ul><ol><li>\u8BBE\u7F6E\u95F4\u8DDDgap\uFF0C\u901A\u8FC7gap\u95F4\u8DDD\u5C06\u6570\u7EC4\u5206\u5272gap\u4E2A\u7EC4\uFF0C\u901A\u5E38gap\u53D6length/2\u4EC5\u4FDD\u7559\u6574\u6570</li><li>\u5BF9\u7EC4\u5185\u4F7F\u7528\u63D2\u5165\u6392\u5E8F\u6CD5</li><li>\u5C06gap\u96642\u91CD\u590D\u6B65\u9AA41\uFF0C\u76F4\u5230gap\u7B49\u4E8E1\u518D\u8FDB\u884C\u6700\u540E\u4E00\u6B21\u63D2\u5165\u6392\u5E8F\u5373\u53EF\u83B7\u5F97\u6392\u5E8F\u597D\u7684\u6570\u7EC4</li></ol><ul><li>\u56FE\u89E3 <img src="`+t+`" alt="shellSort.gif"></li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">shellSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> gap <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>gap<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> gap<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5206gap\u7EC4\u8FDB\u884C\u63D2\u5165\u6392\u5E8F</span>
      <span class="token comment">// j\u6307\u5411\u7EC4\u5185\u7B2C\u4E8C\u4E2A\u5143\u7D20\uFF0C\u5411\u540E\u904D\u5386</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> gap<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j <span class="token operator">+=</span> gap<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> target <span class="token operator">=</span> j<span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u76EE\u6807\u6307\u9488,compare\u6307\u9488\u6307\u5411\u524D\u4E00\u4E2A\u6392\u5E8F\u597D\u7684\u5143\u7D20</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> compare <span class="token operator">=</span> j <span class="token operator">-</span> gap<span class="token punctuation">;</span> compare <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>compare <span class="token operator">-=</span> gap<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>compare<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>compare<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>compare<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            target <span class="token operator">=</span> compare<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    gap <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>gap<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-5-\u5F52\u5E76\u6392\u5E8F-mergesort" tabindex="-1"><a class="header-anchor" href="#no-5-\u5F52\u5E76\u6392\u5E8F-mergesort" aria-hidden="true">#</a> NO.5 \u5F52\u5E76\u6392\u5E8F(mergeSort)</h2><ul><li>\u6B65\u9AA4</li></ul><ol><li>\u628A\u957F\u5EA6\u4E3An\u7684\u8F93\u5165\u5E8F\u5217\u5206\u6210\u4E24\u4E2A\u957F\u5EA6\u4E3An/2\u7684\u5B50\u5E8F\u5217</li><li>\u5BF9\u7740\u4E24\u4E2A\u5B50\u5E8F\u5217\u5206\u522B\u91C7\u7528\u5F52\u5E76\u6392\u5E8F\uFF0C\u5C06\u4E24\u4E2A\u6392\u5E8F\u597D\u7684\u5B50\u5E8F\u5217\u5408\u5E76\u6210\u4E00\u4E2A\u6700\u7EC8\u7684\u6392\u5E8F\u5E8F\u5217</li><li>\u53CD\u590D\u9012\u5F52\u76F4\u5230\u5B50\u5E8F\u5217\u4E0D\u53EF\u5206</li></ol><ul><li>\u56FE\u89E3 <img src="`+p+`" alt="mergeSort.gif"></li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u5F52\u5E76\u6392\u5E8F\u4E2D\u7528\u4E8E\u5408\u5E76\u5DE6\u53F3\u4E24\u4E2A\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> left \u5B58\u50A8T\u7C7B\u578B\u7684\u5DE6\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> right \u5B58\u50A8T\u7C7B\u578B\u7684\u5DE6\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>COMPARE<span class="token punctuation">}</span> fn \u7528\u4E8E\u6BD4\u8F83\u7684\u51FD\u6570
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> \u8FD4\u56DE\u503C\u4E5F\u662FT\u7C7B\u578B\u7684\u6570\u7EC4
 */</span>
<span class="token keyword">static</span> <span class="token generic-function"><span class="token function">mergeArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>left<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> right<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>l<span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> r <span class="token operator">&lt;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> right<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      l<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      r<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>left<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>right<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u9012\u5F52\u8C03\u7528\u6B64\u65B9\u6CD5\uFF0C\u5C06\u6570\u7EC4\u5DE6\u53F3\u7EC6\u5206\u4E0B\u53BB\uFF0C\u5E76\u8C03\u7528mergeArray\u5408\u5E76\u4E24\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> arr \u4F20\u5165\u5B58\u50A8T\u7C7B\u578B\u7684\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>COMPARE<span class="token punctuation">}</span> fn \u7528\u4E8E\u6BD4\u8F83\u7684\u65B9\u6CD5
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> \u8FD4\u56DE\u6392\u597D\u5E8F\u7684T\u7C7B\u578B\u7684\u6570\u7EC4
 */</span>
<span class="token keyword">static</span> <span class="token generic-function"><span class="token function">mergeSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> SortAlgorithm<span class="token punctuation">.</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> SortAlgorithm<span class="token punctuation">.</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> SortAlgorithm<span class="token punctuation">.</span><span class="token function">mergeArray</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-6-\u5FEB\u901F\u6392\u5E8F-quicksort" tabindex="-1"><a class="header-anchor" href="#no-6-\u5FEB\u901F\u6392\u5E8F-quicksort" aria-hidden="true">#</a> NO.6 \u5FEB\u901F\u6392\u5E8F(quickSort)</h2><ul><li>\u6B65\u9AA4</li></ul><ol><li>\u4ECE\u6570\u5217\u4E2D\u6311\u51FA\u4E00\u4E2A\u5143\u7D20\u4F5C\u4E3A\u57FA\u51C6\uFF0C\u6BD4\u57FA\u51C6\u5C0F\u7684\u5143\u7D20\u5168\u90E8\u6392\u5728\u5DE6\u8FB9\uFF0C\u53CD\u4E4B\u5728\u53F3\u8FB9\u3002</li><li>\u9012\u5F52\u7684\u5BF9\u57FA\u51C6\u5DE6\u53F3\u4E24\u8FB9\u7684\u6570\u5217\u8FDB\u884C\u5FEB\u901F\u6392\u5E8F\u3002</li><li>\u5408\u5E76\u5DE6\u8FB9\u5E8F\u5217\u3001\u57FA\u51C6\u548C\u53F3\u8FB9\u5E8F\u5217\u5E76\u8FD4\u56DE</li></ol><ul><li>\u56FE\u89E3 <img src="`+o+`" alt="quickSort.gif"></li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">quickSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token keyword">let</span> base <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> leftArr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> rightArr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> base<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      leftArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      rightArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  leftArr <span class="token operator">=</span> SortAlgorithm<span class="token punctuation">.</span><span class="token function">quickSort</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  rightArr <span class="token operator">=</span> SortAlgorithm<span class="token punctuation">.</span><span class="token function">quickSort</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  leftArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
  <span class="token keyword">return</span> leftArr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-7-\u5806\u6392\u5E8F-heapsort" tabindex="-1"><a class="header-anchor" href="#no-7-\u5806\u6392\u5E8F-heapsort" aria-hidden="true">#</a> NO.7 \u5806\u6392\u5E8F(heapSort)</h2><p>\u5229\u7528\u5806\u6570\u636E\u7ED3\u6784\u6240\u8BBE\u8BA1\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u901A\u8FC7\u6BCF\u6B21\u5F39\u51FA\u5806\u9876\u5143\u7D20\u5B9E\u73B0\u6392\u5E8F</p><ul><li>\u5806\u6570\u636E\u7ED3\u6784 \u5806\u662F\u4E00\u79CD\u4E8C\u53C9\u6811\uFF0C\u5B50\u8282\u70B9\u4ECE\u5DE6\u5230\u53F3\u586B\u5145\uFF0C\u7236\u8282\u70B9\u5FC5\u5B9A\u5927\u4E8E/\u5C0F\u4E8E\u5176\u5B50\u8282\u70B9\uFF0C\u5BF9\u5E94\u6700\u5927\u5806/\u6700\u5C0F\u5806<br> \u5806\u901A\u5E38\u4F7F\u7528\u6570\u7EC4\u7684\u65B9\u5F0F\u5B58\u50A8\uFF0C\u6570\u7EC4\u8282\u70B9\u7D22\u5F15\u548C\u5806\u8282\u70B9\u5BF9\u5E94\u5982\u4E0B\uFF1A<br> parent(i)=floor((i - 1) / 2)<br> left(i)=2i+1<br> right(i)=2i+2<br> \u8D85\u51FA\u7D22\u5F15\u7684\u8868\u793A\u6CA1\u6709\u5B50\u8282\u70B9\uFF0C\u5176\u5C42\u7EA7\u548C\u6570\u7EC4\u8868\u793A\u8303\u4F8B\u5982\u4E0B\u56FE\uFF1A</li></ul><p><img src="`+k+'" alt="heap.png"></p><p><img src="'+d+'" alt="heapArray.png"></p><p>\u9AD8\u5EA6\u4E3Ah\u7684\u5806\u6709h+1\u5C42\uFF0Cn\u4E2A\u8282\u70B9\u7684\u5806\u9AD8\u5EA6\u4E3Ah=floor(log2(n))\uFF0C\u5C42\u6570\u4E3Ah+1\uFF0C\u5012\u6570\u7B2C\u4E8C\u5C42\u7684\u7D22\u5F15\u4E3A2^h-2</p><ul><li>\u6B65\u9AA4</li></ul><ol><li>\u5BF9\u6570\u7EC4\u8FDB\u884C\u5EFA\u5806buildHeap 1). \u4ECE\u5012\u6570\u7B2C\u4E8C\u5C42\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u662F 2^h - 2 \u5411\u524D\u904D\u5386\u5230\u6839\u8282\u70B90 2). \u5BF9\u6BCF\u4E2A\u8282\u70B9\u8FDB\u884Cheapify</li><li>heapify\u7B97\u6CD5\uFF1A 1). \u6BD4\u8F83\u7236\u8282\u70B9\u3001\u5DE6\u53F3\u5B50\u8282\u70B9\u4E4B\u95F4\u7684\u5927\u5C0F\uFF0C\u5C06\u7B26\u5408\u6761\u4EF6\u7684\u4E0E\u7236\u8282\u70B9\u4EA4\u6362\u4F4D\u7F6E 2). \u5BF9\u8FDB\u884C\u4E86\u4EA4\u6362\u7684\u5B50\u8282\u70B9\u9012\u5F52\u7684\u8FDB\u884Cheapify\uFF0C\u4FDD\u8BC1\u8BE5\u652F\u5B50\u6811\u6EE1\u8DB3\u6700\u5927\u6216\u6700\u5C0F\u5806\u6761\u4EF6</li><li>heapSort\u7B97\u6CD5\uFF1A 1). \u5BF9\u6B65\u9AA41\u4E2D\u7684\u5806\uFF0C\u5806\u9876\u4E0E\u5806\u5C3E\u4EA4\u6362\u4F4D\u7F6E\uFF0C\u8BB0\u5806\u957F\u5EA6\u51CF1\uFF0C\u6570\u7EC4\u672B\u5C3E\u4E3A\u5DF2\u6392\u597D\u5E8F\u7684\u5E8F\u5217 2). \u5C06\u4EA4\u6362\u540E\u7684\u5806\u9876\u8FDB\u884Cheapify\uFF0C\u7EF4\u6301\u6700\u5927\u5806\u6216\u6700\u5C0F\u5806\u6761\u4EF6 3). \u904D\u5386\u6570\u7EC4\u5230\u5012\u6570\u7B2C\u4E8C\u4E2A\u8282\u70B9\uFF0C\u6BCF\u6B21\u91CD\u590D1)~2)\u6B65\u9AA4\uFF0C\u5B8C\u6210\u540E\u5373\u53EF\u83B7\u5F97\u6392\u5E8F\u597D\u7684\u6570\u7EC4</li></ol><ul><li>\u56FE\u89E3 <img src="'+e+`" alt="heapSort.gif"></li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u5BF9\u4EFB\u610F\u6570\u7EC4\u8FDB\u884C\u5EFA\u5806
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span> arr
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>COMPARE<span class="token punctuation">}</span> fn
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">static</span> <span class="token generic-function"><span class="token function">buildHeap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token comment">// debugger</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> end<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    SortAlgorithm<span class="token punctuation">.</span><span class="token function">heapify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> i<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: \u5806\u5316\u51FD\u6570\uFF0C\u5BF9\u4F20\u5165\u7684\u6570\u7EC4\u53CA\u7ED9\u5B9A\u7684\u7236\u8282\u70B9\u4EE5\u4E0B\u7684\u5404\u7EA7\u5B50\u8282\u70B9\u8FDB\u884C\u5806\u5316\uFF0C\u4FDD\u8BC1
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> arr \u4F20\u5165\u6570\u7EC4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>COMPARE<span class="token punctuation">}</span> fn \u7528\u4E8E\u6BD4\u8F83\u7684\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> parent \u7236\u8282\u70B9\u7D22\u5F15\u503C
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> end \u9650\u5B9A\u8FDB\u884C\u5806\u5316\u7684\u8303\u56F40-end
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>boolean<span class="token punctuation">}</span> 
 */</span>
<span class="token keyword">static</span> <span class="token generic-function"><span class="token function">heapify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> parent<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>parent <span class="token operator">&gt;</span> end <span class="token operator">||</span> parent <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> parent <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> target <span class="token operator">=</span> parent<span class="token punctuation">;</span> <span class="token comment">// \u6700\u5C0F\u503C\u6216\u6700\u5927\u503C\u6307\u9488\uFF0C\u9ED8\u8BA4\u6307\u5411\u7236\u8282\u70B9</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> end<span class="token operator">&amp;&amp;</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    target <span class="token operator">=</span> left<span class="token punctuation">;</span> <span class="token comment">// \u82E5\u5DE6\u5B50\u8282\u70B9\u6CA1\u8D8A\u754C\uFF0C\u4E0D\u6EE1\u8DB3\u6392\u5E8F\u6761\u4EF6\u5219\u5C06target\u6307\u5411\u5DE6\u5B50\u8282\u70B9</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">&lt;=</span> end <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    target <span class="token operator">=</span> right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">!==</span> parent<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5target\u4E0D\u6307\u5411\u5F53\u524Dparent\uFF0C\u5219\u4EA4\u6362parent\u548Ctarget\u7684\u503C</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>parent<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>parent<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    SortAlgorithm<span class="token punctuation">.</span><span class="token function">heapify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> target<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4EA4\u6362\u540E\u5411\u4E0B\u4F20\u64ADheapify</span>
    <span class="token comment">// SortAlgorithm.heapify(arr, fn, Math.floor((parent - 1) / 2), end); // \u5411\u4E0A\u4F20\u64ADheapify</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">static</span> <span class="token generic-function"><span class="token function">heapSort</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token operator">:</span><span class="token constant">COMPARE</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    SortAlgorithm<span class="token punctuation">.</span><span class="token function">buildHeap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5148\u5BF9\u6570\u7EC4\u5EFA\u5806</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      arr<span class="token punctuation">[</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token comment">// \u5C06\u5806\u9876\u7684\u6700\u5927\u6216\u6700\u5C0F\u503C\u4E0E\u5806\u5C3E\u4EA4\u6362\uFF0C\u5E76\u6807\u8BB0\u4E3A\u5DF2\u6392\u5E8F\u7684\u5B66\u5386\uFF0C\u7F29\u77ED\u5806\u7684\u8282\u70B9\u957F\u5EA6</span>
      SortAlgorithm<span class="token punctuation">.</span><span class="token function">heapify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5806\u5269\u4F59\u7684\u5806\u5143\u7D20\u8FDB\u884C\u5806\u5316\u7EF4\u6301\u6700\u5927\u5806\u6216\u6700\u5C0F\u5806</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-8-\u8BA1\u6570\u6392\u5E8F\u6CD5-countingsort" tabindex="-1"><a class="header-anchor" href="#no-8-\u8BA1\u6570\u6392\u5E8F\u6CD5-countingsort" aria-hidden="true">#</a> NO.8 \u8BA1\u6570\u6392\u5E8F\u6CD5(countingSort)</h2><p>\u8BA1\u6570\u6392\u5E8F\u6CD5\u5C06\u8F93\u5165\u7684\u6570\u636E\u503C\u8F6C\u5316\u4E3A\u952E\u5B58\u50A8\u5728\u989D\u5916\u5F00\u8F9F\u7684\u6570\u7EC4\u7A7A\u95F4\u4E2D\uFF0C\u662F\u4E00\u79CD\u7EBF\u6027\u590D\u6742\u5EA6\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u8BA1\u6570\u6392\u5E8F\u8981\u6C42\u8F93\u5165\u7684\u6570\u636E\u5FC5\u987B\u662F\u6709\u786E\u5B9A\u8303\u56F4\u7684\u6574\u6570</p><ul><li>\u6B65\u9AA4</li></ul><ol><li>\u627E\u51FA\u5F85\u6392\u5E8F\u7684\u6570\u7EC4arr\u4E2D\u6700\u5927max\u548C\u6700\u5C0Fmin\u7684\u5143\u7D20\uFF0C\u5F00\u8F9F\u957F\u5EA6\u4E3Amax-min\u7684\u6570\u7EC4C</li><li>\u7EDF\u8BA1arr\u4E2D\u6BCF\u4E2A\u503C\u4E3Ai\u7684\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5B58\u5165\u6570\u7EC4C\u7684\u7B2Ci\u9879</li><li>\u5BF9\u6240\u6709\u7684\u8BA1\u6570\u7D2F\u52A0\uFF08\u4ECEC\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u6BCF\u4E00\u9879\u548C\u524D\u4E00\u9879\u76F8\u52A0\uFF09</li><li>\u53CD\u5411\u586B\u5145\u76EE\u6807\u6570\u7EC4\uFF1A\u5C06\u6BCF\u4E2A\u5143\u7D20i\u653E\u5728\u65B0\u6570\u7EC4\u7684\u7B2CC(i)\u9879\uFF0C\u6BCF\u653E\u4E00\u4E2A\u5143\u7D20\u5C31\u5C06C(i)\u51CF\u53BB1</li></ol><ul><li>\u56FE\u89E3 <img src="`+c+`" alt="countingSort.gif"></li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// TODO:\u5F85\u5B9E\u73B0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,49),b=[v];function g(h,f){return i(),u("div",null,b)}const T=l(m,[["render",g],["__file","tsClassicTop10SortAlgorithm.html.vue"]]);export{T as default};
