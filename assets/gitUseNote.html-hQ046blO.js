import{_ as a,c as e,a as n,o as t}from"./app-1qaynWKj.js";const i={};function o(l,s){return t(),e("div",null,s[0]||(s[0]=[n(`<h1 id="git学习笔记" tabindex="-1"><a class="header-anchor" href="#git学习笔记"><span>git学习笔记</span></a></h1><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h2><p>比较提交之间的不同(--stat表示统计量，即哪些文件不同，取消后可查看详细哪些文件哪些地方不同) <code>git diff &lt;commit id 1&gt; &lt;commit id 2&gt; --stat</code><code>git commit --amend</code>修改上次commit</p><h2 id="暂存指令" tabindex="-1"><a class="header-anchor" href="#暂存指令"><span>暂存指令</span></a></h2><ul><li>暂存<code>git stash push -m &lt;you comment&gt;</code></li><li>查看暂存<code>git stash list</code></li><li>弹出暂存<code>git stash pop &lt;stash id&gt;</code></li><li>丢弃暂存<code>git stash drop &lt;stash id&gt;</code></li></ul><h2 id="git提交" tabindex="-1"><a class="header-anchor" href="#git提交"><span>git提交</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 提交到指定分支，并使用r指定代码审查者</span></span>
<span class="line"><span class="token function">git</span> push origin HEAD:refs/for/<span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span>%r<span class="token operator">=</span><span class="token operator">&lt;</span>评审人邮箱<span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment"># 强推并覆盖远程分支，！！！此命令非常危险，慎用</span></span>
<span class="line"><span class="token function">git</span> push --set-upstream origin <span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-分支管理" tabindex="-1"><a class="header-anchor" href="#git-分支管理"><span>git 分支管理</span></a></h2><h3 id="新增-删除分支" tabindex="-1"><a class="header-anchor" href="#新增-删除分支"><span>新增/删除分支</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>本地分支名<span class="token operator">&gt;</span>  <span class="token comment"># 删除本地分支</span></span>
<span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>本地分支名<span class="token operator">&gt;</span> <span class="token comment">#新增本地分支</span></span>
<span class="line"><span class="token function">git</span> push origin <span class="token operator">&lt;</span>本地分支名<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span> <span class="token comment">#新增远程分支</span></span>
<span class="line"><span class="token function">git</span> branch --set-upstream-to<span class="token operator">=</span><span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span> <span class="token comment">#设置当前本地分支跟踪远程分支</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-r</span> <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span> <span class="token comment">#在本地删除远程分支的关联</span></span>
<span class="line"><span class="token function">git</span> push origin :<span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span> <span class="token comment">#删除远程分支</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="合并分支的几种方式" tabindex="-1"><a class="header-anchor" href="#合并分支的几种方式"><span>合并分支的几种方式</span></a></h3><p>1、快速合并目标分支到当前分支：<code>git merge &lt;目标分支名&gt;</code>(将保留目标分支的commit信息) 2、非快速方式: <code>git merge -no-ff &lt;目标分支名&gt;</code> (将在当前分支创建一个新的节点从而完成合并，但会保留对目标分支commit的引用) 3、squash方式: <code>git merge -squash &lt;目标分支名&gt;</code> (同-no-ff方式，但不会保留对目标分支commit的引用) 另外还有rebase, cherry-pick等方式进行合并，<a href="https://yanhaijing.com/git/2017/07/14/four-method-for-git-merge/" target="_blank" rel="noopener noreferrer">参考资料</a></p><h2 id="ssh生成公钥私钥对" tabindex="-1"><a class="header-anchor" href="#ssh生成公钥私钥对"><span>ssh生成公钥私钥对</span></a></h2><p>生成公钥私钥对<code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>，默认生成路径为.ssh目录中，找到public即可</p>`,14)]))}const c=a(i,[["render",o]]),r=JSON.parse('{"path":"/LinuxNote/gitUseNote.html","title":"git学习笔记","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":2,"title":"暂存指令","slug":"暂存指令","link":"#暂存指令","children":[]},{"level":2,"title":"git提交","slug":"git提交","link":"#git提交","children":[]},{"level":2,"title":"git 分支管理","slug":"git-分支管理","link":"#git-分支管理","children":[{"level":3,"title":"新增/删除分支","slug":"新增-删除分支","link":"#新增-删除分支","children":[]},{"level":3,"title":"合并分支的几种方式","slug":"合并分支的几种方式","link":"#合并分支的几种方式","children":[]}]},{"level":2,"title":"ssh生成公钥私钥对","slug":"ssh生成公钥私钥对","link":"#ssh生成公钥私钥对","children":[]}],"git":{"updatedTime":1651768003000,"contributors":[{"name":"vito","username":"vito","email":"vitotu@qq.com","commits":2,"url":"https://github.com/vito"}],"changelog":[{"hash":"6d8c4ac3800e3c21ae85446ac223ce64a37620ca","time":1651768003000,"email":"vitotu@qq.com","author":"vito","message":"update format"},{"hash":"5d4013bbab22c3330a48db00e3b5401351e82a9e","time":1651510828000,"email":"vitotu@qq.com","author":"vito","message":"move note to github"}]},"filePathRelative":"LinuxNote/gitUseNote.md"}');export{c as comp,r as data};
