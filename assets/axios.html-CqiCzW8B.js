import{_ as n,c as s,o as a,d as e}from"./app-B6Aki9Kt.js";const t={},p=e(`<h1 id="网络请求api与axios" tabindex="-1"><a class="header-anchor" href="#网络请求api与axios"><span>网络请求api与axios</span></a></h1><p>原生网络请求有xhr, fetch api；<br> 另外严格来讲通过jsonp等方式借助<code>&lt;script&gt;</code>或<code>&lt;img&gt;</code>等标签也能发起简单的请求</p><h2 id="xhr" tabindex="-1"><a class="header-anchor" href="#xhr"><span>XHR</span></a></h2><p>XMLHttpRequest是浏览器支持的原生发起请求的api之一，简单示例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  method <span class="token operator">=</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  url <span class="token operator">=</span> <span class="token string">&quot;https://developer.mozilla.org/&quot;</span><span class="token punctuation">;</span></span>
<span class="line">xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">xhr<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取消发送请求</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fetch" tabindex="-1"><a class="header-anchor" href="#fetch"><span>fetch</span></a></h2><p><code>fetch(url, {signal}).then(res =&gt; {}).catch(e =&gt; {})</code><br> 想要取消fetch可使用AbortController api<br> 参考<a href="https://q.shanyue.tech/fe/html/502.html" target="_blank" rel="noopener noreferrer">如何取消请求发送</a></p><h2 id="axios" tabindex="-1"><a class="header-anchor" href="#axios"><span>axios</span></a></h2><p>在浏览器端基于xhr开发</p>`,9),o=[p];function c(i,l){return a(),s("div",null,o)}const u=n(t,[["render",c],["__file","axios.html.vue"]]),h=JSON.parse('{"path":"/network/axios.html","title":"网络请求api与axios","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"XHR","slug":"xhr","link":"#xhr","children":[]},{"level":2,"title":"fetch","slug":"fetch","link":"#fetch","children":[]},{"level":2,"title":"axios","slug":"axios","link":"#axios","children":[]}],"git":{"updatedTime":1677685782000,"contributors":[{"name":"vito","email":"vitotu@qq.com","commits":1}]},"filePathRelative":"network/axios.md"}');export{u as comp,h as data};
