import{_ as o,a as e,b as c,c as l,d as u,e as i}from"./n54.c5ba376b.js";import{_ as k,r,o as d,c as v,f as a,a as p,b as n,d as m,e as s}from"./app.045af633.js";const b={},w=s(`<h1 id="\u57FA\u4E8Etypescript\u5B9E\u73B0\u5251\u6307offer\u4E2D\u7684\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8Etypescript\u5B9E\u73B0\u5251\u6307offer\u4E2D\u7684\u7B97\u6CD5" aria-hidden="true">#</a> \u57FA\u4E8Etypescript\u5B9E\u73B0\u5251\u6307offer\u4E2D\u7684\u7B97\u6CD5</h1><h2 id="\u5355\u4F8B\u6A21\u5F0F-singleton-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5355\u4F8B\u6A21\u5F0F-singleton-\u5B9E\u73B0" aria-hidden="true">#</a> \u5355\u4F8B\u6A21\u5F0F(singleton)\u5B9E\u73B0</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5229\u7528\u95ED\u5305\u6216\u9759\u6001\u53D8\u91CF\u7B49\u65B9\u5F0F\u5B58\u50A8instance\uFF0C\u5206\u79BB\u6784\u9020\u5668\u548C\u5355\u4F8B\u5224\u65AD\u51FD\u6570</span>
<span class="token keyword">class</span> <span class="token class-name">singleton</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> instance<span class="token operator">:</span>singleton<span class="token punctuation">;</span>
  <span class="token keyword">public</span> name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * <span class="token keyword">@description</span>: \u5355\u4F8B\u5224\u65AD\u51FD\u6570\uFF0C\u901A\u8FC7\u6B64\u51FD\u6570\u83B7\u53D6\u5355\u4F8B
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   */</span>
  <span class="token keyword">static</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span>singleton <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>instance <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">singleton</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * <span class="token keyword">@description</span>: \u6D4B\u8BD5\u7528\u4F8B
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   */</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">singleton</span><span class="token punctuation">(</span><span class="token string">&#39;obj1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> obj2 <span class="token operator">=</span> singleton<span class="token punctuation">.</span><span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token string">&#39;obj2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> obj3 <span class="token operator">=</span> singleton<span class="token punctuation">.</span><span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token string">&#39;obj3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1 <span class="token operator">===</span> obj2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2 <span class="token operator">===</span> obj3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
singleton<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD0\u884C\u6D4B\u8BD5\u7528\u4F8B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-3-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-3-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57" aria-hidden="true">#</a> NO. 3\uFF1A\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57</h2><h3 id="\u9898\u76EE\u4E00-\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57</h3><p>\u5728\u4E00\u4E2A\u957F\u5EA6\u4E3An\u7684\u6570\u7EC4\u4E2D\u7D20\u6709\u7684\u6570\u5B57\u90FD\u5728[0, n-1]\u8303\u56F4\u5185\u3002<br> \u8BF7\u627E\u51FA\u6570\u7EC4\u4E2D\u4EFB\u610F\u4E00\u4E2A\u91CD\u590D\u7684\u6570\u5B57\u3002<br> \u4F8B\u5982\uFF0C\u8F93\u5165\u957F\u5EA6\u4E3A7\u7684\u6570\u7EC4{2,3,1,0,2,5,3}\uFF0C\u90A3\u4E48\u5BF9\u5E94\u8F93\u51FA\u7684\u91CD\u590D\u6570\u5B57\u662F2\u62163\uFF0C\u82E5\u6CA1\u6709\u91CD\u590D\u7684\u5143\u7D20\u5219\u76F4\u63A5\u8FD4\u56DE-1.</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u5217\u8868\u4E0B\u6807\u4F5C\u4E3A\u54C8\u5E0C\u8868\uFF0C\u901A\u8FC7\u5143\u7D20\u4E92\u6362\u9010\u6B65\u6784\u5EFA\u54C8\u5E0C\u8868\uFF0C\u82E5\u9047\u5230\u76F8\u7B49\u7684\u6570\u5B57\u5219\u901A\u8FC7\u4E0B\u6807\u7D22\u5F15key\u5FC5\u7136\u80FD\u68C0\u6D4B\u5230\u91CD\u590D\u6570\u5B57</li><li>\u6B65\u9AA4\uFF1A</li></ul><ol><li>\u904D\u5386\u6570\u7EC4\uFF0C\u82E5i\u4F4D\u7F6E\u7684\u503C<code>arr[i]</code>\u4E0D\u7B49\u4E8Ei\uFF0C\u5219\u8FDB\u884C\u6B65\u9AA42</li><li>\u4EE5\u8BE5\u503C\u4E3A\u7D22\u5F15\u5224\u65AD<code>arr[i]</code>\u662F\u5426\u4E0E<code>arr[arr[i]]</code>\u4F4D\u7F6E\u7684\u503C\u76F8\u7B49,\u82E5\u76F8\u7B49\u5219\u8BF4\u660E\u627E\u5230\u91CD\u590D\u7684\u5143\u7D20\uFF0C\u5426\u5219\u8FDB\u884C\u503C\u4EA4\u6362\u3002</li><li>\u4EA4\u6362\u540E\u518D\u6B21\u5224\u65AD\uFF0C\u91CD\u590D\u6B65\u9AA42\uFF0C\u76F4\u5230<code>arr[i] = i</code>\uFF0C\u7EE7\u7EED\u8FDB\u884C\u904D\u5386</li><li>\u904D\u5386\u5B8C\u6210\u8FD8\u6CA1\u6709\u627E\u5230\u91CD\u590D\u7684\u5143\u7D20\u5219\u76F4\u63A5\u8FD4\u56DE-1</li></ol><ul><li>\u603B\u7ED3 \u7B97\u6CD5\u5229\u7528\u4E86\u54C8\u5E0C\u8868\u601D\u60F3\uFF0C\u5229\u7528\u6570\u7EC4\u7684\u7D22\u5F15\u4F5C\u4E3Akey\uFF0C\u6BCF\u4E2A\u6570\u5B57\u6700\u591A\u4EA4\u6362\u4E24\u6B21\u5C31\u80FD\u653E\u5230\u5408\u9002\u7684\u4F4D\u7F6E\uFF0C\u56E0\u6B64\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)</li><li>ts\u89E3\u51B3\u65B9\u6848\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">duplicate</span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// \u4E0D\u6EE1\u8DB3\u9650\u5B9A\u8303\u56F4\u5219\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5F53arr[i] !== arr[arr[i]]\u65F6\uFF0C\u9700\u4EA4\u6362\u503C\uFF0C\u4EA4\u6362\u540Earr[i]\u4F4D\u7F6E\u6EE1\u8DB3\u8BE5\u6761\u4EF6\uFF0C\u4F46i\u4F4D\u7F6E\u4E0D\u4E00\u5B9A\u6EE1\u8DB3\u8BE5\u6761\u4EF6\uFF0C\u56E0\u6B64\u9700\u8981\u52A0\u5165\u5185\u5C42\u5FAA\u73AF\uFF0C\u6B64\u4E3E\u5E76\u4E0D\u4F1A\u589E\u52A0\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u56E0\u4E3A\u540E\u7EED\u7684\u4F4D\u7F6E\u4EE5\u57FA\u672C\u6EE1\u8DB3\u8BE5\u6761\u4EF6\u4E0D\u4F1A\u7EE7\u7EED\u5FAA\u73AF</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          arr<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
          arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> testArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">duplicate</span><span class="token punctuation">(</span>testArr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u63A5\u9898\u76EE\u4E00\u4E2D-\u589E\u52A0\u9650\u5B9A\u6761\u4EF6-\u4E0D\u4FEE\u6539\u6570\u7EC4\u627E\u51FA\u91CD\u590D\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u63A5\u9898\u76EE\u4E00\u4E2D-\u589E\u52A0\u9650\u5B9A\u6761\u4EF6-\u4E0D\u4FEE\u6539\u6570\u7EC4\u627E\u51FA\u91CD\u590D\u7684\u6570\u5B57" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A(\u63A5\u9898\u76EE\u4E00\u4E2D)\u589E\u52A0\u9650\u5B9A\u6761\u4EF6\uFF1A\u4E0D\u4FEE\u6539\u6570\u7EC4\u627E\u51FA\u91CD\u590D\u7684\u6570\u5B57</h3><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A \u5F00\u8F9F\u4E00\u4E2A\u548Carr\u76F8\u540C\u957F\u5EA6\u7684\u6570\u7EC4\uFF0C\u4EE5\u7A7A\u95F4\u6362\u65F6\u95F4</li></ul>`,12),y=s(`<h2 id="no-4-\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#no-4-\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E" aria-hidden="true">#</a> NO.4 \u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E</h2><p>\u5728\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\u4E2D\uFF0C\u6BCF\u4E00\u884C\u90FD\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u9012\u589E\u987A\u5E8F\u6392\u5217\uFF0C\u6BCF\u4E00\u5217\u90FD\u6309\u7167\u4ECE\u4E0A\u5230\u4E0B\u9012\u589E\u7684\u987A\u5E8F\u6392\u5217\uFF0C\u8BF7\u5B8C\u6210\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165\u8FD9\u6837\u7684\u4E8C\u7EF4\u6570\u7EC4\u548C\u4E00\u4E2A\u6574\u6570\uFF0C\u5224\u65AD\u6570\u7EC4\u4E2D\u662F\u5426\u542B\u6709\u8BE5\u6574\u6570.</p><ul><li>\u89E3\u9898\u601D\u8DEF:</li></ul><ol><li>\u9996\u5148\u9009\u53D6\u6570\u7EC4\u53F3\u4E0A\u89D2\u7684\u6570\u5B57\uFF0C\u5982\u679C\u8BE5\u6570\u5B57\u5927\u4E8E\u76EE\u6807\u6570\u5B57\u5219\u6392\u9664\u8BE5\u5217\uFF0C\u5C0F\u4E8E\u5219\u6392\u9664\u8BE5\u884C</li><li>\u5411\u4E0B\u6216\u5411\u5DE6\u79FB\u52A8\u6307\u9488\uFF0C\u76F4\u5230\u7B49\u4E8E\u76EE\u6807\u6216\u8005\u8303\u56F4\u4E3A\u7A7A\u505C\u6B62</li></ol><ul><li>\u603B\u7ED3 \u5176\u672C\u8D28\u662F\u4E8C\u5206\u67E5\u627E\u6CD5\u7684\u53D8\u4F53\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(m+n)</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">findInArr</span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        j<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> testArr <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">findInArr</span><span class="token punctuation">(</span>testArr<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-5-\u66FF\u6362\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#no-5-\u66FF\u6362\u7A7A\u683C" aria-hidden="true">#</a> NO.5 \u66FF\u6362\u7A7A\u683C</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u628A\u5B57\u7B26\u4E32\u4E2D\u7684\u6BCF\u4E2A\u7A7A\u683C\u66FF\u6362\u6210&quot;%20&quot;\u3002\u4F8B\u5982\uFF0C\u8F93\u5165&quot;We are happy.&quot;\uFF0C\u5219\u8F93\u51FA&quot;We%20are%20happy.&quot;\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A</li></ul><ol><li>\u5148\u904D\u5386\u4E00\u904D\u5B57\u7B26\u4E32\u7EDF\u8BA1\u7A7A\u683C\u7684\u4E2A\u6570</li><li>\u7136\u540E\u5206\u914D\u8DB3\u591F\u7684\u5B58\u50A8\u7A7A\u95F4</li><li>\u4ECE\u540E\u5411\u524D\u7684\u4F9D\u6B21\u66FF\u6362\u7A7A\u683C (\u7B97\u6CD5\u65F6\u95F4\u6548\u7387O(n))</li></ol><ul><li>\u603B\u7ED3 \u6B64\u9898\u8003\u5BDF\u6570\u7EC4\u5408\u5E76\uFF0C\u4ECE\u540E\u5411\u524D\u586B\u5145\u6570\u7EC4\u53EF\u51CF\u5C11\u79FB\u52A8\u6B21\u6570\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n) ps:\u4F7F\u7528js\u539F\u751F\u65B9\u6CD5<code>str.split(&#39; &#39;).join(&#39;%20&#39;)</code>\u65B9\u6CD5\u5373\u53EF\u5B9E\u73B0\uFF0C\u4F46\u65E0\u6CD5\u4F53\u73B0\u8003\u5BDF\u70B9</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span>s<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> length <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>count<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tail <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> target <span class="token operator">=</span> length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>tail <span class="token operator">!==</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        data<span class="token punctuation">[</span>tail<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">;</span>
        data<span class="token punctuation">[</span>tail<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">;</span>
        data<span class="token punctuation">[</span>tail<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;%&#39;</span><span class="token punctuation">;</span>
        target<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        data<span class="token punctuation">[</span>tail<span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>target<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> testArr <span class="token operator">=</span> <span class="token string">&#39;We Are Happy.&#39;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">replaceSpace</span><span class="token punctuation">(</span>testArr<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-6-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#no-6-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" aria-hidden="true">#</a> NO. 6\uFF1A \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u8282\u70B9\uFF0C\u4ECE\u5C3E\u5230\u5934\u53CD\u8FC7\u6765\u6253\u5370\u51FA\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\u3002<br> \u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u6808\u7684\u5148\u8FDB\u540E\u51FA\u7279\u6027\u5B58\u50A8\u94FE\u8868\u7136\u540E\u518D\u8F93\u51FA(\u6216\u8005\u5229\u7528\u9012\u5F52\u51FD\u6570) ts\u5B9E\u73B0</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">,</span>
  next<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">NumberNode</span> <span class="token keyword">implements</span> <span class="token class-name">ListNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> next<span class="token operator">:</span>NumberNode<span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>head<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> res<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> testArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NumberNode</span><span class="token punctuation">(</span>testArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NumberNode</span><span class="token punctuation">(</span>testArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    Demo<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-7-\u91CD\u5EFA\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#no-7-\u91CD\u5EFA\u4E8C\u53C9\u6811" aria-hidden="true">#</a> NO.7 \u91CD\u5EFA\u4E8C\u53C9\u6811</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u67D0\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\uFF0C\u8BF7\u91CD\u5EFA\u8BE5\u4E8C\u53C9\u6811\u3002\u5047\u8BBE\u8F93\u5165\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u4E2D\u90FD\u4E0D\u542B\u91CD\u590D\u6570\u5B57\u3002\u4F8B\u5982\u8F93\u5165\u524D\u5E8F\u904D\u5386\u5E8F\u5217{1,2,4,7,3,5,6,8}\u548C\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217{4,7,2,1,5,3,8,6}\uFF0C\u5219\u91CD\u5EFA\u5982\u4E0B\u5165\u7684\u4E8C\u53C9\u6811\u5E76\u8F93\u51FA\u5B83\u7684\u5934\u8282\u70B9\u3002</p><ul><li>\u89E3\u6790 \u524D\u5E8F\u904D\u5386:\u6839\u5DE6\u53F3\uFF1B\u4E2D\u5E8F\u904D\u5386\uFF1A\u5DE6\u6839\u53F3\uFF1B\u540E\u5E8F\u904D\u5386\uFF1A\u5DE6\u53F3\u6839</li><li>\u601D\u8DEF <ol><li>\u524D\u5E8F\u5E8F\u5217\u4E2D\u7B2C\u4E00\u4E2A\u6570\u4E3A\u6839\u8282\u70B9parent</li><li>\u627E\u5230\u4E2D\u5E8F\u5E8F\u5217\u4E2Dparent\u7684\u4F4D\u7F6E\uFF0C\u5176\u524D\u65B9\u4E3A\u5DE6\u5B50\u6811\uFF0C\u540E\u65B9\u4E3A\u53F3\u5B50\u6811</li><li>\u6839\u636E\u4E2D\u5E8F\u5E8F\u5217\u4E2D\u5DE6\u53F3\u5B50\u6811\u7684\u957F\u5EA6\u5728\u524D\u5E8F\u5E8F\u5217\u4E2D\u5206\u5272\u5DE6\u53F3\u5B50\u6811</li><li>\u91CD\u590D1-3\u6B65\u9AA4\uFF0C\u9012\u5F52\u7684\u91CD\u5EFA\u5DE6\u53F3\u5B50\u6811</li></ol></li><li>\u56FE\u4F8B <img src="`+o+'" alt="n7-01.png"></li></ul><p><img src="'+e+`" alt="n7-02.png"></p><ul><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span>
  left<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span><span class="token punctuation">;</span>
  right<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">,</span> left<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> right<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> left<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">preRoot</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>root<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5B9A\u4E49\u524D\u5E8F\u904D\u5386\u7B97\u6CD5\uFF0C\u7528\u4E8E\u6D4B\u8BD5\u7528\u4F8B\u6821\u9A8C</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token operator">?.</span>left<span class="token punctuation">)</span> TreeNode<span class="token punctuation">.</span><span class="token function">preRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token operator">?.</span>right<span class="token punctuation">)</span> TreeNode<span class="token punctuation">.</span><span class="token function">preRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">rebuildTree</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>pre<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vin<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indexArr<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">undefined</span><span class="token punctuation">{</span>
    <span class="token comment">// \u82E5\u672A\u4F20\u5165\u7D22\u5F15\u6570\u7EC4\uFF0C\u5219\u8FDB\u884C\u521D\u59CB\u5316</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>indexArr<span class="token punctuation">)</span> indexArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> pre<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> vin<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u82E5\u524D\u5E8F\u548C\u4E2D\u5E8F\u957F\u5EA6\u4E0D\u76F8\u7B49\uFF0C\u5219\u629B\u51FA\u9519\u8BEF</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> indexArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;pre.length must eq vin.length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u82E5\u957F\u5EA6\u540C\u4E3A0 \u5219\u76F4\u63A5\u8FD4\u56DEundefined</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> indexArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7ECF\u8FC7\u524D\u9762\u7684\u6761\u4EF6\u5224\u65AD\uFF0C\u786E\u5B9A\u524D\u5E8F\u548C\u4E2D\u5E8F\u957F\u5EA6\u76F8\u7B49\uFF0C\u4E14\u81F3\u5C11\u6709\u4E00\u4E2A\u8282\u70B9\uFF0C\u56E0\u6B64\u521D\u59CB\u5316\u6839\u8282\u70B9</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>pre<span class="token punctuation">[</span>indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u82E5\u957F\u5EA6\u4E3A1\u5219\u76F4\u63A5\u8FD4\u56DE\u8BE5\u6839\u8282\u70B9</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> indexArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u6839\u8282\u70B9\u5728\u4E2D\u5E8F\u4E2D\u7684\u7D22\u5F15\u4F4D\u7F6E\uFF0C\u7136\u540E\u8BA1\u7B97\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u7684\u957F\u5EA6</span>
    <span class="token keyword">let</span> vinRoot <span class="token operator">=</span> vin<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>pre<span class="token punctuation">[</span>indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> leftLen <span class="token operator">=</span> vinRoot <span class="token operator">-</span> indexArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> rightLen <span class="token operator">=</span> indexArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> vinRoot <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// vinRoot + 1 \u624D\u662F\u53F3\u5B50\u6811\u8D77\u70B9</span>
    <span class="token comment">// \u9012\u5F52\u7684\u5BF9\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u8FDB\u884C\u91CD\u5EFA</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> leftLen <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span>Demo<span class="token punctuation">.</span><span class="token function">rebuildTree</span><span class="token punctuation">(</span>
      pre<span class="token punctuation">,</span> 
      vin<span class="token punctuation">,</span>
      <span class="token comment">// \u786E\u5B9A\u524D\u5E8F\uFF0C\u4E2D\u5E8F\u4E2D\u7684\u5DE6\u5B50\u6811\u7684\u8D77\u70B9\u548C\u7EC8\u70B9(\u4E0D\u542B\u7EC8\u70B9),\u4F20\u5165\u7D22\u5F15\u6570\u7EC4</span>
      <span class="token punctuation">[</span>
        indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> 
        indexArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> leftLen<span class="token punctuation">,</span>
        indexArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        indexArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> leftLen
      <span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> rightLen <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> Demo<span class="token punctuation">.</span><span class="token function">rebuildTree</span><span class="token punctuation">(</span>
      pre<span class="token punctuation">,</span>
      vin<span class="token punctuation">,</span>
      <span class="token punctuation">[</span>
        indexArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> rightLen<span class="token punctuation">,</span>
        indexArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        indexArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> rightLen<span class="token punctuation">,</span>
        indexArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> vin <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">rebuildTree</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> vin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    TreeNode<span class="token punctuation">.</span><span class="token function">preRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u524D\u5E8F\u904D\u5386\uFF1A&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span>pre<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-8-\u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#no-8-\u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9" aria-hidden="true">#</a> NO.8 \u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9</h2><p>\u9898\u76EE\uFF1A\u7ED9\u5B9A\u4E00\u9897\u4E8C\u53C9\u6811\u548C\u5176\u4E2D\u7684\u4E00\u4E2A\u8282\u70B9\uFF0C\u5982\u4F55\u627E\u51FA\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF1F\u6811\u4E2D\u7684\u8282\u70B9\u9664\u4E86\u6709\u4E24\u4E2A\u5206\u522B\u6307\u5411\u5DE6\u3001\u53F3\u5B50\u8282\u70B9\u7684\u6307\u9488\uFF0C\u8FD8\u6709\u4E00\u4E2A\u6307\u5411\u7236\u8282\u70B9\u7684\u6307\u9488\u3002</p><ul><li><p>\u601D\u8DEF\uFF1A</p><ol><li>\u82E5\u8BE5\u5B50\u8282\u70B9\u6709\u53F3\u5B50\u6811\uFF0C\u5219\u53F3\u5B50\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u7B2C\u4E00\u4E2A\u8282\u70B9\u5373\u4E3A\u4E0B\u4E00\u4E2A\u8282\u70B9</li><li>\u82E5\u65E0\u53F3\u5B50\u6811\uFF0C\u4E14\u662F\u5176\u7236\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\uFF0C\u5219\u4E0B\u4E00\u4E2A\u8282\u70B9\u4E3A\u7236\u8282\u70B9</li><li>\u82E5\u65E0\u53F3\u5B50\u6811\uFF0C\u4E14\u4E3A\u7236\u8282\u70B9\u7684\u53F3\u8282\u70B9\uFF0C\u5219\u5411\u4E0A\u904D\u5386\uFF0C\u76F4\u5230\u627E\u5230\u4E00\u4E2A\u8282\u70B9\u4E3A\u5176\u7236\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\uFF0C\u5219\u8BE5\u8282\u70B9\u7684\u7236\u8282\u70B9\u4E3A\u4E0B\u4E00\u4E2A\u8282\u70B9</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">NextVinNode</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>p<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">firstVinNode</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">===</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> p<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> target <span class="token operator">=</span> p<span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">!==</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        target <span class="token operator">=</span> target<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> target<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">firstVinNode</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>p<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">firstVinNode</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> p<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u672C\u6B21\u6D4B\u8BD5\u7528\u4F8B\u9700\u8981\u91CD\u5EFA\u4E8C\u53C9\u6811\uFF0C\u4E14\u4E8C\u53C9\u6811\u4E2D\u542Bparent\u7236\u8282\u70B9\uFF0C\u4E0D\u80FD\u5171\u7528NO.7\u4E2D\u7684\u91CD\u5EFA\u65B9\u6CD5</span>
    <span class="token comment">// \u56E0\u6B64\u6682\u4E0D\u5B9E\u73B0\uFF0C\u7B97\u6CD5\u5DF2\u5728\u725B\u5BA2\u7F51\u4E2D\u9A8C\u8BC1\u901A\u8FC7</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-9-\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#no-9-\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217" aria-hidden="true">#</a> NO.9 \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217</h2><p>\u9898\u76EE\uFF1A\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u4E00\u4E2A\u961F\u5217\u3002\u961F\u5217\u7684\u58F0\u660E\u5982\u4E0B\uFF0C\u8BF7\u5B9E\u73B0\u5B83\u7684\u4E24\u4E2A\u51FD\u6570appendTail\u548CdeleteHead\uFF0C\u5206\u522B\u5B8C\u6210\u5728\u961F\u5217\u5C3E\u90E8\u63D2\u5165\u8282\u70B9\u5728\u961F\u5217\u5934\u90E8\u5220\u9664\u8282\u70B9\u7684\u529F\u80FD\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li>\u5229\u7528\u68081\u5165\u961F\uFF0C\u5728\u68082\u4E3A\u7A7A\u65F6\u5C06\u68081\u4E2D\u7684\u5143\u7D20\u901A\u8FC7\u51FA\u6808\uFF0C\u518D\u5165\u6808\u7684\u65B9\u5F0F\u8F6C\u79FB\u5230\u68082\u4E2D\u5B9E\u73B0\u53CD\u5E8F</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  stack1<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  stack2<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span>node<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack2<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>stack2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack2<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>stack2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stack2<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> testData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>testData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result: &#39;</span><span class="token punctuation">,</span> testData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Queue<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-10-\u6590\u6CE2\u62C9\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#no-10-\u6590\u6CE2\u62C9\u5951\u6570\u5217" aria-hidden="true">#</a> NO.10 \u6590\u6CE2\u62C9\u5951\u6570\u5217</h2><h3 id="\u9898\u76EE1-\u6C42\u6590\u6CE2\u62C9\u5951\u6570\u5217\u7684\u7B2Cn\u9879" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE1-\u6C42\u6590\u6CE2\u62C9\u5951\u6570\u5217\u7684\u7B2Cn\u9879" aria-hidden="true">#</a> \u9898\u76EE1\uFF1A\u6C42\u6590\u6CE2\u62C9\u5951\u6570\u5217\u7684\u7B2Cn\u9879</h3><p>[\u6590\u6CE2\u62C9\u5951\u6570\u5217\u5B9A\u4E49] f(n) = f(n-1) + f(n-2)\u3001f(0) = 0\u3001f(1) = 1</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A <ol><li>\u53EF\u4EE5\u7528\u9012\u5F52\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\uFF0C\u4F46\u7B97\u6CD5\u6548\u7387\u4F4E\uFF0C\u4F7F\u7528\u5FAA\u73AF\u6765\u4EE3\u66FF\u9012\u5F52\u4F1A\u66F4\u597D\uFF0C\u5FAA\u73AF\u7684\u65B9\u5F0F\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)</li><li>\u8FD8\u53EF\u901A\u8FC7\u77E9\u9635\u5FEB\u901F\u6C42\u5E42\u7684\u65B9\u5F0F\u8BA1\u7B97\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(log(n))\uFF0C\u8FDB\u4E00\u6B65\u7684\u53EF\u901A\u8FC7\u77E9\u9635\u7279\u5F81\u503C\u53CA\u7279\u5F81\u5411\u91CF\u6C42\u51FA\u6570\u5217\u901A\u9879\uFF0C\u4ECE\u800C\u5B9E\u73B0O(1)\u65F6\u95F4\u590D\u6742\u5EA6</li></ol></li></ul><h3 id="\u9898\u76EE2-\u9752\u86D9\u8DF3\u53F0\u9636\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE2-\u9752\u86D9\u8DF3\u53F0\u9636\u95EE\u9898" aria-hidden="true">#</a> \u9898\u76EE2\uFF1A\u9752\u86D9\u8DF3\u53F0\u9636\u95EE\u9898</h3><p>\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A\u4E00\u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A2\u7EA7\u53F0\u9636\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2An\u7EA7\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002</p><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li>\u8BBE\u6709f(n)\u79CD\u65B9\u6CD5\uFF0C</li><li>n=1\u65F6f(1) = 1,</li><li>n=2\u65F6f(2) = 2\uFF0C</li><li>n&gt;2\u65F6\uFF0C\u5148\u8DF3\u4E00\u7EA7\uFF0C\u5269\u4F59\u8FD8\u6709f(n-1)\u79CD\u65B9\u6CD5\uFF0C\u5148\u8DF32\u7EA7\uFF0C\u5269\u4F59\u8FD8\u6709f(n-2)\u79CD\u65B9\u6CD5\uFF0C\u6240\u4EE5f(n) = f(n-1) + f(n-2)\uFF0C\u56E0\u6B64\u4E0E\u6590\u6CE2\u62C9\u5951\u6570\u5217\u76F8\u4F3C</li><li>\u4E3A\u4FDD\u8BC1\u5927\u6570\u76F8\u52A0\u65F6\u6574\u6570\u4E0D\u6EA2\u51FA\uFF0C\u901A\u5E38\u9700\u8981\u5148\u5BF9\u76F8\u52A0\u7ED3\u679C1e9+7\u53D6\u4F59</li></ol><ul><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5217\u7EA6\u5B9A\u521D\u59CB\u503C</span>
    n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> p<span class="token punctuation">[</span>n <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> mod <span class="token operator">=</span> <span class="token number">1e9</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">;</span> <span class="token comment">// \u5BF9\u8BE5\u6570\u53D6\u4F59\u80FD\u4FDD\u8BC1\u5927\u6570\u76F8\u52A0\u65F6\u4E0D\u6EA2\u51FA</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>
      p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> testData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">6</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">===</span> testData<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-11-\u65CB\u8F6C\u6570\u7EC4\u4E2D\u7684\u6700\u5C0F\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-11-\u65CB\u8F6C\u6570\u7EC4\u4E2D\u7684\u6700\u5C0F\u6570\u5B57" aria-hidden="true">#</a> NO.11 \u65CB\u8F6C\u6570\u7EC4\u4E2D\u7684\u6700\u5C0F\u6570\u5B57</h2><p>\u9898\u76EE\uFF1A\u628A\u4E00\u4E2A\u6570\u7EC4\u6700\u5F00\u59CB\u7684\u82E5\u5E72\u4E2A\u5143\u7D20\u642C\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u6211\u4EEC\u79F0\u4E4B\u4E3A\u6570\u7EC4\u7684\u65CB\u8F6C\u3002\u8F93\u5165\u4E00\u4E2A\u9012\u589E\u6392\u5E8F\u7684\u6570\u7EC4\u7684\u4E00\u4E2A\u65CB\u8F6C\uFF0C\u8F93\u51FA\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u5143\u7D20\u3002\u4F8B\u5982\uFF0C\u6570\u7EC4[3,4,5,1,2]\u4E3A[1,2,3,4,5]\u7684\u4E00\u4E2A\u65CB\u8F6C\uFF0C\u8BE5\u6570\u7EC4\u7684\u6700\u5C0F\u503C\u4E3A1.</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A \u65CB\u8F6C\u540E\u7684\u6392\u5E8F\u6570\u7EC4\u662F\u7531\u4E24\u4E2A\u5DF2\u6392\u597D\u5E8F\u7684\u5B50\u6570\u7EC4\u7EC4\u6210\uFF0C \u5229\u7528\u5BF9\u649E\u6307\u9488\u7684\u4E8C\u5206\u67E5\u627E\u6CD5\u9010\u6B65\u7F29\u5C0F\u67E5\u627E\u8303\u56F4\uFF0C \u4F46\u82E5\u9047\u4E0A\u5927\u91CF\u91CD\u590D\u6570\u5B57\u65F6\uFF0C\u9700\u8981\u904D\u5386\u5B50\u6570\u7EC4\u8FDB\u884C\u67E5\u627E(\u7B97\u6CD5\u57FA\u4E8E\u4E8C\u5206\u67E5\u627E\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(log(n)))</p><ol><li>\u5B9A\u4E49start\u3001mid\u3001end\u4E09\u4E2A\u6307\u9488\uFF0C\u5206\u522B\u6307\u5411\u6570\u7EC4\u7684\u8D77\u59CB\u3001\u4E2D\u95F4\u3001\u672B\u5C3E</li><li>\u82E5\u5269\u4F59\u5E8F\u5217\u957F\u5EA6\u4E3A2\uFF0C\u5219end\u4E00\u5B9A\u4E3A\u6700\u5C0F\u7684\u5143\u7D20\uFF0Cmid\u6307\u5411end\uFF0C\u8DF3\u51FA\u5FAA\u73AF</li><li>\u53D6mid = start + (end - start) / 2 \u5373\u6B63\u4E2D\u95F4\u4F4D\u7F6E</li><li>\u82E5start\u3001mid\u3001end\u6240\u6307\u5411\u7684\u5143\u7D20\u90FD\u76F8\u7B49\uFF0C\u5219\u65E0\u6CD5\u5224\u65AD\u6700\u5C0F\u503C\u4F4D\u4E8E\u5DE6\u5B50\u5E8F\u5217\u8FD8\u662F\u53F3\u5B50\u5E8F\u5217\uFF0C\u53EA\u80FD\u5BF9\u5E8F\u5217\u8FDB\u884C\u904D\u5386\u53D6\u5F97\u6700\u5C0F\u503C</li><li>\u82E5start\u7684\u5143\u7D20\u5C0F\u4E8E\u6216\u7B49\u4E8Emid\u7684\u5143\u7D20\uFF0C\u5219\u8BF4\u660E\u6700\u5C0F\u5143\u7D20\u5728\u53F3\u5B50\u5E8F\u5217\uFF0C\u82E5end\u7684\u5143\u7D20\u5927\u4E8E\u6216\u7B49\u4E8Emid\u5219\u8BF4\u660E\u6700\u5C0F\u5143\u7D20\u5728\u5DE6\u5B50\u5E8F\u5217</li><li>\u9012\u5F52\u7684\u91CD\u590D2-5\u6B65\u9AA4\uFF0C\u76F4\u5230start\u7684\u5143\u7D20\u5927\u4E8E\u6216\u7B49\u4E8Eend\u4E0D\u6210\u7ACB\uFF0C\u6700\u540E\u80FD\u4FDD\u8BC1mid\u6307\u5411\u6700\u5C0F\u5143\u7D20</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">Min</span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> mid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> end <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mid <span class="token operator">=</span> end<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">+</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">===</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">_MinInOrder</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        start <span class="token operator">=</span> mid<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        end <span class="token operator">=</span> mid
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_MinInOrder</span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> start<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> result<span class="token punctuation">)</span><span class="token punctuation">{</span>
        result <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> testData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>testData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#no-12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84" aria-hidden="true">#</a> NO. 12\uFF1A\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84</h2><p>\u9898\u76EE\uFF1A \u8BF7\u8BBE\u8BA1\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u5224\u65AD\u5728\u4E00\u4E2A\u77E9\u9635\u4E2D\u662F\u5426\u5B58\u5728\u4E00\u6761\u5305\u542B\u67D0\u5B57\u7B26\u4E32\u7684\u6240\u6709\u5B57\u7B26\u7684\u8DEF\u5F84\u3002<br> \u8DEF\u5F84\u53EF\u4EE5\u4ECE\u77E9\u9635\u4E2D\u7684\u4EFB\u610F\u4E00\u683C\u5F00\u59CB\uFF0C\u6BCF\u4E00\u6B65\u53EF\u4EE5\u5728\u77E9\u9635\u4E2D\u5411\u5DE6\u3001\u53F3\u3001\u4E0A\u3001\u4E0B\u79FB\u52A8\u4E00\u683C\u3002<br> \u5982\u679C\u4E00\u6761\u8DEF\u5F84\u7ECF\u8FC7\u4E86\u77E9\u9635\u7684\u67D0\u4E00\u683C\uFF0C\u90A3\u4E48\u8BE5\u8DEF\u5F84\u4E0D\u80FD\u518D\u6B21\u8FDB\u5165\u8BE5\u683C\u5B50\u3002<br> \u4F8B\u5982\uFF0C\u5728\u4E0B\u9762\u76843*4\u7684\u77E9\u9635\u4E2D\u5305\u542B\u4E00\u6761\u5B57\u7B26\u4E32\u201Cbfce\u201D\u7684\u8DEF\u5F84(\u8DEF\u5F84\u4E2D\u7684\u5B57\u6BCD\u7528\u5927\u5199\u6807\u51FA)\u3002<br> \u4F46\u77E9\u9635\u4E2D\u4E0D\u5305\u542B\u5B57\u7B26\u4E32\u201Cabfb\u201D\u7684\u8DEF\u5F84\uFF0C\u56E0\u4E3A\u5B57\u7B26\u4E32\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26b\u5360\u636E\u4E86\u77E9\u9635\u4E2D\u7684\u7B2C\u4E00\u884C\u7B2C\u4E8C\u4E2A\u683C\u5B50\u540E\uFF0C\u8DEF\u5F84\u4E0D\u80FD\u518D\u6B21\u8FDB\u5165\u8FD9\u4E2A\u683C\u5B50\u3002 $$\\begin{matrix} a&amp;B&amp;t&amp;g\\ c&amp;F&amp;C&amp;s\\ j&amp;d&amp;E&amp;h\\ \\end{matrix}$$</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u56DE\u6EAF\u6CD5\uFF0C\u82E5\u5F53\u524D\u8DEF\u5F84\u4E0D\u901A\uFF0C\u5219\u56DE\u6EAF\u4E0A\u4E00\u8282\u70B9\uFF0C\u5C1D\u8BD5\u672A\u5C1D\u8BD5\u8FC7\u7684\u8DEF\u5F84</p><ol><li>\u7EF4\u62A4\u4E00\u4E2A\u8BBF\u95EE\u77E9\u9635visited\uFF0C\u82E5\u5BF9\u5E94\u4F4D\u7F6E\u88AB\u5360\u636E\u5219\u8BB0\u4E3Atrue\uFF0C\u904D\u5386\u76EE\u6807\u77E9\u9635matrix\uFF0C</li><li>\u6307\u9488p\u6240\u6307\u5411\u7684str\u4E2D\u7684\u5B57\u7B26\uFF0C\u82E5\u7B49\u4E8E\u904D\u5386\u4F4D\u7F6E\u7684\u5B57\u7B26\uFF0C\u5219\u5C06\u6307\u9488p\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5E76\u6807\u8BB0visited\uFF0C\u9012\u5F52\u5224\u65AD\u5B57\u7B26\u4E0A\u4E0B\u5DE6\u53F3\u4F4D\u7F6E\u662F\u5426\u5B58\u5728\u79FB\u52A8\u540E\u7684p\u6307\u5411\u7684\u5B57\u7B26</li><li>\u82E5\u4E0D\u5B58\u5728\u5219\u56DE\u6EAF\uFF0Cp\u6307\u9488\u56DE\u9000\u4E00\u6B65\uFF0C\u5E76\u8FD8\u539F\u6807\u8BB0visited\uFF0C\u7ED3\u675F\u8BE5\u8282\u70B9\u7684\u9012\u5F52</li><li>\u82E5\u4E00\u76F4\u6EE1\u8DB3\u6B65\u9AA42\u4E2D\u7684\u6761\u4EF6\uFF0C\u5219\u9012\u5F52\u7ED3\u675F\u6761\u4EF6\u4E3Ap\u5927\u4E8Estr\u957F\u5EA6\uFF0C\u5E76\u8FD4\u56DEtrue\u8868\u793A\u627E\u5230\u8DEF\u5F84</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">hasPath</span><span class="token punctuation">(</span>mat<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> mat<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// debugger</span>
    <span class="token keyword">let</span> rows <span class="token operator">=</span> mat<span class="token punctuation">.</span>length<span class="token punctuation">,</span> columns <span class="token operator">=</span> mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> pathLen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> visited<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> 
      <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> columns<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">_hasPathCore</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> pathLen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_hasPathCore</span><span class="token punctuation">(</span>mat<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> i<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> j<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> visited<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pathLen<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pathLen <span class="token operator">&gt;=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> mat<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span>mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> mat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> str<span class="token punctuation">[</span>pathLen<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      pathLen<span class="token operator">++</span><span class="token punctuation">;</span>
      visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      result <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">_hasPathCore</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> visited<span class="token punctuation">,</span> pathLen<span class="token punctuation">)</span> <span class="token operator">||</span> 
      Demo<span class="token punctuation">.</span><span class="token function">_hasPathCore</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> pathLen<span class="token punctuation">)</span> <span class="token operator">||</span> 
      Demo<span class="token punctuation">.</span><span class="token function">_hasPathCore</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> visited<span class="token punctuation">,</span> pathLen<span class="token punctuation">)</span> <span class="token operator">||</span> 
      Demo<span class="token punctuation">.</span><span class="token function">_hasPathCore</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> pathLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pathLen<span class="token operator">--</span><span class="token punctuation">;</span>
        visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> testData <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token string">&#39;j&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;h&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">hasPath</span><span class="token punctuation">(</span>testData<span class="token punctuation">,</span> <span class="token string">&#39;abfb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#no-13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4" aria-hidden="true">#</a> NO.13 \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4</h2><p>\u9898\u76EE\uFF1A\u5730\u4E0A\u6709\u4E00\u4E2Am\xD7n\u7684\u65B9\u683C\u3002\u4E00\u4E2A\u673A\u5668\u4EBA\u4ECE\u5750\u6807(0, 0)\u7684\u683C\u5B50\u5F00\u59CB\u79FB\u52A8\uFF0C\u5B83\u6BCF\u6B21\u53EF\u4EE5\u5411\u5DE6\u3001\u53F3\u3001\u4E0A\u3001\u4E0B\u79FB\u52A8\u4E00\u683C\uFF0C\u4F46\u4E0D\u80FD\u8FDB\u5165\u884C\u5750\u6807\u548C\u5217\u5750\u6807\u7684\u4F4D\u6570\u4E4B\u548C\u5927\u4E8Ek\u7684\u683C\u5B50\u3002\u4F8B\u5982\uFF0C\u5F53k=18\u65F6\uFF0C\u673A\u5668\u4EBA\u80FD\u591F\u8FDB\u5165\u65B9\u683C(35,37),\u56E0\u4E3A3+5+3+7=18\u3002\u4F46\u5B83\u4E0D\u80FD\u8FDB\u5165\u65B9\u683C(35, 38)\uFF0C\u56E0\u4E3A3+5+3+8=19\u3002\u8BF7\u95EE\u8BE5\u673A\u5668\u4EBA\u80FD\u591F\u5230\u8FBE\u591A\u5C11\u4E2A\u683C\u5B50\uFF1F</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u56E0\u4E3A\u673A\u5668\u4EBA\u6BCF\u6B21\u53EA\u80FD\u79FB\u52A8\u4E00\u683C\uFF0C\u540C\u6837\u53EF\u4EE5\u5229\u7528\u56DE\u6EAF\u6CD5\u9010\u6B65\u904D\u5386\u80FD\u591F\u5230\u8FBE\u54EA\u4E9B\u683C\u5B50</p><ol><li>\u4F7F\u7528map\u8BB0\u5F55\u673A\u5668\u4EBA\u5DF2\u8BBF\u95EE\u7684\u683C\u5B50\uFF0C\u6A21\u62DFvisited</li><li>\u8BBE\u5B9A\u8D77\u70B9\u4E3A<code>[0,0]</code>\uFF0C\u82E5\u5F53\u524D\u8282\u70B9\u6EE1\u8DB3\u6761\u4EF6k\u53CAvisited\u4E2D\u4E0D\u5B58\u5728\uFF0C\u5219\u5C06\u8282\u70B9\u5750\u6807\u4E3Akey\uFF0C\u52A0\u5165visited\u4E2D\uFF0C\u5E76\u5C06count\u52A01\uFF0C\u5426\u5219\u8FD4\u56DEcount\u7684\u521D\u59CB\u503C0</li><li>\u9012\u5F52\u7684\u5C06\u8282\u70B9\u4E0A\u4E0B\u5DE6\u53F3\u4F4D\u7F6E\u8FDB\u884C\u5224\u65AD\uFF0C\u91CD\u590D2\u6B65\u9AA4\uFF0C\u5E76\u5C06\u8FD4\u56DE\u503C\u52A0\u5165\u5230count\u4E2D</li><li>\u5224\u65AD\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6k\u9700\u8981\u5224\u65AD\u5DE6\u8FB9\u662F\u5426\u6EA2\u51FA\uFF0C\u5E76\u8BA1\u7B97\u4F4D\u6570\u548C\u662F\u5426\u4E0D\u5927\u4E8Ek</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">calcSum</span><span class="token punctuation">(</span>num<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      result <span class="token operator">+=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
      num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">inRange</span><span class="token punctuation">(</span>matRange<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>
      pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>matRange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&gt;=</span><span class="token number">0</span>
      <span class="token operator">&amp;&amp;</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>matRange<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span><span class="token number">0</span>
      <span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span> Demo<span class="token punctuation">.</span><span class="token function">calcSum</span><span class="token punctuation">(</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> Demo<span class="token punctuation">.</span><span class="token function">calcSum</span><span class="token punctuation">(</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token operator">&lt;=</span>target
    <span class="token punctuation">)</span> result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">CountBFC</span><span class="token punctuation">(</span>matRange<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> visited<span class="token operator">:</span>Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> pos<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">inRange</span><span class="token punctuation">(</span>matRange<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span>visited<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      visited<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      count <span class="token operator">+=</span> <span class="token number">1</span> 
        <span class="token operator">+</span> Demo<span class="token punctuation">.</span><span class="token function">CountBFC</span><span class="token punctuation">(</span>matRange<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> <span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
        <span class="token operator">+</span> Demo<span class="token punctuation">.</span><span class="token function">CountBFC</span><span class="token punctuation">(</span>matRange<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> <span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
        <span class="token operator">+</span> Demo<span class="token punctuation">.</span><span class="token function">CountBFC</span><span class="token punctuation">(</span>matRange<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> <span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
        <span class="token operator">+</span> Demo<span class="token punctuation">.</span><span class="token function">CountBFC</span><span class="token punctuation">(</span>matRange<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> <span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">movingCount</span><span class="token punctuation">(</span>target<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> rows<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> cols<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">||</span>rows<span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">||</span>cols<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// debugger</span>
    <span class="token keyword">let</span> visited<span class="token operator">:</span>Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">CountBFC</span><span class="token punctuation">(</span><span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span><span class="token punctuation">,</span> visited<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">movingCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-14-\u526A\u7EF3\u5B50" tabindex="-1"><a class="header-anchor" href="#no-14-\u526A\u7EF3\u5B50" aria-hidden="true">#</a> NO. 14\uFF1A\u526A\u7EF3\u5B50</h2><p>\u9898\u76EE\uFF1A\u7ED9\u4F60\u4E00\u6839\u957F\u5EA6\u4E3An\u7684\u7EF3\u5B50\uFF0C\u8BF7\u628A\u7EF3\u5B50\u526A\u6210m\u6BB5(m,n\u90FD\u662F\u6574\u6570\uFF0Cn&gt;1\u5E76\u4E14m&gt;1)\uFF0C\u6BCF\u6BB5\u7EF3\u5B50\u7684\u957F\u5EA6\u8BB0\u4E3Ak[0],k[1],...,k[m]\u3002\u8BF7\u95EEk[0]<em>k[1]</em>...*k[m]\u53EF\u80FD\u7684\u6700\u5927\u4E58\u79EF\u662F\u591A\u5C11\uFF1F\u4F8B\u5982\uFF0C\u5F53\u7EF3\u5B50\u7684\u957F\u5EA6\u4E3A8\u65F6\uFF0C\u6211\u4EEC\u628A\u4ED6\u526A\u6210\u957F\u5EA6\u5206\u522B\u4E3A2,3,3\u7684\u4E09\u6BB5\uFF0C\u6B64\u65F6\u5F97\u5230\u7684\u6700\u5927\u4E58\u79EF\u662F18.</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u56E0\u4E3A\u662F\u6700\u4F18\u5316\u95EE\u9898\uFF0C\u4E14\u95EE\u9898\u53EF\u5206\uFF0C\u53EF\u8003\u8651\u4F7F\u7528\u52A8\u6001\u89C4\u5212\u6216\u8005\u8D2A\u5A6A\u6CD5\uFF0C\u8BE6\u7EC6\u89C1\u4EE3\u7801\u6587\u6863\u6216\u5251\u6307offer\uFF08\u6CE8\uFF1A\u9898\u76EE\u4E2D\u9700\u8865\u5145\u6761\u4EF6\uFF0Cm\u4E3A\u4EFB\u610F\u6574\u6570\uFF0C\u4E14\u5207\u6210\u7684\u7EF3\u5B50\u957F\u5EA6\u5FC5\u987B\u4E3A\u6574\u6570\uFF09</p><ul><li>\u52A8\u6001\u89C4\u5212\u89E3\u6CD5 <ol><li>\u521B\u5EFA\u957F\u5EA6\u4E3An\u7684\u6570\u7EC4maxLens\u7528\u4E8E\u5B58\u50A8\u5BF9\u5E94\u7D22\u5F15i\u957F\u5EA6\u7684\u7EF3\u5B50\u526A\u65AD\u6700\u5927\u4E58\u79EF\uFF0C\u5219maxLens[n - 1]\u7A0B\u5E8F\u8FD4\u56DE\u503C</li><li>\u53EF\u5C1D\u8BD5\u5148\u526A\u4E0B\u4E00\u6BB5\u957F\u5EA6j\uFF0C\u7136\u540E\u5269\u4F59\u957F\u5EA6\u53EF\u526A\u53EF\u4E0D\u526A\uFF0C</li><li>\u8BB0\u957F\u5EA6\u4E3An\u7684\u7EF3\u5B50\u526A\u65AD\u540E\u7684\u4E58\u79EF\u4E3Af(n),\u5219f(n)=j*(n-j)\u6216f(n)=j*f(n-j),\u53EF\u53D6\u5176\u4E2D\u7684\u6700\u5927\u503C\u8BB0\u4E3AFMax</li><li>\u4ECE2\u5F00\u59CB\u904D\u5386j\uFF0C\u76F4\u5230\u4E0D\u6EE1\u8DB3j &lt;= Math.floor(n / 2)\uFF0C\u6BCF\u6B21\u904D\u5386\u4E2D\u5C06\u8F83\u5927\u7684FmMx\u5B58\u5165<code>maxLens[i]</code></li><li>\u5B9A\u4E49maxLens = [0, 1, 2, 4]\u4E3A\u521D\u59CB\u503C\u5206\u522B\u8868\u793A\u7EF3\u5B50\u957F\u5EA6\u4E3A[1, 2, 3, 4]\u65F6\u7EF3\u5B50\u526A\u65AD\u540E\u6700\u5927\u4E58\u79EF\uFF0C\u4ECE\u957F\u5EA6\u4E3A5\u5F00\u59CB\u904D\u5386\u7EF3\u5B50\u957F\u5EA6i\uFF0C\u76F4\u5230i &lt;= n\uFF0C\u6BCF\u6B21\u904D\u5386\u6267\u884C\u6B65\u9AA44,\u904D\u5386\u5B8C\u6210\u540E\u8FD4\u56DEmaxLens[n - 1]\u5373\u4E3A\u957F\u5EA6\u4E3An\u7684\u7EF3\u5B50\u526A\u65AD\u540E\u7684\u6700\u5927\u4E58\u79EF</li></ol></li></ul></li><li><p>\u8D2A\u5A6A\u7B97\u6CD5\u89E3\u6CD5</p><ol><li>\u5C3D\u53EF\u80FD\u7684\u5C06\u7EF3\u5B50\u5206\u4E3A\u957F\u5EA6\u4E3A3\u7684\u6BB5\uFF0C\u5E76\u4E14\u5269\u4F59\u957F\u5EA6\u5C3D\u53EF\u80FD\u4E3A2\u62164\uFF0C\u4E0D\u53EF\u4E3A1</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u52A8\u6001\u89C4\u5212\u89E3\u6CD5</span>
  <span class="token keyword">static</span> <span class="token function">cuttingRope</span><span class="token punctuation">(</span>len<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> maxLens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">return</span> maxLens<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    maxLens <span class="token operator">=</span> maxLens<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>len <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> product <span class="token operator">=</span> j<span class="token operator">*</span>maxLens<span class="token punctuation">[</span>i<span class="token operator">-</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>maxLens<span class="token punctuation">[</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> product<span class="token punctuation">)</span> maxLens<span class="token punctuation">[</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> product<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>maxLens<span class="token punctuation">[</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> j<span class="token operator">*</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> maxLens<span class="token punctuation">[</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token operator">*</span><span class="token punctuation">(</span>i <span class="token operator">-</span> j<span class="token punctuation">)</span>
        j<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxLens<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// TODO:\u8D2A\u5A6A\u89E3\u6CD5</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">cuttingRope</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-15-\u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#no-15-\u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570" aria-hidden="true">#</a> NO.15 \u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165\u4E00\u4E2A\u6574\u6570\uFF0C\u8F93\u51FA\u8BE5\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D1\u7684\u4E2A\u6570\u3002\u4F8B\u5982\uFF0C\u628A9\u8868\u793A\u6210\u4E8C\u8FDB\u5236\u662F1001\uFF0C\u67092\u4F4D\u662F1\uFF0C\u56E0\u6B64\uFF0C\u8F93\u51659\uFF0C\u5219\u51FD\u6570\u8F93\u51FA2.</p><ul><li><p>\u89E3\u9898\u601D\u8DEF</p><ul><li><p>\u9010\u4F4D\u626B\u63CF</p><ol><li>\u5C06\u6570\u4E0Eflag=1\u8FDB\u884C\u4E0E\u64CD\u4F5C\uFF0C\u6BCF\u6B21flag\u6309\u4F4D\u5DE6\u79FB\uFF0C\u904D\u5386\u6574\u578B\u7684\u4E8C\u8FDB\u5236\u4F4D\u6570(32\u621664)\u540E\u5373\u53EF\u7EDF\u8BA1\u51FA1\u7684\u4E2A\u6570</li></ol></li><li><p>\u51CF1\u7B97\u6CD5</p><ol><li>\u5C06\u4E00\u4E2A\u6574\u6570\u51CF1\uFF0C\u90FD\u662F\u628A\u4E8C\u8FDB\u5236\u4E2D\u6700\u53F3\u8FB9\u76841\u53D8\u62100\uFF0C\u5E76\u4E14\u628A\u5B83\u53F3\u8FB9\u7684\u6240\u67090\u53D8\u62101(\u5373\uFF1A\u6700\u53F3\u8FB9\u7684\u6570\u4E3A1\u65F6\uFF0C\u76F4\u63A5\u53D8\u62100\uFF0C\u6700\u53F3\u8FB9\u7684\u6570\u4E3A0\u65F6\uFF0C\u5C06\u5176\u524D\u65B9\u6700\u8FD1\u7684\u4E00\u4E2A1\u53D8\u4E3A0\uFF0C\u5176\u540E\u7684\u6240\u67090\u53D8\u4E3A1)</li><li>\u56E0\u6B64\uFF0C\u5C06\u6574\u6570n\u505An&amp;(n-1)\u76F8\u5F53\u4E8E\u5C06\u5176\u6700\u53F3\u8FB9\u76841\u53BB\u6389\uFF0C\u56E0\u6B64n&gt;0\u65F6\uFF0C\u53EF\u4EE5\u53CD\u590D\u8FDB\u884C\u6B64\u64CD\u4F5C\uFF0C\u5E76\u7EDF\u8BA11\u7684\u4E2A\u6570</li><li>n\u4E2D\u6709\u591A\u5C11\u4E2A1\u5C31\u9700\u8981\u5FAA\u73AF\u591A\u5C11\u6B21</li></ol></li></ul></li><li><p>ts</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u51CF1\u7B97\u6CD5\u5B9E\u73B0</span>
  <span class="token keyword">static</span> <span class="token function">NumberOf1</span><span class="token punctuation">(</span>n<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// n\u4E0D\u4E3A0 \u8BF4\u660E\u5176\u4E8C\u8FDB\u5236\u4E2D\u8FD8\u67091\uFF0C\u7EE7\u7EED\u904D\u5386\uFF1B</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      n <span class="token operator">=</span> n<span class="token operator">&amp;</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u6B21\u51CF\u6389\u4E8C\u8FDB\u5236\u4E2D\u6700\u53F3\u8FB9\u76841</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">NumberOf1</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" tabindex="-1"><a class="header-anchor" href="#no-16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" aria-hidden="true">#</a> NO. 16\uFF1A\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9</h2><p>\u9898\u76EE\uFF1A\u5B9E\u73B0\u51FD\u6570double Power(double base, int exponent)\uFF0C\u6C42base\u7684exponent\u6B21\u65B9\u3002\u4E0D\u5F97\u4F7F\u7528\u5E93\u51FD\u6570\uFF0C\u540C\u65F6\u4E0D\u9700\u8981\u8003\u8651\u5927\u6570\u95EE\u9898\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u4E8C\u5206\u6CD5\uFF0C\u5BF9exponent\u8FDB\u884C\u5206\u89E3\uFF0C\u6BCF\u6B21\u96642\u53D6\u6574\uFF0C\u540C\u65F6\u5BF9base\u4F7F\u7528\u81EA\u4E58\uFF0C\u5229\u7528\u5DF2\u8BA1\u7B97\u597D\u7684\u503C\uFF0C\u7B97\u6CD5\u590D\u6742\u5EA6\u4E3AO(log2(n))</p></li><li><p>\u6D41\u7A0B</p><ol><li>\u5224\u65ADbase\uFF0Cexponent\u662F\u5426\u4E3A0\uFF0C\u82E5\u4E3A0\u5219\u76F4\u63A5\u5206\u522B\u8FD4\u56DE0\u548C1</li><li>\u82E5exponent &lt; 0 \u5219\u5C06base\u8BBE\u7F6E\u4E3A 1 / base\uFF0Cexponent\u8BBE\u7F6E\u4E3A-exponent\u8F6C\u6362\u4E3A\u6B63\u6570\u7684\u60C5\u51B5</li><li>\u8BBE\u7F6Eres=1\u7528\u4E8E\u7F13\u5B58\u5947\u6570\u7684\u7ED3\u679C\uFF0Cpow=base\u7528\u4E8E\u81EA\u4E58\uFF0C\u904D\u5386\u7ED3\u675F\u540E\u8FD4\u56DEres*pow\uFF0C\u5373\u9ED8\u8BA4\u7ED3\u679C\u4E3Aexponent=1\u7684\u60C5\u51B5</li><li>exponent &gt; 1\u65F6\u8FDB\u884C\u904D\u5386\uFF0C\u6BCF\u6B21\u5224\u65AD\u82E5\u4E3A\u5947\u6570\uFF0C\u5219\u6267\u884Cres*=base\u7D2F\u4E58base\uFF0C\u5E76\u5C06exponent/2\u53D6\u6574\uFF0C\u8FDB\u884C\u4E8C\u5206\uFF0C\u5E76\u6267\u884Cpow*=pow\u7D2F\u79EF\u81EA\u4E58\uFF0C\u5FAA\u73AF\u7ED3\u675F\u540E\u8FD4\u56DEres*pow</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">Power</span><span class="token punctuation">(</span>base<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> exponent<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>base <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>exponent <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>exponent <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      base <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> base<span class="token punctuation">;</span>
      exponent <span class="token operator">=</span> <span class="token operator">-</span>exponent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> base<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>exponent <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>exponent <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result <span class="token operator">*=</span> base<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      exponent <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>exponent <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res <span class="token operator">*=</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token operator">*</span>result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">Power</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-17-\u6253\u5370\u4ECE1\u5230\u6700\u5927\u7684n\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#no-17-\u6253\u5370\u4ECE1\u5230\u6700\u5927\u7684n\u4F4D\u6570" aria-hidden="true">#</a> NO.17 \u6253\u5370\u4ECE1\u5230\u6700\u5927\u7684n\u4F4D\u6570</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u6570\u5B57n\uFF0C\u6309\u987A\u5E8F\u6253\u5370\u51FA\u4ECE1\u5230\u6700\u5927\u7684n\u4F4D\u5341\u8FDB\u5236\u6570\u3002\u6BD4\u5982\u8F93\u51653\uFF0C\u5219\u6253\u5370\u8F93\u51FA1,2,3\u4E00\u76F4\u5230\u6700\u5927\u76843\u4E3A\u6570999.</p><p>\u89E3\u9898\u601D\u8DEF\uFF1A \u82E5\u4E0D\u6D89\u53CA\u5927\u6570\u95EE\u9898\uFF0C\u5219\u4F7F\u7528\u5E38\u89C4\u89E3\u6CD5 \u82E5\u6D89\u53CA\u5230\u5927\u6570\u95EE\u9898\uFF0Ces6\u5185\u7F6E\u7C7B\u578B\u667A\u80FD\u652F\u6301\u5927\u6570bigint\uFF0C\u4F46\u4E3A\u4E86\u8868\u73B0\u7B97\u6CD5\u601D\u60F3\u4E0D\u4F7F\u7528\u5185\u7F6E\u5927\u6570\uFF0C\u8F6C\u800C\u4F7F\u7528list[str]\u6765\u8868\u793A\u5927\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">printNumbers</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">number</span><span class="token operator">*=</span><span class="token number">10</span><span class="token punctuation">;</span>
    n<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token builtin">number</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    result<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-18-\u5220\u9664\u94FE\u8868\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#no-18-\u5220\u9664\u94FE\u8868\u7684\u8282\u70B9" aria-hidden="true">#</a> NO.18 \u5220\u9664\u94FE\u8868\u7684\u8282\u70B9</h2><h3 id="\u9898\u76EE\u4E00-\u5728o-1-\u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u5728o-1-\u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u5728O(1)\u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9</h3><p>\u7ED9\u5B9A\u5355\u5411\u94FE\u8868\u7684\u5934\u6307\u9488\u548C\u4E00\u4E2A\u8282\u70B9\u6307\u9488\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u5728O(1)\u65F6\u95F4\u5185\u5220\u9664\u8BE5\u8282\u70B9\u3002</p><ul><li><p>\u601D\u8DEF\uFF1A \u901A\u8FC7\u590D\u5236\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u5185\u5BB9\u5230\u5F53\u524D\u8282\u70B9\u7684\u65B9\u5F0F\u5220\u9664\u5F53\u524D\u8282\u70B9\uFF0C\u5E76\u4FDD\u5B58\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u65AD\u5F00\u94FE\u63A5\u5E76\u91CD\u65B0\u8FDE\u4E0A\u5F53\u524D\u8282\u70B9\u5373\u53EF\u505A\u5230\u5220\u9664\uFF0C<br> \u82E5\u8981\u5220\u9664\u7684\u8282\u70B9\u6CA1\u6709\u4E0B\u4E00\u4E2A\u8282\u70B9\u5219\u9700\u8981\u4ECE\u5934\u6307\u9488\u5F00\u59CB\u904D\u5386\u94FE\u8868<br> \u82E5\u8981\u5220\u9664\u7684\u8282\u70B9\u5C31\u662F\u5934\u6307\u9488\uFF0C\u5219\u76F4\u63A5\u5C06\u5934\u6307\u9488\u7F6E\u7A7A\u5373\u53EF</p></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">LinkNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span>LinkNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">,</span> next<span class="token operator">?</span><span class="token operator">:</span>LinkNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">deleteNode</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>head<span class="token operator">:</span>LinkNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> p<span class="token operator">:</span>LinkNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>LinkNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>head <span class="token operator">===</span> p<span class="token punctuation">)</span><span class="token punctuation">{</span>
      head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> parent <span class="token operator">=</span> head<span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>next <span class="token operator">!==</span> p<span class="token punctuation">)</span><span class="token punctuation">{</span>
        parent <span class="token operator">=</span> parent<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> parent<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    p<span class="token punctuation">.</span>val <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">return</span> head<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> testData<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span>testData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> testData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span>testData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    p <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">deleteNode</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9</h3><p>\u5220\u9664\u6392\u5E8F\u7684\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u8282\u70B9 \u89E3\u9898\u601D\u8DEF\u4E0E\u9898\u76EE1\u7C7B\u4F3C</p><h2 id="no-19-\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#no-19-\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D" aria-hidden="true">#</a> NO. 19\uFF1A\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u5339\u914D\u5305\u542B&quot;.&quot;\u548C&quot;*&quot;\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u6A21\u5F0F\u4E2D\u7684\u5B57\u7B26&quot;.&quot;\u8868\u793A\u4EFB\u610F\u4E00\u4E2A\u5B57\u7B26\uFF0C\u800C&quot;*&quot;\u8868\u793A\u5B83\u524D\u9762\u7684\u5B57\u7B26\u53EF\u4EE5\u51FA\u73B0\u4EFB\u610F\u6B21(\u542B0\u6B21)\u3002\u5728\u672C\u9898\u4E2D\uFF0C\u5339\u914D\u662F\u6307\u5B57\u7B26\u4E32\u7684\u6240\u6709\u5B57\u7B26\u5339\u914D\u6574\u4E2A\u6A21\u5F0F\u3002\u4F8B\u5982\uFF0C\u5B57\u7B26\u4E32&quot;aaa&quot;\u4E0E\u6A21\u5F0F&quot;a.a&quot;\u548C&quot;ab*ac*a&quot;\u5339\u914D\uFF0C\u4F46\u4E0E&quot;aa.a&quot;\u548C&quot;ab*a&quot;\u5747\u4E0D\u5339\u914D\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u9012\u5F52\u7684\u8FDB\u884C\u9010\u4E2A\u5B57\u7B26\u6BD4\u8F83\uFF0C\u82E5\u6A21\u5F0F\u4E3A\u5E26&#39;*&#39;\u7684\u7EC4\u5408\uFF0C\u5219\u7EFC\u5408\u591A\u79CD\u5339\u914D\u60C5\u51B5\uFF0C\u6709\u4E00\u79CD\u4E3Atrue\u65F6\uFF0C\u5411\u8BE5\u6A21\u5F0F\u7EE7\u7EED\u9012\u5F52\uFF0C\u9012\u5F52\u7ED3\u675F\u6761\u4EF6\u8F83\u4E3A\u590D\u6742\uFF0C\u9700\u8981\u5206\u5F00\u8BA8\u8BBA\uFF0C\u8BE6\u89C1\u7B97\u6CD5\u6B65\u9AA4</li><li>\u6B65\u9AA4\uFF1A <ol><li>\u8BBE\u7F6E\u4E24\u4E2A\u6BD4\u8F83\u6307\u9488ps\u548Cpp\uFF0C\u5148\u5224\u65AD\u8FB9\u754C\u6761\u4EF65\uFF0C\u518D\u5224\u65ADpp+1\u5728\u8303\u56F4\u5185\u4E14\u6307\u5411\u5B57\u7B26\u4E3A&#39;*&#39;\u65F6\u8FDB\u884C\u6B65\u9AA42\uFF0C\u5426\u5219\u8FDB\u884C\u6B65\u9AA44</li><li>ps\u4E0D\u5728\u8303\u56F4\u5185\u6216ps\u548Cpp\u4E0D\u5339\u914D\u65F6\uFF0C\u8BF4\u660E\u5E26&#39;*&#39;\u7EC4\u5408\u5339\u914D0\u6B21\uFF0C\u5411\u540E\u79FB\u52A8pp\u4E24\u4E2A\u5B57\u7B26\uFF0C\u518D\u8FDB\u884C\u9012\u5F52\u5224\u65AD\uFF0C\u82E5\u4E0D\u6EE1\u8DB3\u6761\u4EF6\u5219\u8DF3\u81F3\u6B65\u9AA43</li><li>\u6B64\u65F6ps\u4E00\u5B9A\u5728\u8303\u56F4\u5185\uFF0C\u5B57\u7B26\u7EC4\u5408\u5339\u914D\u60C5\u51B5\u5982\u4E0B\uFF0C\u591A\u79CD\u60C5\u51B5\u53EA\u8981\u6709\u4E00\u4E2A\u80FD\u5339\u914D\u5230\u672B\u5C3E\uFF0C\u5219\u6574\u4E2A\u8868\u8FBE\u5F0F\u5339\u914D\uFF0C\u56E0\u6B64\u7528\u6216\u8FD0\u7B97\u5173\u8054\u8D77\u6765 a. \u5339\u914D\u591A\u6B21\uFF0C\u6B64\u65F6\u53EA\u9700\u5411\u540E\u79FB\u52A8ps\u4E00\u4F4D\uFF0C\u7EE7\u7EED\u9012\u5F52\u5339\u914D b. \u5339\u914D\u4E00\u6B21\uFF0C\u6B64\u65F6\u9700\u8981\u5C06ps\u5411\u540E\u79FB\u52A8\u4E00\u4F4D\uFF0Cpp\u5411\u540E\u79FB\u52A8\u4E24\u4F4D\uFF0C\u518D\u8FDB\u884C\u9012\u5F52\u5339\u914D c. \u5339\u914D0\u6B21\uFF0C\u6B64\u65F6\u53EA\u9700\u5C06pp\u5411\u540E\u79FB\u52A8\u4E24\u4F4D\u518D\u8FDB\u884C\u9012\u5F52\u5339\u914D</li><li>\u5224\u65ADps\u662F\u5426\u5728\u8303\u56F4\u5185\u4E14ps\u4E0Epp\u5339\u914D\uFF0C\u5219\u5C06ps\u548Cpp\u90FD\u5411\u540E\u79FB\u52A8\u4E00\u4F4D\u9012\u5F52\u5224\u65AD\uFF0C\u5426\u5219\u8BF4\u660Eps\u6307\u5411\u672B\u5C3E\u4E14pp\u5176\u540E\u8FD8\u6709\u4E0D\u5E26&#39;*&#39;\u7684\u7EC4\u5408\uFF0C\u6216\u8005\u5BF9\u5E94\u5B57\u7B26\u4E3A\u76F4\u63A5\u4E0D\u5339\u914D\uFF0C\u5747\u9700\u8FD4\u56DEfalse\u8868\u793A\u5339\u914D\u5931\u8D25</li><li>\u8FB9\u754C\u6761\u4EF6\uFF1A\u7ECF\u8FC7\u4E0A\u4E00\u8F6E\u5224\u65AD\uFF0C\u82E5ps\u548Cpp\u540C\u65F6\u8D85\u51FA\u8303\u56F4\uFF0C\u5219\u8BF4\u660E\u5B57\u7B26\u4E32\u548C\u6A21\u5F0F\u5B8C\u5168\u5339\u914D\u76F4\u63A5\u8FD4\u56DEtrue\uFF0C\u82E5pp\u5148\u8D85\u51FA\u8303\u56F4\u5219\u5B57\u7B26\u4E32\u8FD8\u6709\u5269\u4F59\u76F4\u63A5\u8FD4\u56DEfalse\uFF0C\u82E5ps\u5148\u8D85\u51FA\u8303\u56F4\uFF0C\u5219\u4F1A\u88AB\u6B65\u9AA42\u6355\u83B7\uFF0C\u76F4\u5230pp\u540E\u4E0D\u518D\u6709\u5E26&#39;*&#39;\u7684\u7EC4\u5408\uFF0C\u6700\u540E\u4F1A\u88AB\u6B65\u9AA44\u6355\u83B7\u5E76\u8FD4\u56DE\u76F8\u5E94\u7684bool\u503C</li></ol></li><li>ts\u5B9E\u73B0\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">isMatch</span><span class="token punctuation">(</span>str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> p<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token operator">&amp;&amp;</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u6A21\u5F0F\u4E3A\u7A7A\u4E14\u5B57\u7B26\u4E32\u4E0D\u4E3A\u7A7A\u65F6\u76F4\u63A5\u8FD4\u56DEfalse</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> p<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> indexes<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>indexes<span class="token punctuation">)</span> indexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> p<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> p<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> str<span class="token punctuation">.</span>length<span class="token operator">||</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!==</span> p<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// str\u5DF2\u8017\u5C3D\u6216(\u5B57\u7B26\u4E0D\u5339\u914D\uFF0C\u5219\u901A\u914D\u7B26\u5339\u914D0\u6B21)\uFF0C\u5411\u540E\u79FB\u52A8p\u6307\u9488</span>
        <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token comment">// \u5339\u914Dn\u6B21\u7684\u60C5\u51B5</span>
        Demo<span class="token punctuation">.</span><span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token comment">// \u5339\u914D0\u6B21\u7684\u60C5\u51B5</span>
        Demo<span class="token punctuation">.</span><span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u53EA\u5339\u914D\u4E00\u6B21\u7684\u60C5\u51B5</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> p<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">||</span> p<span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u6B63\u5E38\u5339\u914D</span>
      <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isMatchCore</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">[</span>indexes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> indexes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token string">&#39;.*..a*&#39;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">isMatch</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-20-\u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#no-20-\u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32" aria-hidden="true">#</a> NO.20 \u8868\u793A\u6570\u503C\u7684\u5B57\u7B26\u4E32</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u8868\u793A\u6570\u503C(\u5305\u62EC\u6574\u6570\u548C\u5C0F\u6570)\u3002\u4F8B\u5982\uFF0C\u5B57\u7B26\u4E32&quot;+100&quot;,&quot;5e2&quot;,&quot;-123&quot;,&quot;3.1416&quot;,&quot;-1E-16&quot;\u90FD\u8868\u793A\u6570\u503C\uFF0C\u4F46&quot;12e&quot;,&quot;1a3.14&quot;,&quot;1.2.3&quot;,&quot;+-5&quot;,&quot;12e+5.4&quot;\u90FD\u4E0D\u662F</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5C06\u6570\u5B57\u62C6\u89E3\u4E3A\u6574\u6570\u3001\u65E0\u7B26\u53F7\u6574\u6570\u3001\u5C0F\u6570\u3001\u79D1\u5B66\u8BA1\u6570\u7B49\u51E0\u4E2A\u90E8\u5206\uFF0C\u4ECE\u524D\u5411\u540E\u9010\u90E8\u5206\u8FDB\u884C\u68C0\u6D4B <ol><li>\u65E0\u7B26\u53F7\u6574\u6570\u4E3A\u7EAF\u6570\u5B57\uFF0C\u6574\u6570\u7531\u53EF\u9009\u7684+,-\u53F7\u548C\u65E0\u7B26\u53F7\u6574\u6570\u7EC4\u6210</li><li>\u5C0F\u6570\uFF1A\u5C0F\u6570\u70B9\u524D\u82E5\u6709\u6570\u5B57\uFF0C\u5FC5\u4E3A\u6709\u7B26\u53F7\u6574\u6570\u6216\u6B63\u8D1F\u53F7\uFF0C\u5C0F\u6570\u70B9\u540E\u65B9\u4E3A\u65E0\u7B26\u53F7\u6574\u6570\uFF0C\u4E24\u4FA7\u4E0D\u80FD\u540C\u65F6\u4E3A\u7A7A\uFF0C\u76F8\u5F53\u4E8E\u4E0E\u524D\u65B9\u7ED3\u679C\u6216\u64CD\u4F5C</li><li>\u79D1\u5B66\u8BA1\u6570\u6CD5:e\u524D\u65B9\u4E3A\u5C0F\u6570\u6216\u6574\u6570\uFF0C\u540E\u65B9\u5FC5\u4E3A\u6574\u6570\uFF0C\u76F8\u5F53\u4E8E\u4E0E\u524D\u65B9\u7ED3\u679C\u4E0E\u64CD\u4F5C</li></ol></li><li>\u6B65\u9AA4 <ol><li>\u5B9A\u4E49\u8F85\u52A9\u51FD\u6570\uFF0C\u7ED9\u5B9A\u7D22\u5F15\u4F4D\u7F6E\u5224\u65AD\u5176\u540E\u65E0\u7B26\u53F7\u6574\u6570\u548C\u6709\u7B26\u53F7\u6574\u6570\uFF0C\u8FD4\u56DE\u7B26\u5408\u6761\u4EF6\u6570\u7EC4\u7684\u672B\u5C3E\u7D22\u5F15\uFF0C\u8868\u793A\u5339\u914D\u5230\u7684\u6570\u5B57\u957F\u5EA6</li><li>\u53BB\u6389\u5B57\u7B26\u4E32str\u4E24\u4FA7\u7684\u7A7A\u683C\uFF0C\u4ECE\u8D77\u59CB\u4F4D\u7F6E\u5224\u65AD\u5176\u662F\u5426\u5305\u542B\u6574\u6570\uFF0C\u5E76\u8BB0\u5F55bool\u503Cresult\uFF0C\u79FB\u52A8p\u6307\u9488\u5230\u5339\u914D\u540E\u7684\u4F4D\u7F6E</li><li>\u7531\u4E8E\u5C0F\u6570\u70B9\u524D\u53EF\u4EE5\u53EA\u6709\u7B26\u53F7\uFF0C\u56E0\u6B64\u5224\u65ADresult\u4E3Afalse\uFF0C\u4E14p\u6307\u5411\u4E3A&#39;+-&#39;\u53F7\u65F6\uFF0C\u5C06p\u5411\u540E\u79FB\u52A8\u4E00\u4F4D\uFF0C\u8DF3\u8FC7&#39;+-&#39;\u53F7\uFF0C\u7136\u540E\u5224\u65AD\u662F\u5426\u6709\u5C0F\u6570\u70B9\u4E3A\uFF0C\u82E5\u6709\u5219\u8FDB\u884C\u6B65\u9AA44</li><li>\u5224\u65AD\u5C0F\u6570\u70B9\u540E\u662F\u5426\u80FD\u5339\u914D\u5230\u65E0\u7B26\u53F7\u6574\u6570\uFF0C\u5C06\u5176bool\u7ED3\u679C\u4E0Eresult\u6216\u64CD\u4F5C\uFF0C\u5E76\u79FB\u52A8p\u6307\u9488\u5230\u65B0\u7684\u5339\u914D\u4F4D\u7F6E</li><li>\u5224\u65AD\u5F53\u524D\u6307\u5411\u662F\u5426\u6709\u5B57\u7B26&#39;eE&#39;\uFF0C\u82E5\u6709\u5219\u5224\u65AD\u5176\u540E\u662F\u5426\u6709\u6574\u6570\uFF0C\u5E76\u5C06bool\u7ED3\u679C\u4E0Eresult\u76F8\u4E0E\uFF0C\u79FB\u52A8p\u6307\u9488</li><li>\u8FD4\u56DEstr\u662F\u5426\u68C0\u6D4B\u5B8C\u6210(p&gt;=str.length)\u548Cresult\u72B6\u6001\u7684\u4E0E\u64CD\u4F5C\u7ED3\u679C</li></ol></li><li>ts\u5B9E\u73B0:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">isNumberic</span><span class="token punctuation">(</span>str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u795B\u9664\u4E24\u4FA7\u7A7A\u683C</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">isSignInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9996\u5148\u68C0\u6D4B\u6574\u6570</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> temp <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">&lt;</span>str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>result <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;+&#39;</span> <span class="token operator">||</span> str<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      p <span class="token operator">=</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u6CA1\u6709\u5339\u914D\u5230\u6574\u6570\u4E14\u68C0\u6D4B\u5230\u4E86&#39;+-&#39;\u53F7\u5219\u8DF3\u8FC7\u8BE5\u7B26\u53F7</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u7ED3\u5408\u524D\u9762\u68C0\u6D4B\u7684\u7ED3\u679C\u68C0\u6D4B\u5C0F\u6570\u90E8\u5206</span>
      temp <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">isUnSignInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      result <span class="token operator">=</span> temp <span class="token operator">&gt;</span> p <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">||</span> result<span class="token punctuation">;</span>
      p <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;e&#39;</span> <span class="token operator">||</span> str<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u7ED3\u5408\u524D\u9762\u7684\u68C0\u6D4B\u7ED3\u679C\uFF0C\u68C0\u6D4B\u79D1\u5B66\u8BA1\u6570\u6CD5\u90E8\u5206</span>
      temp <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">isSignInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      result <span class="token operator">=</span> result <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&gt;</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result <span class="token operator">&amp;&amp;</span> p <span class="token operator">&gt;=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">isSignInt</span><span class="token punctuation">(</span>str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> index<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>str <span class="token operator">||</span> index <span class="token operator">&gt;=</span> str<span class="token punctuation">.</span>length <span class="token operator">||</span> index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> index<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">||</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">isUnSignInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">===</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> index<span class="token punctuation">;</span> <span class="token comment">// \u82E5\u53EA\u6709&#39;+-&#39;\u53F7\uFF0C\u5219\u6574\u6570\u5339\u914D\u5931\u8D25</span>
      <span class="token keyword">return</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isUnSignInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">isUnSignInt</span><span class="token punctuation">(</span>str<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> index<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>str <span class="token operator">||</span> index <span class="token operator">&gt;=</span> str<span class="token punctuation">.</span>length <span class="token operator">||</span> index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> index<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      index<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> index<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// debugger</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">&#39;-.1&#39;</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">isNumberic</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-21-\u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762" tabindex="-1"><a class="header-anchor" href="#no-21-\u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762" aria-hidden="true">#</a> NO.21 \u8C03\u6574\u6570\u7EC4\u987A\u5E8F\u4F7F\u5947\u6570\u4F4D\u4E8E\u5076\u6570\u524D\u9762</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u6765\u8C03\u6574\u8BE5\u6570\u7EC4\u4E2D\u6570\u5B57\u7684\u987A\u5E8F\uFF0C\u4F7F\u5F97\u6240\u6709\u7684\u5947\u6570\u4F4D\u4E8E\u6570\u7EC4\u7684\u524D\u534A\u90E8\u5206\uFF0C\u6240\u6709\u7684\u5076\u6570\u4F4D\u4E8E\u6570\u7EC4\u7684\u540E\u534A\u90E8\u5206\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u5934\u5C3E\u53CC\u6307\u9488\u5BF9\u649E\u6CD5\uFF0C\u82E5\u5934\u6307\u9488left\u6307\u5411\u5947\u6570\u5219\u5411\u540E\u79FB\u52A8\uFF0C\u82E5\u5C3E\u6307\u9488\u6307\u5411\u5076\u6570\u5219\u5411\u524D\u79FB\u52A8\uFF0C\u82E5left\u548Cright\u5206\u522B\u6307\u5411\u5076\u6570\u548C\u5947\u6570\uFF0C\u5219\u4EA4\u6362\u540Eleft\u548Cright\u5206\u522B\u5411\u540E\u5411\u524D\u79FB\u52A8\uFF0C\u5FAA\u73AF\u7EC8\u6B62\u6761\u4EF6\u4E3Aleft &lt; right\u4E0D\u6210\u7ACB\uFF0C\u6700\u574F\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">reOrderArr</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function-variable function">fn</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> p2 <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p1 <span class="token operator">&lt;</span> p2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        p1<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        p2<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>p1<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>p2<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>p2<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        p1<span class="token operator">++</span><span class="token punctuation">;</span>
        p2<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_isEven</span><span class="token punctuation">(</span>target<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>target <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// debugger</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>
    Demo<span class="token punctuation">.</span><span class="token function">reOrderArr</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> Demo<span class="token punctuation">.</span>_isEven<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#no-22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" aria-hidden="true">#</a> NO.22 \u94FE\u8868\u4E2D\u5012\u6570\u7B2CK\u4E2A\u8282\u70B9</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u94FE\u8868\uFF0C\u8F93\u51FA\u8BE5\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9\u3002\u4E3A\u4E86\u7B26\u5408\u5927\u591A\u6570\u4EBA\u7684\u4E60\u60EF\uFF0C\u672C\u9898\u4ECE1\u5F00\u59CB\u8BA1\u6570\uFF0C\u5373\u94FE\u8868\u7684\u5C3E\u8282\u70B9\u662F\u5012\u6570\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002\u4F8B\u5982\uFF0C\u4E00\u4E2A\u94FE\u8868\u67096\u4E2A\u8282\u70B9\uFF0C\u4ECE\u5934\u7ED3\u70B9\u5F00\u59CB\uFF0C\u5B83\u4EEC\u7684\u503C\u4F9D\u6B21\u662F1,2,3,4,5,6\u3002\u8FD9\u4E2A\u94FE\u8868\u7684\u5012\u6570\u7B2C\u4E09\u4E2A\u8282\u70B9\u662F\u503C\u4E3A4\u7684\u8282\u70B9\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u5FEB\u6162\u6307\u9488\uFF0Cfast\u5FEB\u6307\u9488\u5148\u8D70k\u6B65\uFF0Cslow\u518D\u8D70\uFF0C\u5F53fast\u6307\u5411\u672B\u5C3E\u65F6\uFF0Cslow\u521A\u597D\u6307\u5411\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9\uFF0C\u6CE8\u610F\u7531\u4E8E\u4ECE1\u5F00\u59CB\u8BA1\u6570\uFF0C\u56E0\u6B64\u521D\u59CB\u5316\u65F6fast\u5C31\u76F8\u5F53\u4E8E\u8D70\u4E86\u4E00\u6B65</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">findKthTail</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>head<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> k<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">let</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">let</span> slow <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> k<span class="token punctuation">)</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>fast<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
        slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
        
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&gt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> slow
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">findKthTail</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-23-\u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#no-23-\u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u8282\u70B9" aria-hidden="true">#</a> NO.23 \u94FE\u8868\u4E2D\u73AF\u7684\u5165\u53E3\u8282\u70B9</h2><p>\u9898\u76EE\uFF1A\u5982\u679C\u4E00\u4E2A\u94FE\u8868\u4E2D\u5305\u542B\u73AF\uFF0C\u5982\u4F55\u627E\u51FA\u73AF\u7684\u5165\u53E3\u8282\u70B9\uFF1F\u4F8B\u5982\u5728\u5982\u56FE3.8\u6240\u793A\u7684\u94FE\u8868\u4E2D\uFF0C\u73AF\u7684\u5165\u53E3\u8282\u70B9\u662F3<br> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6 and 6-&gt;3</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u5FEB\u6162\u6307\u9488\u786E\u5B9A\u94FE\u8868\u4E2D\u662F\u5426\u5B58\u5728\u73AF\uFF0C\u5E76\u8F93\u51FA\u73AF\u4E2D\u8282\u70B9\u6570\uFF0C\u518D\u6B21\u4F7F\u7528\u53CC\u6307\u9488\uFF0C\u95F4\u9694\u8282\u70B9\u4E2A\u6570\u5F00\u59CB\u904D\u5386\uFF0C\u76F4\u5230\u4E24\u4E2A\u6307\u9488\u6307\u5411\u540C\u4E00\u4E2A\u8282\u70B9\uFF0C\u5373\u4E3A\u73AF\u7684\u5165\u53E3</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">EntryNodeOfLoop</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>head<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token operator">?.</span>next<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> fast <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">,</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>fast<span class="token operator">&amp;&amp;</span>fast <span class="token operator">!==</span> slow<span class="token punctuation">)</span><span class="token punctuation">{</span>
      slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      fast <span class="token operator">=</span> fast<span class="token operator">?.</span>next<span class="token operator">?.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fast<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>fast <span class="token operator">!==</span> slow<span class="token punctuation">)</span><span class="token punctuation">{</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
    slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> count<span class="token punctuation">;</span> i <span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>fast<span class="token operator">!==</span> slow<span class="token punctuation">)</span><span class="token punctuation">{</span>
      fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> fast<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">,</span> targetNode<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> data<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        targetNode <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    p<span class="token punctuation">.</span>next <span class="token operator">=</span> targetNode<span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">EntryNodeOfLoop</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-24-\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#no-24-\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> NO.24 \u53CD\u8F6C\u94FE\u8868</h2><p>\u9898\u76EE\uFF1A\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u8282\u70B9\uFF0C\u53CD\u8F6C\u8BE5\u94FE\u8868\u5E76\u8F93\u51FA\u53CD\u8F6C\u540E\u7684\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u4E09\u4E2A\u6307\u9488\uFF0C\u4ECE\u5DE6\u5230\u53F3\u4F9D\u6B21\u4FDD\u5B58\u53CD\u8F6C\u540E\u7684\u7ED3\u679Cresult\uFF0C\u5F85\u6DFB\u52A0\u5230\u53CD\u8F6C\u7ED3\u679C\u4E2D\u7684\u8282\u70B9\u6307\u9488left\uFF0C\u94FE\u8868\u4E2D\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u6307\u9488right\uFF0C\u904D\u5386\u4E00\u6B21\u94FE\u8868\u5373\u53EF\u5C06\u94FE\u8868\u53CD\u8F6C\uFF1B</p></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">reverseList</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>head<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token operator">?.</span>next<span class="token punctuation">)</span> <span class="token keyword">return</span> head<span class="token punctuation">;</span>  <span class="token comment">// \u5934\u6307\u9488\u4E3A\u7A7A\u6216\u53EA\u6709\u4E00\u4E2A\u8282\u70B9\u65F6\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> head<span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316result\u6307\u9488</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">,</span> left <span class="token operator">=</span> head<span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316right \u548Cleft\u6307\u9488</span>
    result<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u5B8C\u6210\u521D\u59CB\u5316\u540E\u9700\u8981\u5C06result\u4E0E\u540E\u9762\u7684\u8282\u70B9\u65AD\u5F00</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5F53\u4E0B\u4E00\u4E2A\u6307\u9488\u6307\u5411\u672B\u5C3E\u4E3A\u7A7A\u65F6\uFF0C\u7ED3\u675F\u904D\u5386</span>
      left <span class="token operator">=</span> right<span class="token punctuation">;</span> <span class="token comment">// \u56E0\u4E3Aresult\u603B\u548Cleft\uFF0C\u56E0\u6B64\u5411\u540E\u79FB\u52A8left\u548Cright\u6307\u9488\uFF0C\u5E76\u5F00\u59CB\u53CD\u8F6C\u64CD\u4F5C</span>
      right <span class="token operator">=</span> right<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      left<span class="token punctuation">.</span>next <span class="token operator">=</span> result<span class="token punctuation">;</span> <span class="token comment">// \u6DFB\u52A0\u53CD\u8F6C\u8282\u70B9</span>
      result <span class="token operator">=</span> left<span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u6B21\u904D\u5386\u540Eresult\u603B\u4E0Eleft\u6307\u5411\u76F8\u540C\u8282\u70B9</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">reverseList</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-25-\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#no-25-\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868" aria-hidden="true">#</a> NO.25 \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E24\u4E2A\u9012\u589E\u6392\u5E8F\u7684\u94FE\u8868\uFF0C\u5408\u5E76\u8FD9\u4E24\u4E2A\u94FE\u8868\u5E76\u4F7F\u65B0\u94FE\u8868\u4E2D\u7684\u8282\u70B9\u4ECD\u7136\u662F\u9012\u589E\u6392\u5E8F\u7684\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li>\u4F7F\u7528p1\uFF0Cp2\u4E24\u4E2A\u6307\u9488\u6765\u904D\u5386\u4E24\u4E2A\u94FE\u8868\uFF0C\u521D\u59CB\u65F6\uFF0C\u4FDD\u8BC1p1\u6307\u5411\u8F83\u5C0F\u7684\u90A3\u4E2A\uFF1B</li><li>\u5373\u5408\u5E76\u540E\u7ED3\u679C\u5934\u6307\u9488\u4E3Ap1\u521D\u59CB\u6307\u5411\uFF0C\u904D\u5386\u5C06\u6700\u5148\u4ECEp1\u6240\u5728\u94FE\u8868\u5F00\u59CB\uFF0C\u8BB0flag\u4E3Atrue\uFF0C\u5219p2\u94FE\u8868\u4E3Afalse</li><li>\u4F7F\u7528\u6307\u9488pre\u8BBE\u4E3Anull\uFF0C\u5176\u540E\u8BE5\u6307\u9488\u59CB\u7EC8\u6307\u5411\u6B63\u5728\u904D\u5386\u7684\u94FE\u63A5p\u6307\u9488\u7684\u524D\u4E00\u4E2A\u8282\u70B9\uFF0C\u65B9\u4FBF\u65AD\u5F00\u8282\u70B9\u5E76\u91CD\u8FDE</li><li>\u82E5p1\u3001p2\u90FD\u4E0D\u4E3Anull\u65F6\uFF0C\u5BF9\u8F83\u5C0F\u7684\u94FE\u8868\u8FDB\u884C\u904D\u5386\uFF0C\u82E5\u5224\u65ADflag\u4E0D\u4E3A\u8981\u904D\u5386\u7684\u94FE\u8868\u65F6\uFF0Cpre\u5373\u65F6\u8981\u5408\u5E76\u7684\u4E00\u4E2A\u8282\u70B9\uFF0C\u5C06p\u6307\u9488\u8D4B\u503C\u7ED9pre\uFF0C\u5E76\u7FFB\u8F6Cflag\uFF0C\u5F00\u59CB\u904D\u5386\u5BF9\u5E94\u7684\u94FE\u8868</li><li>\u904D\u5386\u7ED3\u675F\u540E\u5224\u65ADflag\u82E5\u4E3Atrue\uFF0C\u5219\u8868\u660Ep1\u5148\u904D\u5386\u5B8C\u6210\uFF0C\u5C06p2\u5269\u4E0B\u7684\u8282\u70B9\u94FE\u63A5\u5230pre\u4E0A\u5373\u53EF\uFF0C\u53CD\u4E4B\u4E00\u6837</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  next<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">MergeLinkList</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>head1<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> head2<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>head1<span class="token operator">||</span><span class="token operator">!</span>head2<span class="token punctuation">)</span> <span class="token keyword">return</span> head1 <span class="token operator">||</span> head2<span class="token punctuation">;</span>
    <span class="token keyword">let</span> p1 <span class="token operator">=</span> head1<span class="token punctuation">,</span> p2 <span class="token operator">=</span> head2<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
      p1 <span class="token operator">=</span> head2<span class="token punctuation">;</span>
      p2 <span class="token operator">=</span> head1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> p1<span class="token punctuation">,</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> pre<span class="token operator">:</span>ListNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p1<span class="token operator">&amp;&amp;</span>p2<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          pre<span class="token punctuation">.</span>next <span class="token operator">=</span> p2<span class="token punctuation">;</span>
          flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        pre <span class="token operator">=</span> p2<span class="token punctuation">;</span>
        p2 <span class="token operator">=</span> p2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          pre<span class="token punctuation">.</span>next <span class="token operator">=</span> p1<span class="token punctuation">;</span>
          flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        pre <span class="token operator">=</span> p1<span class="token punctuation">;</span>
        p1 <span class="token operator">=</span> p1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pre<span class="token punctuation">.</span>next <span class="token operator">=</span> p2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      pre<span class="token punctuation">.</span>next <span class="token operator">=</span> p1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> data2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> head1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> head2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p1 <span class="token operator">=</span> head1<span class="token punctuation">,</span> p2 <span class="token operator">=</span> head2<span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> data1<span class="token punctuation">.</span>length <span class="token operator">||</span> i <span class="token operator">&lt;</span> data2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> data1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        p1<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p1 <span class="token operator">=</span> p1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> data2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        p2<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>data2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p2 <span class="token operator">=</span> p2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;h1: &#39;</span><span class="token punctuation">,</span> head1<span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;h2: &#39;</span><span class="token punctuation">,</span> head2<span class="token punctuation">)</span>
    <span class="token comment">// debugger</span>
    <span class="token keyword">let</span> rhead <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">MergeLinkList</span><span class="token punctuation">(</span>head1<span class="token punctuation">,</span> head2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>rhead<span class="token punctuation">)</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rhead<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      rhead <span class="token operator">=</span> rhead<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-26-\u6811\u7684\u5B50\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#no-26-\u6811\u7684\u5B50\u7ED3\u6784" aria-hidden="true">#</a> NO.26 \u6811\u7684\u5B50\u7ED3\u6784</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E24\u9897\u4E8C\u53C9\u6811A\u548CB\uFF0C\u5224\u65ADB\u662F\u4E0D\u662FA\u7684\u5B50\u7ED3\u6784\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5148\u9012\u5F52\u7684\u5224\u65ADA\u4E2D\u662F\u5426\u5305\u542BB\u7684\u6839\u5B50\u8282\u70B9\uFF0C\u82E5\u5305\u542B\uFF0C\u5219\u5F00\u59CB\u6BD4\u8F83\u5176\u5B50\u7ED3\u6784\u662F\u5426\u76F8\u540C\uFF0C\u9012\u5F52\u7EC8\u6B62\u6761\u4EF6\u4E3AA\u6216B\u904D\u5386\u5B8C\u6210</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u8BBE\u7F6E\u9ED8\u8BA4\u7ED3\u679Cresult\u4E3Afalse\uFF0C\u5F53\u4E24\u6839\u8282\u70B9\u5B58\u5728\u65F6\uFF0C\u5148\u9012\u5F52\u67E5\u627EA\u6811\u4E2D\u4E0EB\u6839\u8282\u70B9\u76F8\u540C\u7684\u70B9\uFF0C\u5E76\u9012\u5F52\u5224\u65AD\u5176\u5B50\u7ED3\u6784\u662F\u5426\u76F8\u540C\uFF0C\u5C06\u6BD4\u8F83\u7ED3\u679C\u4FDD\u5B58\u5728result\u4E2D\uFF0C\u4FBF\u4E8E\u540E\u7EED\u5224\u65AD\u662F\u5426\u8FD8\u8981\u7EE7\u7EED\u904D\u5386A\u6811</li><li>\u5224\u65AD\u5B50\u7ED3\u6784\u65F6\uFF0C\u5148\u5224\u65ADB\u6811\u7684\u8282\u70B9\u662F\u5426\u4E3A\u7A7A\uFF0C\u82E5\u4E3A\u7A7A\u8868\u793A\u524D\u7F6E\u5339\u914D\u90FD\u6B63\u786E\u76F4\u63A5\u8FD4\u56DEtrue\uFF0C\u5426\u5219A\u6811\u8282\u70B9\u4E3A\u7A7A\u6216\u4E0D\u76F8\u7B49\u65F6\u76F4\u63A5\u8FD4\u56DEfalse\uFF0C\u82E5\u76F8\u540C\u5219\u9012\u5F52\u7684\u5224\u65AD\u5176\u5DE6\u53F3\u5B50\u6811\u662F\u76F8\u540C</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  left<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  right<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">isEqual</span><span class="token punctuation">(</span>num1<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> num2<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>num1 <span class="token operator">-</span> num2<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1e-7</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">hasSubTree</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>RootA<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> RootB<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token function-variable function">isEqual</span><span class="token operator">:</span><span class="token punctuation">(</span>n1<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">,</span> n2<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>RootA <span class="token operator">&amp;&amp;</span> RootB<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isEqual</span><span class="token punctuation">(</span>RootA<span class="token punctuation">.</span>val<span class="token punctuation">,</span> RootB<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> result <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">isEqualSubTree</span><span class="token punctuation">(</span>RootA<span class="token punctuation">,</span> RootB<span class="token punctuation">,</span> isEqual<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> result <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">hasSubTree</span><span class="token punctuation">(</span>RootA<span class="token punctuation">.</span>left<span class="token punctuation">,</span> RootB<span class="token punctuation">,</span> isEqual<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> result <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">hasSubTree</span><span class="token punctuation">(</span>RootA<span class="token punctuation">.</span>right<span class="token punctuation">,</span> RootB<span class="token punctuation">,</span> isEqual<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">isEqualSubTree</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>p1<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> p2<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token function-variable function">isEqual</span><span class="token operator">:</span><span class="token punctuation">(</span>p1<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">,</span> p2<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p2<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p1<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEqual</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>val<span class="token punctuation">,</span> p2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isEqualSubTree</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p2<span class="token punctuation">.</span>left<span class="token punctuation">,</span> isEqual<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> Demo<span class="token punctuation">.</span><span class="token function">isEqualSubTree</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p2<span class="token punctuation">.</span>right<span class="token punctuation">,</span> isEqual<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> rootA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rootB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootB<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootB<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">hasSubTree</span><span class="token punctuation">(</span>rootA<span class="token punctuation">,</span> rootB<span class="token punctuation">,</span> Demo<span class="token punctuation">.</span>isEqual<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-27-\u4E8C\u53C9\u6811\u7684\u955C\u50CF" tabindex="-1"><a class="header-anchor" href="#no-27-\u4E8C\u53C9\u6811\u7684\u955C\u50CF" aria-hidden="true">#</a> NO.27 \u4E8C\u53C9\u6811\u7684\u955C\u50CF</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B8C\u6210\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165\u4E00\u9897\u4E8C\u53C9\u6811\uFF0C\u8F93\u51FA\u5B83\u7684\u955C\u50CF\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u9012\u5F52\uFF0C\u5F53\u8282\u70B9\u4E3A\u53F6\u5B50\u8282\u70B9\u65F6\u505C\u6B62\u9012\u5F52\uFF0C\u5426\u5219\u4E0D\u65AD\u4EA4\u6362\u8BE5\u8282\u70B9\u7684\u5DE6\u53F3\u8282\u70B9</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  left<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  right<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">mirrorTree</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>pRoot<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>pRoot<span class="token punctuation">)</span> <span class="token keyword">return</span> pRoot<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>pRoot<span class="token punctuation">.</span>left<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>pRoot<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span> pRoot<span class="token punctuation">;</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> pRoot<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    pRoot<span class="token punctuation">.</span>left <span class="token operator">=</span> pRoot<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    pRoot<span class="token punctuation">.</span>right <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    Demo<span class="token punctuation">.</span><span class="token function">mirrorTree</span><span class="token punctuation">(</span>pRoot<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Demo<span class="token punctuation">.</span><span class="token function">mirrorTree</span><span class="token punctuation">(</span>pRoot<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> pRoot<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> rootA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">mirrorTree</span><span class="token punctuation">(</span>rootA<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-28-\u5BF9\u79F0\u7684\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#no-28-\u5BF9\u79F0\u7684\u4E8C\u53C9\u6811" aria-hidden="true">#</a> NO.28 \u5BF9\u79F0\u7684\u4E8C\u53C9\u6811</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u5224\u65AD\u4E00\u9897\u4E8C\u53C9\u6811\u662F\u4E0D\u662F\u5BF9\u79F0\u7684\u3002\u5982\u679C\u4E00\u9897\u4E8C\u53C9\u6811\u548C\u5B83\u7684\u955C\u50CF\u4E00\u6837\uFF0C\u90A3\u4E48\u5B83\u662F\u5BF9\u79F0\u7684\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u524D\u5E8F\u904D\u5386\u4E3A \u5DE6-&gt;\u6839-&gt;\u53F3\uFF0C\u5B9A\u4E49\u53F3\u5E8F\u904D\u5386\u4E3A \u53F3-&gt;\u6839-&gt;\u5DE6\uFF0C\u5219\u5BF9\u79F0\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386\u5FC5\u7136\u4E0E\u5176\u955C\u50CF\u7684\u53F3\u5E8F\u904D\u5386\u76F8\u7B49\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5199\u51FA\u524D\u5E8F\u904D\u5386\u65F6\uFF0C\u540C\u65F6\u5224\u65AD\u53F3\u5E8F\u904D\u5386\u5BF9\u5E94\u8282\u70B9\u662F\u5426\u76F8\u540C</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  left<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  right<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">isSymmetric</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>pRoot<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>  Demo<span class="token punctuation">.</span><span class="token function">isSymmetricCore</span><span class="token punctuation">(</span>pRoot<span class="token punctuation">,</span> pRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">isSymmetricCore</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>p1<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> p2<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p1<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>p2<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>p1<span class="token operator">||</span><span class="token operator">!</span>p2<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>val <span class="token operator">!==</span> p2<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">isSymmetricCore</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p2<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> Demo<span class="token punctuation">.</span><span class="token function">isSymmetricCore</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p2<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> rootA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootA<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">isSymmetric</span><span class="token punctuation">(</span>rootA<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-29-\u987A\u65F6\u9488\u6253\u5370\u77E9\u9635" tabindex="-1"><a class="header-anchor" href="#no-29-\u987A\u65F6\u9488\u6253\u5370\u77E9\u9635" aria-hidden="true">#</a> NO.29 \u987A\u65F6\u9488\u6253\u5370\u77E9\u9635</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u4E3E\u7740\uFF0C\u6309\u7167\u4ECE\u5916\u5411\u91CC\u4EE5\u987A\u65F6\u9488\u7684\u987A\u5E8F\u4F9D\u6B21\u6253\u5370\u51FA\u6BCF\u4E00\u4E2A\u6570\u5B57\u3002\u4F8B\u5982\uFF1A [[1,2,3,4]<br> [5,6,7,8]<br> [9,10,11,12]<br> [13,14,15,16]]<br> \u5219\u4F9D\u6B21\u6253\u5370\u51FA\u6570\u5B571,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u53EF\u5148\u987A\u65F6\u9488\u6253\u5370\u5B8C\u4E00\u5708\uFF0C\u518D\u5BF9\u5185\u5708\u7684\u6570\u5B57\u7EE7\u7EED\u6253\u5370\uFF0C\u5C42\u5C42\u5D4C\u5957</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u5B9A\u4E49start\u8868\u793A\u987A\u65F6\u9488\u6253\u5370\u7684\u8D77\u70B9\uFF0C\u6BCF\u6B21\u6253\u5370\u4E00\u5708start\u52A01\uFF0C\u9012\u5F52\u6253\u5370\u7EC8\u70B9\u4E3A2*start\u5C0F\u4E8E\u77E9\u9635mat\u7684\u6700\u5C0F\u7684\u7EF4\u5EA6(<code>2*start &lt; mat.length &amp;&amp; 2*start &lt; mat[0].length</code>)</li><li>\u987A\u65F6\u9488\u6253\u5370\u53EF\u91C7\u53D6\u8D2A\u5A6A\u6253\u5370\u65B9\u6CD5\uFF0C\u6253\u5370\u77E9\u9635\u8303\u56F4\u4E3A<code>start</code>\u5411\u53F3\u81F3<code>endX = mat[0].length - 1 - start</code>\uFF0C\u5411\u4E0B\u81F3<code>endY = mat.length - 1 - start</code>\u4ECE\u5DE6\u5230\u53F3\u5C3D\u91CF\u6253\u5370\u5B8C\u4E00\u884C\uFF0C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u65F6\uFF0C\u5219\u8D77\u70B9\u4E3Astart+1\uFF0C\u540C\u6837\u5C3D\u91CF\u6253\u5370\u5B8C\u4E00\u5217\u3002</li><li>\u4ECE\u53F3\u81F3\u5DE6\u6253\u5370\u65F6\u9700\u8981\u5148\u5224\u65AD\u662F\u5426\u4EC5\u6709\u4E00\u884C\uFF0C\u907F\u514D\u91CD\u590D\u6253\u5370\uFF0C\u8D77\u70B9\u4E3AendX - 1\uFF0C\u7EC8\u70B9\u4E3Astart</li><li>\u4ECE\u4E0B\u81F3\u4E0A\u4E5F\u9700\u8981\u5148\u5224\u65AD\u662F\u5426\u53EA\u6709\u4E00\u5217\uFF0C\u907F\u514D\u91CD\u590D\u6253\u5370,\u8D77\u70B9\u4E3AendY - 1,\u7EC8\u70B9\u4E3Astart+1</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">spiralOrder</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>mat<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>mat<span class="token operator">||</span>mat<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token operator">||</span>mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>start <span class="token operator">&lt;</span> mat<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token number">2</span><span class="token operator">*</span>start <span class="token operator">&lt;</span> mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      Demo<span class="token punctuation">.</span><span class="token function">_spiralOrderCore</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> start<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      start<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">_spiralOrderCore</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>mat<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> start<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> res<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>start <span class="token operator">&gt;=</span> mat<span class="token punctuation">.</span>length <span class="token operator">||</span> start <span class="token operator">&gt;=</span> mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> endX <span class="token operator">=</span> mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
    <span class="token keyword">let</span> endY <span class="token operator">=</span> mat<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>endX <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> endY <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> endX<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mat<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> endY<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>endX<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>start <span class="token operator">&lt;</span> endY<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> endX <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> start<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mat<span class="token punctuation">[</span>endY<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>start <span class="token operator">&lt;</span> endX<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> endY<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> start<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>Demo<span class="token punctuation">.</span><span class="token function">spiralOrder</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-30-\u5305\u542Bmin\u51FD\u6570\u7684\u6808" tabindex="-1"><a class="header-anchor" href="#no-30-\u5305\u542Bmin\u51FD\u6570\u7684\u6808" aria-hidden="true">#</a> NO.30 \u5305\u542Bmin\u51FD\u6570\u7684\u6808</h2><p>\u9898\u76EE\uFF1A\u5B9A\u4E49\u6808\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u8BF7\u5728\u8BE5\u7C7B\u578B\u4E2D\u5B9E\u73B0\u4E00\u4E2A\u80FD\u591F\u5F97\u5230\u6808\u7684\u6700\u5C0F\u5143\u7D20\u7684min\u51FD\u6570\u3002\u5728\u8BE5\u6808\u4E2D\uFF0C\u8C03\u7528min\u3001push\u3001pop\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662FO(1)\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5185\u90E8\u589E\u52A0\u4E00\u4E2A\u8F85\u52A9\u6808\uFF0C\u6BCF\u6B21push\u65F6\uFF0C\u540C\u65F6\u7ED9\u8F85\u52A9\u6808push\u6700\u5C0F\u7684\u5143\u7D20(\u6BD4\u8F83\u8F85\u52A9\u6808\u4E2Dtop\u548C\u4F20\u5165\u6570\u503C\uFF0Cpush\u8F83\u5C0F\u7684\u8FDB\u8F85\u52A9\u6808)\uFF0C\u8FD9\u6837\u5C31\u80FD\u4FDD\u8BC1\u6700\u5C0F\u7684\u5143\u7D20\u59CB\u7EC8\u5728\u6808\u9876\uFF0C\u6BCF\u6B21pop\u65F6\u540C\u65F6pop\u8F85\u52A9\u6808\u4E2D\u7684\u5143\u7D20</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MinStack</span> <span class="token punctuation">{</span>
  stack<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  minStack<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>minStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;stack is empty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> testStack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MinStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>
      testStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>testStack<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>testStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>testStack<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>testStack<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-31-\u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#no-31-\u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217" aria-hidden="true">#</a> NO.31 \u6808\u7684\u538B\u5165\u3001\u5F39\u51FA\u5E8F\u5217</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E24\u4E2A\u6574\u6570\u7684\u5E8F\u5217\uFF0C\u7B2C\u4E00\u4E2A\u5E8F\u5217\u8868\u793A\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u8BF7\u5224\u65AD\u7B2C\u4E8C\u4E2A\u5E8F\u5217\u662F\u5426\u4E3A\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002\u5047\u8BBE\u538B\u5165\u6808\u7684\u6240\u6709\u6570\u5B57\u5747\u4E0D\u76F8\u7B49\u3002\u4F8B\u5982\uFF0C\u5E8F\u5217[1,2,3,4,5]\u662F\u67D0\u6808\u7684\u538B\u5165\u5E8F\u5217\uFF0C\u5E8F\u5217[4,5,3,2,1]\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u5BF9\u5E94\u7684\u4E00\u4E2A\u5F39\u51FA\u5E8F\u5217\uFF0C\u4F46[4,3,5,1,2]\u5C31\u4E0D\u53EF\u80FD\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u7684\u5F39\u51FA\u5E8F\u5217\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5F00\u8F9F\u4E00\u4E2A\u8F85\u52A9\u6808stack\uFF0C\u6309\u7167\u5165\u6808\u5E8F\u5217pushed\uFF0C\u538B\u5165\u5143\u7D20\uFF0C\u5165\u6808\u7684\u540C\u65F6\u5224\u65AD\u662F\u5426\u4E0E\u51FA\u6808\u5E8F\u5217popped\u7684\u5143\u7D20\u662F\u5426\u76F8\u540C\uFF0C\u82E5\u76F8\u540C\u5219\u51FA\u6808</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u5224\u65AD\u8F93\u5165\u5E8F\u5217\u957F\u5EA6\u662F\u5426\u76F8\u540C\uFF0C\u82E5\u4E0D\u540C\u5219\u76F4\u63A5\u8FD4\u56DEfalse</li><li>\u8BBE\u7F6E\u4E24\u4E2A\u6307\u9488i,j\u5206\u522B\u6307\u5411\u4E24\u4E2A\u5E8F\u5217pushed, popped</li><li>\u5148\u5FAA\u73AF\u904D\u5386pushed\u5E8F\u5217\uFF0C\u6309\u987A\u5E8F\u5165\u6808\uFF0C\u82E5\u5224\u65ADi\u82E5\u6307\u5411\u7684\u5143\u7D20\u4E0Ej\u6307\u5411\u7684\u76F8\u540C\uFF0C\u5219\u53EF\u8DF3\u8FC7\u5165\u6808\uFF0C\u76F4\u63A5\u53F3\u79FBi\u3001j\u6307\u9488\u5E76\u8DF3\u8FC7\u672C\u8F6E\u5FAA\u73AF\uFF0C\u82E5\u6808\u9876\u5143\u7D20\u4E0Ej\u7684\u6307\u5411\u76F8\u540C\u5219\u5148\u51FA\u6808\u53F3\u79FBj\u6307\u9488\u5E76\u8DF3\u8FC7\u672C\u8F6E\u5FAA\u73AF\uFF0C\u5176\u6B21\u624D\u662F\u5C06i\u5143\u7D20\u5165\u6808\uFF0C\u5E76\u53F3\u79FBi\u6307\u9488\uFF0C\u904D\u5386\u7EC8\u6B62\u6761\u4EF6\u4E3Ai\u6216j\u8D8A\u754C</li><li>\u5224\u65AD\u8F85\u52A9\u6808stack\u662F\u5426\u4E3A\u7A7A\uFF0C\u82E5\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u8BF4\u660E\u672A\u5B8C\u5168\u51FA\u6808\uFF0C\u5219\u4F7F\u7528j\u6307\u9488\u7EE7\u7EED\u5BF9popped\u8FDB\u884C\u904D\u5386\uFF0C\u76F8\u540C\u5143\u7D20\u76F8\u540C\u5219\u51FA\u6808\uFF0C\u4E0D\u540C\u5219\u8868\u660E\u987A\u5E8F\u4E0D\u540C\uFF0C\u4E0D\u662F\u5F39\u51FA\u5E8F\u5217\u76F4\u63A5\u8FD4\u56DEfalse</li><li>\u6700\u540Ei\u3001j\u6307\u9488\u5E94\u8BE5\u7D22\u5F15\u5E94\u8BE5\u76F8\u540C\uFF0C\u5E76\u4E14\u8F85\u52A9\u6808stack\u4E3A\u7A7A\uFF0C\u8BF4\u660Epopped\u4E3A\u5F39\u51FA\u5E8F\u5217\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">validateStackSequences</span><span class="token punctuation">(</span>pushed<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> popped<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pushed<span class="token punctuation">.</span>length <span class="token operator">!==</span> popped<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> stack<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span>pushed<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;</span>popped<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>pushed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> popped<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
        j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>popped<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pushed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;</span>popped<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>popped<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> j<span class="token operator">&amp;&amp;</span>stack<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> testData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> testData2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">debugger</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">validateStackSequences</span><span class="token punctuation">(</span>testData<span class="token punctuation">,</span> testData2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-32-\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#no-32-\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811" aria-hidden="true">#</a> NO.32 \u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811</h2><h3 id="\u9898\u76EE\u4E00-\u4E0D\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u4E0D\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u4E0D\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811</h3><p>\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u51FA\u4E8C\u53C9\u6811\u7684\u6BCF\u4E2A\u8282\u70B9\uFF0C\u540C\u4E00\u5C42\u7684\u8282\u70B9\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u6536\u5C3E\u987A\u5E8F\u6253\u5370\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u961F\u5217\u7684\u5148\u8FDB\u5148\u51FA\u7279\u6027\uFF0C\u5C06\u8282\u70B9\u5DE6\u53F3\u8282\u70B9\u987A\u5E8F\u6DFB\u52A0\u5230\u961F\u5217\u4E2D\uFF0C\u5224\u65AD\u961F\u5217\u957F\u5EA6\uFF0C\u6BCF\u6B21\u51FA\u961F\u5C06\u8282\u70B9\u503C\u4FDD\u5B58\u5728\u7ED3\u679C\u4E2D\uFF0C\u5E76\u5224\u65AD\u662F\u5426\u53F3\u5DE6\u53F3\u5B50\u8282\u70B9\uFF0C\u5E76\u5165\u961F\u5230\u961F\u5217\u4E2D\uFF0C\u904D\u5386\u5B8C\u6210\u540E\u8FD4\u56DE\u7ED3\u679C\u5373\u53EF</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
  left<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  right<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">levelOrder</span><span class="token punctuation">(</span>root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> dequeCache<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>dequeCache<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> p<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> dequeCache<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> dequeCache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> dequeCache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">levelOrder</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u5206\u884C\u4ECE\u4E0A\u5230\u4E0B\u6253\u5370\u4E8C\u53C9\u6811</h3><p>\u4ECE\u4E0A\u5230\u4E0B\u6309\u5C42\u6253\u5370\u4E8C\u53C9\u6811\uFF0C\u540C\u4E00\u5C42\u7684\u8282\u70B9\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u6BCF\u4E00\u5C42\u6253\u5370\u4E00\u884C\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4E0E\u4E0A\u9898\u7C7B\u4F3C\uFF0C\u589E\u52A0\u8BB0\u5F55\u5F53\u524D\u5C42\u5269\u4F59\u8282\u70B9\u548C\u4E0B\u4E00\u5C42\u8981\u904D\u5386\u8282\u70B9\u6570\u7684\u53D8\u91CF\uFF0C\u5728\u904D\u5386\u4E2D\u66F4\u65B0\uFF0C\u5E76\u5224\u65AD\u5F53\u524D\u5269\u4F59\u8282\u70B9\u6570\u4E3A0\u4E14\u4E0B\u5C42\u8282\u70B9\u6570\u4E0D\u4E3A0\u65F6\uFF0C\u5C06\u4E0B\u5C42\u8282\u70B9\u6570\u63A8\u5165\u5F53\u524D\u5C42\u5269\u4F59\u8282\u70B9\u6570\u53D8\u91CF\u4E2D\uFF0C\u91CD\u7F6E\u4E0B\u5C42\u8282\u70B9\u6570\uFF0C\u7ED9result\u63A8\u5165\u65B0\u7684\u7A7A\u6570\u7EC4\uFF0C\u7528\u4E8E\u8BB0\u5F55\u4E0B\u4E00\u5C42\u7684\u8282\u70B9\u503C\uFF0C\u8FDB\u5165\u4E0B\u4E00\u5C42\u904D\u5386\u5FAA\u73AF</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">levelOrder</span><span class="token punctuation">(</span>root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// leetcode\u8981\u6C42\u6839\u8282\u70B9\u4E3A\u7A7A\u65F6\u8FD4\u56DE\u521D\u59CB\u503C\u4E3A\u4E00\u7EF4\u7A7A\u6570\u7EC4</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> dequeCache<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> leftNodes <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> nextLevel <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>dequeCache<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> p<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> dequeCache<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      leftNodes<span class="token operator">--</span><span class="token punctuation">;</span>
      result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dequeCache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        nextLevel<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dequeCache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        nextLevel<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>leftNodes <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nextLevel<span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        leftNodes <span class="token operator">=</span> nextLevel<span class="token punctuation">;</span>
        nextLevel <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">levelOrder</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E09-\u4E4B\u5B57\u5F62\u6253\u5370\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E09-\u4E4B\u5B57\u5F62\u6253\u5370\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u9898\u76EE\u4E09\uFF1A\u4E4B\u5B57\u5F62\u6253\u5370\u4E8C\u53C9\u6811</h3><p>\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u6309\u7167\u4E4B\u5B57\u5F62\u987A\u5E8F\u6253\u5370\u4E8C\u53C9\u6811\uFF0C\u5373\u7B2C\u4E00\u884C\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u7B2C\u4E8C\u5C42\u6309\u7167\u4ECE\u53F3\u5230\u5DE6\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u7B2C\u4E09\u884C\u518D\u6309\u7167\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u6253\u5370\uFF0C\u5176\u4ED6\u884C\u4EE5\u6B64\u7C7B\u63A8\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u6808\u7684\u5148\u8FDB\u540E\u51FA\u7279\u6027\uFF0C\u7FFB\u8F6C\u6253\u5370\u987A\u5E8F\uFF0C\u7EF4\u6301\u4E24\u4E2A\u6808\u5206\u522B\u5B58\u50A8\u5F53\u524D\u884C\u548C\u4E0B\u4E00\u884C\uFF0C\u51FA\u6808\u65F6\u521A\u597D\u53EF\u4EE5\u5B9E\u73B0\u53CD\u5E8F</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u63A5\u4E0A\u9898\u5229\u7528\u53D8\u91CF\u5B58\u50A8\u5F53\u524D\u5C42\u5269\u4F59\u8282\u70B9\u6570\u548C\u4E0B\u4E00\u5C42\u8282\u70B9\u6570\uFF0C\u8FBE\u5230\u6309\u5C42\u904D\u5386</li><li>\u5229\u7528\u53CC\u7AEF\u961F\u5217\u6A21\u62DF\u4E24\u4E2A\u6808\uFF0C\u5F53\u4ECE\u5DE6\u5411\u53F3\u904D\u5386\u65F6\uFF0C\u5728\u5DE6\u8FB9\u53D6\u6570\u636E\uFF0C\u53F3\u8FB9\u63A8\u5165\u6570\u636E\uFF0C\u63A8\u5165\u6570\u636E\u65F6\u5148\u63A8\u5DE6\u8282\u70B9\uFF0C\u540E\u63A8\u53F3\u8282\u70B9\uFF0C\u8FD9\u6837\u5728\u4E0B\u4E00\u5C42\u51FA\u6808\u65F6\u5C31\u4F1A\u5148\u51FA\u53F3\u8282\u70B9\u518D\u51FA\u5DE6\u8282\u70B9\u8FBE\u5230\u53CD\u5E8F\u7684\u6548\u679C\u3002</li><li>\u6307\u5B9A\u4E00\u4E2A\u53D8\u91CF\u8868\u793A\u5DE6\u53F3\u904D\u5386\u987A\u5E8F\uFF0C\u5F53\u4ECE\u5DE6\u5411\u53F3\u904D\u5386\u65F6\uFF0C\u4ECE\u5DE6\u8FB9\u53D6\u6570\u636E\uFF0C\u53CD\u4E4B\u4ECE\u53F3\u8FB9\u53D6\u6570\u636E\uFF0C\u63A8\u5165\u6570\u636E\u65F6\u4F9D\u6B21\u7C7B\u63A8\uFF0C\u5F53\u8BE5\u5C42\u904D\u5386\u5B8C\u6210\u65F6\u7FFB\u8F6C\u8BE5\u53D8\u91CF</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">levelOrder</span><span class="token punctuation">(</span>root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> dequeCache<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> leftNodes <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> nextLevel <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>dequeCache<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> p<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> flag <span class="token operator">?</span> dequeCache<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> dequeCache<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      leftNodes<span class="token operator">--</span><span class="token punctuation">;</span>
      result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dequeCache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
          nextLevel<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dequeCache<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
          nextLevel<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dequeCache<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
          nextLevel<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          dequeCache<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
          nextLevel<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>leftNodes <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nextLevel<span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        leftNodes <span class="token operator">=</span> nextLevel<span class="token punctuation">;</span>
        nextLevel <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        flag <span class="token operator">=</span> <span class="token operator">!</span>flag<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">debugger</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">levelOrder</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#no-33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217" aria-hidden="true">#</a> NO.33 \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5224\u65AD\u8BE5\u6570\u7EC4\u662F\u4E0D\u662F\u67D0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u7ED3\u679C\u3002\u5982\u679C\u662F\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse\u3002\u5047\u8BBE\u8F93\u5165\u7684\u6570\u7EC4\u7684\u4EFB\u610F\u4E24\u4E2A\u6570\u5B57\u4E92\u4E0D\u76F8\u540C\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7279\u6027\u3002\u540E\u5E8F\u904D\u5386\u5E8F\u5217\u7684\u6700\u540E\u4E00\u4E2A\u503C\u4E3A\u6839\u8282\u70B9\uFF0C\u5176\u5DE6\u5B50\u6811\u90FD\u5C0F\u4E8E\u6839\u8282\u70B9\uFF0C\u53F3\u5B50\u6811\u90FD\u5927\u4E8E\u6839\u8282\u70B9\uFF0C\u53EF\u4EE5\u627E\u5230\u5DE6\u53F3\u5B50\u6811\u540E\u5E8F\u5E8F\u5217\uFF0C\u518D\u9012\u5F52\u7684\u5224\u65AD\u5DE6\u53F3\u5B50\u6811\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6</p></li><li><p>\u6B65\u9AA4</p><ol><li>\u7EA6\u5B9A\u7A7A\u6570\u7EC4\u76F4\u63A5\u8FD4\u56DEtrue\uFF0C\u8BBE\u5B9Ap\u6307\u9488\u6307\u5411\u7B2C\u4E00\u4E2A\u53F3\u5B50\u6811\u7684\u8282\u70B9</li><li>\u5FAA\u73AF\u904D\u5386\u6570\u7EC4\uFF0C\u76F4\u5230p\u5927\u4E8E\u6839\u8282\u70B9root\uFF0C\u8868\u660E0-p\u4E3A\u5DE6\u5B50\u6811\uFF0C\u904D\u5386\u53F3\u5B50\u6811\uFF0C\u82E5\u53D1\u73B0\u5C0F\u4E8Eroot\u7684\u5143\u7D20\u5219\u76F4\u63A5\u8FD4\u56DEfalse</li><li>\u82E5\u5DE6\u5B50\u6811\u5B58\u5728\u5219\u9012\u5F52\u5224\u65AD\u5DE6\u5B50\u6811\u5E8F\u5217\u662F\u5426\u6EE1\u8DB3\uFF0C\u53F3\u5B50\u6811\u540C\u7406</li><li>\u6700\u540E\u5408\u5E76\u5DE6\u53F3\u5224\u65AD\u7ED3\u679C\u5E76\u8FD4\u56DE</li></ol></li><li><p>ts\u5B9E\u73B0</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">verifyPostorder</span><span class="token punctuation">(</span>postorder<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>postorder<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> postorder<span class="token punctuation">[</span>postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">&lt;</span> postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>postorder<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">&gt;</span> root<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      p<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> p<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>postorder<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> left <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">verifyPostorder</span><span class="token punctuation">(</span>postorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">&lt;</span> postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> right <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">verifyPostorder</span><span class="token punctuation">(</span>postorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> left <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> testData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">debugger</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">verifyPostorder</span><span class="token punctuation">(</span>testData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-34-\u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#no-34-\u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84" aria-hidden="true">#</a> NO.34 \u4E8C\u53C9\u6811\u4E2D\u548C\u4E3A\u67D0\u4E00\u503C\u7684\u8DEF\u5F84</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u9897\u4E8C\u53C9\u6811\u548C\u4E00\u4E2A\u6574\u6570\uFF0C\u6253\u5370\u51FA\u4E8C\u53C9\u6811\u4E2D\u8282\u70B9\u503C\u7684\u548C\u4E3A\u8F93\u5165\u6574\u6570\u7684\u6240\u6709\u8DEF\u5F84\u3002\u4ECE\u6811\u7684\u6839\u8282\u70B9\u5F00\u59CB\u5F80\u4E0B\u4E00\u76F4\u5230\u53F6\u8282\u70B9\u6240\u7ECF\u8FC7\u7684\u8282\u70B9\u5F62\u6210\u4E00\u6761\u8DEF\u5F84</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5B9A\u4E49path\u6570\u7EC4\u7528\u4E8E\u5B58\u50A8\u8DEF\u5F84\uFF0Cresult\u7528\u4E8E\u5B58\u50A8\u7B26\u5408\u6761\u4EF6\u7684\u8DEF\u5F84\uFF0C\u5BF9\u8282\u70B9\u8FDB\u884C\u9012\u5F52\u904D\u5386\uFF0C\u5C06\u8BE5\u8282\u70B9\u7684\u503C\u63A8\u5165path\u4E2D\uFF0C\u82E5\u8BE5\u8282\u70B9\u6CA1\u6709\u5DE6\u53F3\u5B50\u8282\u70B9\u5219\u4E3A\u53F6\u5B50\u8282\u70B9\uFF0C\u8BA1\u7B97\u8DEF\u5F84\u548C\uFF0C\u5E76\u4E0E\u76EE\u6807\u6570\u8FDB\u884C\u6BD4\u8F83\uFF0C\u82E5\u76F8\u540C\u5219\u63A8\u5165result\u6570\u7EC4\u4E2D\uFF0C\u6700\u540E\u56DE\u6EAF\u51FA\u6808\u7ED3\u675F\u8BE5\u8282\u70B9\u7684\u904D\u5386</li><li>ts\u5B9E\u73B0</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> target<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> result<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> path<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    Demo<span class="token punctuation">.</span><span class="token function">pathSumCore</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> target<span class="token punctuation">,</span> result<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">pathSumCore</span><span class="token punctuation">(</span>root<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">,</span> target<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> res<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> path<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span> Demo<span class="token punctuation">.</span><span class="token function">pathSumCore</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> target<span class="token punctuation">,</span> res<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span> Demo<span class="token punctuation">.</span><span class="token function">pathSumCore</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> target<span class="token punctuation">,</span> res<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">.</span>left<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> sum <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>sum <span class="token operator">===</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">pathSum</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236" tabindex="-1"><a class="header-anchor" href="#no-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236" aria-hidden="true">#</a> NO.35 \u590D\u6742\u94FE\u8868\u7684\u590D\u5236</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u51FD\u6570\uFF0C\u590D\u5236\u4E00\u4E2A\u590D\u6742\u94FE\u8868\u3002\u5728\u590D\u6742\u94FE\u8868\u4E2D\uFF0C\u6BCF\u4E2A\u8282\u70B9\u9664\u4E86\u6709\u4E00\u4E2Anext\u6307\u9488\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u8FD8\u6709\u4E00\u4E2ApSibling\u6307\u9488\u6307\u5411\u94FE\u8868\u4E2D\u7684\u4EFB\u610F\u8282\u70B9\u6216\u8005nullptr</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5728\u539F\u94FE\u8868\u7684\u57FA\u7840\u4E0A\uFF0C\u6BCF\u4E2A\u8282N\u70B9\u540E\u9762\u590D\u5236\u4E00\u4E2A\u8282\u70B9N&#39;,\u5982<code>1-&gt;2-&gt;3</code>\u53D8\u4E3A<code>1-&gt;1&#39;-&gt;2-&gt;2&#39;-&gt;3-&gt;3&#39;</code>\u3002\u904D\u5386\u590D\u5236\u540E\u7684\u94FE\u8868\uFF0C\u4FEE\u590DN&#39;\u8282\u70B9\u4E0A\u7684pSibling\u6307\u9488\uFF0C\u5206\u79BBN\u548CN&#39;\u8282\u70B9\u7EC4\u6210\u4E24\u4E2A\u94FE\u8868\uFF0CN&#39;\u8282\u70B9\u6240\u5728\u7684\u94FE\u8868\u5373\u4E3A\u590D\u5236\u597D\u7684\u94FE\u8868</li><li>js\u5B9E\u73B0(\u7531\u4E8Eleetcode\u672A\u652F\u6301ts\uFF0C\u6539\u4E3Ajs\u5B9E\u73B0)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">LinkNode</span> <span class="token punctuation">{</span>
  val<span class="token punctuation">;</span>
  next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  random <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> next<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> random<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>random <span class="token operator">=</span> random<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">copyRandomList</span><span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    Demo<span class="token punctuation">.</span><span class="token function">_copyNode</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Demo<span class="token punctuation">.</span><span class="token function">_fixRandomLink</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">_splitLink</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_copyNode</span><span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> next <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>val<span class="token punctuation">,</span> next<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      p <span class="token operator">=</span> next<span class="token punctuation">;</span>      
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_fixRandomLink</span><span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> cp <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>random<span class="token punctuation">)</span><span class="token punctuation">{</span>
        cp<span class="token punctuation">.</span>random <span class="token operator">=</span> p<span class="token punctuation">.</span>random<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      p <span class="token operator">=</span> cp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_splitLink</span><span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> cpHead <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> head<span class="token punctuation">,</span> cp <span class="token operator">=</span> cpHead<span class="token punctuation">;</span>
    <span class="token keyword">let</span> next <span class="token operator">=</span> cpHead<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span>
      p<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
      next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      cp<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>

      p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      cp <span class="token operator">=</span> cp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    p<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token keyword">return</span> cpHead<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span>
    head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>random <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">copyRandomList</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-36-\u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#no-36-\u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868" aria-hidden="true">#</a> NO.36 \u4E8C\u53C9\u641C\u7D22\u6811\u4E0E\u53CC\u5411\u94FE\u8868</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u9897\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u5C06\u8BE5\u4E8C\u53C9\u641C\u7D22\u6811\u8F6C\u6362\u6210\u4E00\u4E2A\u6392\u5E8F\u7684\u53CC\u5411\u94FE\u8868\u3002\u8981\u6C42\u4E0D\u80FD\u521B\u5EFA\u4EFB\u4F55\u65B0\u7684\u8282\u70B9\uFF0C\u53EA\u80FD\u8C03\u6574\u6811\u4E2D\u8282\u70B9\u6307\u9488\u7684\u6307\u5411</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u4E8C\u53C9\u641C\u7D22\u6811\u7684\uFF1A\u5DE6&lt;\u6839&lt;\u53F3\u7684\u7279\u6027\uFF0C\u9012\u5F52\u904D\u5386\u5404\u8282\u70B9\uFF0C\u4F20\u5165\u94FE\u8868\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\uFF0C\u5BF9\u4E8E\u5F53\u524D\u8282\u70B9\uFF0C\u94FE\u8868\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u4E0E\u5176\u5DE6\u5B50\u6811\u4E2D\u7684\u5DE6\u53F6\u5B50\u8282\u70B9\u76F8\u8FDE\uFF0C\u5982\u679C\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u4FEE\u590D\u53CC\u5411\u94FE\u63A5\uFF0C\u6B64\u65F6\u8BE5\u8282\u70B9\u5C31\u88AB\u6DFB\u52A0\u5230\u4E86\u94FE\u8868\u4E2D\uFF0C\u79FB\u52A8\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u6307\u9488\uFF0C\u9012\u5F52\u5224\u65AD\u5176\u53F3\u5B50\u6811\uFF0C\u8FD4\u56DE\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u6307\u9488\uFF0C\u6700\u540E\u5411\u524D\u56DE\u6EAF\uFF0C\u76F4\u5230\u627E\u5230\u94FE\u8868\u5934\u6307\u9488\u5373\u53EF</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u8BBE\u7F6E\u94FE\u8868\u5C3E\u90E8\u6307\u9488pTail\uFF0C\u521D\u59CB\u503C\u4E3Anull\uFF0C\u82E5\u5F53\u524D\u8282\u70B9\u5B58\u5728\u5DE6\u5B50\u8282\u70B9\uFF0C\u9012\u5F52\u5224\u65AD\u5DE6\u5B50\u6811,\u5C06\u5DE6\u5B50\u6811\u8F6C\u6362\u7ED3\u679C\u4E0E\u5F53\u524D\u8282\u70B9\u76F8\u8FDE(pCur.left = pTail)</li><li>\u82E5pTail\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u4FEE\u590D\u53CC\u5411\u94FE\u63A5\uFF0C\u79FB\u52A8pTail\u6307\u5411\u5F53\u524D\u8282\u70B9\uFF0C\u8868\u793A\u5DF2\u5C06\u5F53\u524D\u8282\u70B9\u6DFB\u52A0\u5230\u94FE\u8868\u4E2D</li><li>\u82E5pCur.right\u5B58\u5728\uFF0C\u5219\u904D\u5386\u53F3\u5B50\u6811\uFF0C\u6B64\u8FC7\u7A0B\u53F3\u5B50\u6811\u4E2D\u4F1A\u81EA\u52A8\u5C06\u94FE\u8868\u7ED3\u679C\u76F8\u8FDE</li><li>\u5BF9\u6839\u8282\u70B9\u7684\u904D\u5386\u4F1A\u8FD4\u56DE\u94FE\u8868\u7684\u672B\u5C3E\u8282\u70B9\uFF0C\u5411\u524D\u904D\u5386\u94FE\u8868\u627E\u5230\u94FE\u8868\u5934\u6307\u9488\uFF0C\u8FD4\u56DE\u5373\u53EF</li></ol></li><li><p>js\u5B9E\u73B0</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode</span> <span class="token punctuation">{</span>
  val<span class="token punctuation">;</span>
  left<span class="token punctuation">;</span>
  right<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> left<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> right<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> left<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">convert2List</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> pTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    pTail <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">_convert2ListCore</span><span class="token punctuation">(</span>pTail<span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> pHead <span class="token operator">=</span> pTail<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>pHead<span class="token operator">&amp;&amp;</span>pHead<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
      pHead <span class="token operator">=</span> pHead<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// pHead.left = pTail; // leetcode\u4E2D\u8981\u6C42\u5FAA\u73AF\u94FE\u8868</span>
    <span class="token comment">// pTail.right = pHead;</span>
    <span class="token keyword">return</span> pHead<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_convert2ListCore</span><span class="token punctuation">(</span><span class="token parameter">pTail<span class="token punctuation">,</span> pCur</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>pCur<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> pCur<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">)</span> pTail <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">_convert2ListCore</span><span class="token punctuation">(</span>pTail<span class="token punctuation">,</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>left <span class="token operator">=</span> pTail<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pTail<span class="token punctuation">)</span> pTail<span class="token punctuation">.</span>right <span class="token operator">=</span> p<span class="token punctuation">;</span>
    pTail <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> pTail <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">_convert2ListCore</span><span class="token punctuation">(</span>pTail<span class="token punctuation">,</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> pTail<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\u51FD\u6570</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// debugger;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">convert2List</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-37-\u5E8F\u5217\u5316\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#no-37-\u5E8F\u5217\u5316\u4E8C\u53C9\u6811" aria-hidden="true">#</a> NO.37 \u5E8F\u5217\u5316\u4E8C\u53C9\u6811</h2><p>\u9898\u76EE\uFF1A\u8BF7\u5B9E\u73B0\u4E24\u4E2A\u51FD\u6570\uFF0C\u5206\u522B\u7528\u6765\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u4E8C\u53C9\u6811</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A<a href="#no7-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91">\u9762\u8BD5\u98987</a>\u4E2D\u5229\u7528\u4E86\u524D\u5E8F\u548C\u4E2D\u5E8F\u5E8F\u5217\u6765\u91CD\u5EFA\u4E8C\u53C9\u6811\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4F7F\u7528\u524D\u5E8F\u65B9\u6CD5\u6765\u5E8F\u5217\u5316\u4E8C\u53C9\u6811\uFF0C\u4E3A\u4E86\u80FD\u53CD\u5E8F\u5217\u5316\uFF0C\u5BF9\u4E8E\u7A7A\u8282\u70B9\u4F7F\u7528null\u8868\u793A\uFF0C\u56E0\u6B64\u6839\u8282\u70B9\u540E\u5373\u4E3A\u5176\u5DE6\u5B50\u6811\u7684\u6839\u8282\u70B9\uFF0C\u82E5\u503C\u4E3Anull\u5219\u8868\u793A\u6CA1\u6709\u5DE6\u5B50\u6811\uFF0C\u82E5\u5176\u540E\u8DDF\u4E24\u4E2Anull\u5219\u8868\u793A\u5230\u8FBE\u53F6\u5B50\u8282\u70B9\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5229\u7528\u9012\u5F52\u7684\u65B9\u5F0F\u5BF9\u5176\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316</li><li>js\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode</span><span class="token punctuation">{</span>
  val<span class="token punctuation">;</span>
  left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> pRoot <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>val <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      pRoot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      pRoot<span class="token punctuation">.</span>left <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      pRoot<span class="token punctuation">.</span>right <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pRoot<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> Demo<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;serialize:&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;deserialize:&#39;</span><span class="token punctuation">,</span> Demo<span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-38-\u5B57\u7B26\u4E32\u7684\u6392\u5217" tabindex="-1"><a class="header-anchor" href="#no-38-\u5B57\u7B26\u4E32\u7684\u6392\u5217" aria-hidden="true">#</a> NO.38 \u5B57\u7B26\u4E32\u7684\u6392\u5217</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u6253\u5370\u51FA\u8BE5\u5B57\u7B26\u4E32\u4E2D\u5B57\u7B26\u7684\u6240\u6709\u6392\u5217\u3002\u4F8B\u5982\uFF0C\u8F93\u5165\u5B57\u7B26abc\uFF0C\u5219\u6253\u5370\u51FA\u7531\u5B57\u7B26a,b,c\u6240\u80FD\u6392\u5217\u51FA\u6765\u7684\u6240\u6709\u5B57\u7B26\u4E32abc,acb,bac,bca,cab,cba\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5BF9\u5B57\u7B26\u4E32\u8FDB\u884C\u6392\u5217\uFF0C\u5728\u8003\u8651\u6709\u91CD\u590D\u5B57\u7B26\u7684\u60C5\u51B5\u4E0B\uFF0C\u56FA\u5B9A\u4E00\u4F4D\u5B57\u7B26\uFF0C\u5269\u4E0B\u7684\u5B57\u7B26f(n-1)\u79CD\u6392\u5217\u65B9\u6CD5\uFF0C\u800C\u56FA\u5B9A\u5B57\u7B26\u7684\u9009\u53D6\u53EF\u4EE5\u6709n\u79CD\u9009\u62E9\uFF0C\u56E0\u6B64\u957F\u5EA6\u4E3An\u7684\u5B57\u7B26\u4E32\u6709n*f(n-1)\u4E2D\u6392\u5217\u65B9\u6CD5\uFF0C\u53EF\u91C7\u53D6\u9012\u5F52\u7684\u65B9\u5F0F\u6C42\u5F97f(n-1)\u7684\u7EC4\u5408\uFF0C\u5728\u5C06\u7B2C\u4E00\u4E2A\u56FA\u5B9A\u4F4D\u7684\u5B57\u7B26\u4E0E\u540E\u9762\u7684\u5B57\u7B26\u4F9D\u6B21\u4EA4\u6362\uFF0C\u5206\u522B\u6C42f(n-1)\u5373\u53EF\u5F97\u5230\u5168\u6392\u5217\uFF0C\u5728\u6709\u91CD\u590D\u5B57\u7B26\u7684\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u6B21\u4FDD\u5B58\u4EA4\u6362\u8FC7\u7684\u5B57\u7B26\uFF0C\u5BF9\u91CD\u590D\u7684\u5B57\u7B26\u4EC5\u4EA4\u6362\u4E00\u6B21\uFF0C\u5373\u53EF\u907F\u514D\u7EE7\u7EED\u91CD\u590D\u6392\u5217\u3002</li><li>\u6B65\u9AA4 <ol><li>\u8BBE\u7F6E\u7ED3\u679C\u5BB9\u5668result\uFF0C\u5224\u65AD\u5F53\u524D\u56FA\u5B9A\u4F4DpCur\u662F\u5426\u662F\u6700\u540E\u4E00\u4F4D\uFF0C\u82E5\u662F\u5219\u76F4\u63A5\u5C06\u5F53\u524D\u5B57\u7B26\u6570\u7EC4\u62FC\u63A5\uFF0C\u63A8\u5165result\u4E2D\uFF0C\u5E76\u8FD4\u56DEresult</li><li>\u8BBE\u7F6EcharSet\u96C6\u5408\u4E34\u65F6\u53D8\u91CF\uFF0C\u4ECE\u5F53\u524D\u56FA\u5B9A\u4F4D\u5F00\u59CB\u904D\u5386\uFF0C\u82E5charSet\u4E2D\u5B58\u50A8\u6709\u8BE5\u5B57\u7B26\u5219\uFF0C\u8DF3\u8FC7\u672C\u6B21\u904D\u5386\uFF0C\u82E5\u6CA1\u6709\u5219\u52A0\u5165charSet\u4E2D\uFF0C\u8FDB\u884C\u6B65\u9AA43</li><li>\u4EA4\u6362\u5F53\u524D\u7D22\u5F15i\u548CpCur\u5904\u7684\u5B57\u7B26\uFF0C\u5411\u540E\u79FB\u52A8pCur\uFF0C\u9012\u5F52\u5B50\u4E32\u7684\u6392\u5217\uFF0C\u91CD\u590D\u6B65\u9AA41-3</li><li>\u5C06\u9012\u5F52\u7684\u8FD4\u56DE\u7ED3\u679C\u4E0Eresult\u8FDE\u63A5\u8D77\u6765\uFF0C\u590D\u539F\u4EA4\u6362\u7684\u5B57\u7B26(\u56DE\u6EAF)</li><li>\u904D\u5386\u5B8C\u6210\u540E\u8FD4\u56DEresult\u5373\u53EF</li></ol></li><li>js\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">permutation</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">permutationCore</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">permutationCore</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> pCur</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pCur <span class="token operator">&gt;=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> charSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> pCur<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>charSet<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        charSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>pCur<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>pCur<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">permutationCore</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> pCur<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>pCur<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>pCur<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">debugger</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">permutation</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-39-\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-39-\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57" aria-hidden="true">#</a> NO.39 \u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u7684\u6570\u5B57</h2><p>\u9898\u76EE\uFF1A\u6570\u7EC4\u4E2D\u6709\u4E00\u4E2A\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570\u8D85\u8FC7\u6570\u7EC4\u957F\u5EA6\u7684\u4E00\u534A\uFF0C\u8BF7\u627E\u51FA\u8FD9\u4E2A\u6570\u5B57\u3002\u4F8B\u5982\uFF0C\u8F93\u5165\u4E00\u4E2A\u957F\u5EA6\u4E3A9\u7684\u6570\u7EC4[1,2,3,2,2,2,5,4,2]\u3002\u7531\u4E8E\u6570\u7EC42\u5728\u6570\u7EC4\u4E2D\u51FA\u73B0\u4E865\u6B21\uFF0C\u8D85\u8FC7\u6570\u7EC4\u957F\u5EA6\u7684\u4E00\u534A\uFF0C\u56E0\u6B64\u8F93\u51FA2.</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li>\u6B21\u6570\u8D85\u8FC7\u4E00\u822C\u7684\u6570\u5B57\u4E00\u5B9A\u4F4D\u4E8E\u6392\u5E8F\u540E\u6570\u7EC4\u7684n/2\u5904\uFF0C\u53EF\u4EE5\u5229\u7528\u5FEB\u901F\u6392\u5E8F\u6CD5\uFF0C\u9009\u62E9\u6BD4\u8F83\u57FA\u6570\uFF0C\u82E5\u5DE6\u8FB9\u7684\u5E8F\u5217\u957F\u5EA6\u8D85\u8FC7\u4E00\u534A\uFF0C\u5219\u8BE5\u6570\u5B57\u5728\u5DE6\u8FB9\u5E8F\u5217\u4E2D\uFF0C\u9012\u5F52\u5224\u65AD\u5B50\u5E8F\u5217\u7D2F\u79EF\u957F\u5EA6\uFF0C\u5373\u53EF\u627E\u5230\u8BE5\u6570\u5B57</li><li>\u904D\u5386\u6570\u7EC4\uFF0C\u5BF9\u6570\u5B57\u51FA\u73B0\u6B21\u6570\u8FDB\u884C\u7EDF\u8BA1\uFF0Cnum\u521D\u59CB\u6B21\u6570\u4E3A1\uFF0C\u82E5\u4E0B\u4E00\u4E2A\u6570\u5B57\u76F8\u540C\u5219\u6B21\u6570times++\uFF0C\u5426\u5219times--\uFF0C\u82E5times\u4E3A0\u65F6\uFF0C\u5219\u6539\u53D8num\u4E3A\u5F53\u524D\u904D\u5386\u7684\u6570\u5B57\uFF0C\u91CD\u7F6Etimes\u4E3A1\uFF0C\u904D\u5386\u5B8C\u6210\u540E\uFF0Ctimes\u4E0D\u4E3A0\uFF0Cnum\u4E00\u5B9A\u662F\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u6570\u5B57\uFF0C\u9A8C\u8BC1\u5176\u6B21\u6570\u8D85\u8FC7\u4E00\u534A\u65F6\u5373\u53EF\u8FD4\u56DE</li></ol></li><li><p>js\u5B9E\u73B0</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">majorityElement</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>nums<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> times <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>times <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        times <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>result <span class="token operator">===</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        times<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        times<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Demo<span class="token punctuation">.</span><span class="token function">checkMajority</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">checkMajority</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> times <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>val <span class="token operator">===</span> target<span class="token punctuation">)</span> times<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token operator">*</span>times <span class="token operator">&gt;=</span> nums<span class="token punctuation">.</span>length <span class="token operator">?</span> target <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">majorityElement</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Demo<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-40-\u6700\u5C0F\u7684k\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#no-40-\u6700\u5C0F\u7684k\u4E2A\u6570" aria-hidden="true">#</a> NO.40 \u6700\u5C0F\u7684k\u4E2A\u6570</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165n\u4E2A\u6574\u6570\uFF0C\u627E\u51FA\u5176\u4E2D\u6700\u5C0F\u7684k\u4E2A\u6570\u3002\u4F8B\u5982\uFF0C\u8F93\u51654,5,1,6,2,7,3,8\u8FD98\u4E2A\u6570\uFF0C\u5219\u6700\u5C0F\u7684\u56DB\u4E2A\u6570\u662F1,2,3,4.</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li>\u5229\u7528\u5FEB\u901F\u6392\u5E8F\u6CD5\uFF0C\u9009\u5B9A\u57FA\u6570\uFF0C\u5C06\u8F83\u5C0F\u7684\u6570\u79FB\u5230\u6570\u7EC4\u524D\u65B9\uFF0C\u8FD4\u56DE\u57FA\u6570\u6240\u5728\u4F4D\u7F6E\u7D22\u5F15\u3002\u82E5\u7D22\u5F15\u5C0F\u4E8E\u76EE\u6807k-1(\u7D22\u5F15\u4ECE0\u5F00\u59CB)\uFF0C\u5219\u8BF4\u660E\u6700\u5C0F\u7684k\u4E2A\u6570\u6709\u4E00\u90E8\u5206\u5728\u53F3\u8FB9\u5E8F\u5217\u4E2D\uFF0C\u5E76\u5BF9\u53F3\u65B9\u8303\u56F4\u5E8F\u5217\u518D\u8FDB\u884C\u5FEB\u6392\u6BD4\u8F83\uFF0C\u5982\u6B64\u53CD\u590D\u76F4\u5230\u8FD4\u56DE\u7D22\u5F15\u4E3Ak-1,\u5219\u8BE5\u6570\u7EC4\u524Dk\u9879\u5373\u4E3A\u6700\u5C0F\u7684k\u4E2A\u6570\u3002\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)</li><li>\u5229\u7528\u5BB9\u91CF\u4E3Ak\u4E2A\u6570\u7684\u6700\u5927\u5806\u6216\u7EA2\u9ED1\u6811\u5BB9\u5668\uFF0C\u5BF9\u6570\u7EC4\u8FDB\u884C\u4E00\u6B21\u904D\u5386\u6BD4\u8F83\uFF0C\u8F83\u5C0F\u7684\u5B58\u5165/\u4EA4\u6362\u5230\u5BB9\u5668\u4E2D\uFF0C\u904D\u5386\u5B8C\u6210\u540E\u5BB9\u5668\u4E2D\u5373\u4E3A\u6700\u5C0F\u7684k\u4E2A\u6570\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(nlogk)</li></ol></li><li><p>js\u5B9E\u73B0</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u57FA\u4E8E\u5FEB\u901F\u6392\u5E8F\u7684\u65B9\u6CD5\u5B9E\u73B0</span>
  <span class="token keyword">static</span> <span class="token function">getLeastNumbers</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token operator">?.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> end <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>index <span class="token operator">!==</span> k <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        start <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        end <span class="token operator">=</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      index <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token operator">?.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> retrun <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>start <span class="token operator">===</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span> start<span class="token punctuation">;</span>
    <span class="token keyword">let</span> temp<span class="token punctuation">;</span>
    <span class="token keyword">let</span> small <span class="token operator">=</span> start <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        small<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>small <span class="token operator">!==</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>
          temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>small<span class="token punctuation">]</span><span class="token punctuation">;</span>
          arr<span class="token punctuation">[</span>small<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
          arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    small<span class="token operator">++</span><span class="token punctuation">;</span>
    temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>small<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>small<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token keyword">return</span> small<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// TODO:\u57FA\u4E8E\u7EA2\u9ED1\u6811\u6216\u6700\u5927\u5806\u7684\u5B9E\u73B0</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token function">getLeastNumbers</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-41-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#no-41-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570" aria-hidden="true">#</a> NO.41 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570</h2><p>\u9898\u76EE\uFF1A\u5982\u4F55\u5F97\u5230\u4E00\u4E2A\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570\uFF1F\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5947\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4F4D\u4E8E\u4E2D\u95F4\u7684\u6570\u503C\uFF0C\u82E5\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5076\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u540E\u4E2D\u95F4\u4E24\u4E2A\u6570\u7684\u5E73\u5747\u503C</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u7531\u4E8E\u8F93\u5165\u662F\u6570\u636E\u6D41\uFF0C\u56E0\u6B64\u9700\u8981\u7EF4\u62A4\u4E00\u4E2A\u5BB9\u5668\uFF0C\u5B58\u50A8\u6BCF\u6B21\u8F93\u5165\u7684\u6570\u636E\u3002\u8981\u83B7\u5F97\u4E2D\u4F4D\u6570\uFF0C\u53EF\u4EE5\u7EF4\u62A4\u4E00\u4E2A\u6392\u5E8F\u6570\u7EC4\u5BB9\u5668\uFF0C\u6BCF\u6B21\u53EF\u4EE5\u4ECE\u4E2D\u95F4\u7D22\u5F15\u4F4D\u7F6E\u83B7\u5F97\u4E2D\u4F4D\u6570\u3002\u4F46\u8003\u8651\u5230\u4E2D\u4F4D\u6570\u7684\u7279\u6027\uFF0C\u53EF\u4EE5\u7EF4\u62A4\u4E00\u4E2A\u6700\u5927\u5806left\u548C\u6700\u5C0F\u5806right\uFF0C\u4FDD\u8BC1\u6700\u5927\u5806\u4E2D\u7684\u6240\u6709\u5143\u7D20left\u5C0F\u4E8E\u6700\u5C0F\u5806\u4E2Dright\u4E2D\u7684\u6240\u6709\u5143\u7D20\uFF0C\u5E76\u4E14\u4E24\u5806\u7684\u5927\u5C0F\u76F8\u5DEE\u4E0D\u5927\u4E8E1\uFF0C\u56E0\u6B64\u53D6\u51FA\u4E2D\u4F4D\u6570\u65F6\uFF0C\u53EF\u4EE5\u76F4\u63A5\u53D6\u5806\u9876\u5143\u7D20</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u521D\u59CB\u5316\u4E24\u4E2A\u8F85\u52A9\u5806</li><li>\u5BF9\u6570\u636E\u6D41\u4E2D\u7684\u6570\u636E\u8FDB\u884C\u5165\u5806\uFF0C\u82E5\u5F53\u524D\u957F\u5EA6\u4E3A\u5947\u6570\u5219\u5411\u6700\u5C0F\u5806right\u4E2D\u63A8\u5165\u5143\u7D20</li><li>\u5411right\u4E2D\u63A8\u5165\u5143\u7D20num\u65F6\uFF0C\u5148\u5224\u65ADnum\u662F\u5426\u5C0F\u4E8Eleft\u7684\u5806\u9876\uFF0C\u82E5\u5C0F\u4E8E\u5219\u9700\u8981\u5148\u5165left\u5806\uFF0C\u7136\u540E\u4ECEleft\u5806\u4E2D\u53D6\u51FA\u5806\u9876\u5143\u7D20\uFF0C\u5165\u5806right\u4E2D\uFF0C\u4FDD\u6301\u4E24\u5806\u5E73\u8861\u3002\u82E5\u4E0D\u5C0F\u4E8E\u5219\u76F4\u63A5\u5165\u5806right</li><li>\u53D6\u51FA\u4E2D\u4F4D\u6570\u65F6\uFF0C\u82E5\u6570\u636E\u6D41\u603B\u957F\u5EA6\u4E3A\u5947\u6570\uFF0C\u5219\u76F4\u63A5\u53D6right\u5806\u9876\uFF0C\u82E5\u4E3A\u5076\u6570\uFF0C\u5219\u53D6\u4E24\u5806\u9876\u5143\u7D20\u6C42\u5E73\u5747</li></ol></li><li><p>js\u5B9E\u73B0</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">class</span> <span class="token class-name">Heap</span> <span class="token punctuation">{</span> <span class="token comment">// \u5148\u5B9E\u73B0\u4E86\u5806\u6570\u636E\u7ED3\u6784</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">compare<span class="token punctuation">,</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>compare <span class="token operator">=</span> compare<span class="token punctuation">;</span> <span class="token comment">// \u6BD4\u8F83\u51FD\u6570\uFF0C\u7528\u4E8E\u63A7\u5236\u751F\u4EA7\u6700\u5927\u5806\u6216\u6700\u5C0F\u5806</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>arr <span class="token operator">=</span> arr<span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316array</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5EFA\u5806\u4EE3\u7801\u4E0E\u6B64\u9898\u65E0\u5173</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_buildDown2Top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u521D\u59CB\u5316arr\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u5BF9arr\u5EFA\u5806</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">_buildDown2Top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5EFA\u5806\u4EE3\u7801\u4E0E\u6B64\u9898\u65E0\u5173</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_down</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">_buildTop2Down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5EFA\u5806\u4EE3\u7801\u4E0E\u6B64\u9898\u65E0\u5173</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_up</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">_down</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5411\u4E0B\u9012\u5F52\u5806\u5316</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>parent <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> parent <span class="token operator">&gt;</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> parent <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_compareNode</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> <span class="token string">&#39;down&#39;</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">_up</span><span class="token punctuation">(</span><span class="token parameter">child<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5411\u4E0A\u9012\u5F52\u5806\u5316</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>child <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> child <span class="token operator">&gt;</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> parent <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>child <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> parent <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_compareNode</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> <span class="token string">&#39;up&#39;</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">_compareNode</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> type<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u6BCF\u4E2A\u8282\u70B9\u5BF9\u901A\u7528\u5BF9\u6BD4\u51FD\u6570</span>
    <span class="token keyword">let</span> target <span class="token operator">=</span> parent<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> end <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      target <span class="token operator">=</span> left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">&lt;=</span> end <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      target <span class="token operator">=</span> right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">!==</span> parent<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>parent<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>parent<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
      type <span class="token operator">===</span> <span class="token string">&#39;up&#39;</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_up</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> end<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_down</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_up</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_down</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">MedianFinder</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Heap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u5927\u5806</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Heap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u5C0F\u5806</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">MedianFinder</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addNum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> target <span class="token operator">=</span> num<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u603B\u957F\u5EA6\u4E3A\u5947\u6570\uFF0C\u5219\u63D2\u5165\u5230\u53F3\u8FB9\u7684\u6700\u5C0F\u5806\u4E2D</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u63A8\u5165\u6570\u5B57\u5C0F\u4E8Eleft\u5219\u5148\u5165left\uFF0C\u5728\u5C06left\u5806\u9876\u5165right</span>
      target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0E\u4E0A\u65B9\u529F\u80FD\u7C7B\u4F3C</span>
      target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">MedianFinder</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">findMedian</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>size <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-42-\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C" tabindex="-1"><a class="header-anchor" href="#no-42-\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C" aria-hidden="true">#</a> NO.42 \u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u6574\u5F62\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u6709\u6B63\u6570\u4E5F\u6709\u8D1F\u6570\u3002\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u6216\u8FDE\u7EED\u591A\u4E2A\u6574\u6570\u7EC4\u6210\u4E00\u4E2A\u5B50\u6570\u7EC4\u3002\u6C42\u6240\u6709\u5B50\u6570\u7EC4\u7684\u548C\u7684\u6700\u5927\u503C\u3002\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A <ul><li>\u601D\u8DEF1\uFF1A\u4F7F\u7528sum\u53D8\u91CF\u5B58\u50A8\u7D2F\u52A0\u548C\uFF0C\u5F53sum\u5C0F\u4E8E\u6216\u7B49\u4E8E0\u65F6\u518D\u7D2F\u52A0\u53EA\u80FD\u8BA9\u6570\u5B57\u66F4\u5C0F\uFF0C\u56E0\u6B64\u4E22\u5F03sum\u503C\uFF0C\u5E76\u8D4B\u4E88\u5F53\u524D\u904D\u5386\u7684\u503Citem\uFF0C\u6BCF\u6B21\u904D\u5386\u5224\u65ADsum\u662F\u5426\u6BD4\u6682\u5B58\u7684max\u5927\uFF0C\u82E5\u5927\u5219\u5C06max\u66F4\u65B0\u4E3A\u6700\u65B0\u7684sum</li><li>\u601D\u8DEF2\uFF1A\u52A8\u6001\u89C4\u5212</li></ul></li><li>js\u5B9E\u73B0\u601D\u8DEF1\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">maxSubArray</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>arr <span class="token operator">||</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>sum <span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span> sum <span class="token operator">=</span> item<span class="token punctuation">;</span>
      <span class="token keyword">else</span> sum <span class="token operator">+=</span> item<span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> max <span class="token operator">=</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> max<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">maxSubArray</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-43-1-n-\u6574\u6570\u4E2D1\u51FA\u73B0\u7684\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#no-43-1-n-\u6574\u6570\u4E2D1\u51FA\u73B0\u7684\u6B21\u6570" aria-hidden="true">#</a> NO.43 <code>[1,n]</code>\u6574\u6570\u4E2D1\u51FA\u73B0\u7684\u6B21\u6570</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u6574\u6570n\uFF0C\u6C42<code>[1,n]</code>\u8FD9n\u4E2A\u6574\u6570\u7684\u5341\u8FDB\u5236\u8868\u793A\u4E2D1\u51FA\u73B0\u7684\u6B21\u6570\u3002\u4F8B\u5982\uFF0C\u8F93\u516512\uFF0C\u5219<code>[1,12]</code>\u8FD9\u4E9B\u6574\u6570\u4E2D\u5305\u542B1\u7684\u6570\u5B57\u67091\uFF0C10,11\u548C12,\u6570\u5B571\u4E00\u5171\u51FA\u73B0\u4E865\u6B21</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u6B64\u9898\u672C\u8D28\u53EF\u6309\u7167\u6392\u5217\u7EC4\u5408\u6765\u5904\u7406</li></ul><p>\u5C061~n\uFF0C\u4E2A\u3001\u5341\u3001\u767E\u3001\u5343\xB7\xB7\xB7\u7B49\u5404\u4F4D\u7F6E\u51FA\u73B01\u7684\u6B21\u6570\u76F8\u52A0\uFF0C\u5373\u4E3A\u603B\u6B21\u6570<br> \u8BBE\u5F53\u524D\u4E3Ai\u7684\u503C\u4E3Acur\uFF0C\u5219\u9AD8\u4F4D\u7EC4\u6210\u7684\u503C\u4E3Ahigh\u3001\u4F4E\u4F4D\u7EC4\u6210\u7684\u503C\u4E3Alow\uFF0C\u5F53\u524D\u4E3A\u4E58\u7387\u4E3Adigit</p><ol><li>\u5F53cur=0\uFF0C\u51FA\u73B01\u7684\u6B21\u6570\u4E3A<code>high*digit</code>\uFF0C\u4EE5n=2304\u7684\u5341\u4F4D\u4E3A\u4F8B:<br><img src="`+c+'" alt="S4O43-1.png"></li><li>\u5F53cur=1\uFF0C\u51FA\u73B01\u7684\u6B21\u6570\u4E3A<code>high*digit + low + 1</code>\uFF0C\u4EE5n=2314\u7684\u5341\u4F4D\u4E3A\u4F8B:<br><img src="'+l+'" alt="S4O43-2.png"></li><li>\u5F53cur&gt;1\u65F6\uFF0C\u51FA\u73B01\u7684\u6B21\u6570\u4E3A<code>(high + 1) * digit</code>\uFF0C\u4EE5n=2324\u7684\u5341\u4F4D\u4E3A\u4F8B:<br><img src="'+u+'" alt="S4O43-3.png"></li></ol>',184),f={href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/solution/mian-shi-ti-43-1n-zheng-shu-zhong-1-chu-xian-de-2/",target:"_blank",rel:"noopener noreferrer"},h=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function-variable function">countDigitOne</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> high <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u503C</span>
    <span class="token keyword">let</span> cur <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> digit <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>high <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> cur <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5F53\u4E0D\u540C\u65F6\u4E3A0\u65F6\u7EE7\u7EED\u904D\u5386</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> res <span class="token operator">+=</span> high <span class="token operator">*</span> digit<span class="token punctuation">;</span> <span class="token comment">// \u6839\u636E\u4E0D\u540C\u7684\u60C5\u51B5\u8BA1\u7B97\u4E0D\u540C\u7684\u6392\u5217</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> res <span class="token operator">+=</span> high <span class="token operator">*</span> digit <span class="token operator">+</span> low <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> res <span class="token operator">+=</span> <span class="token punctuation">(</span>high <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> digit<span class="token punctuation">;</span>
      low <span class="token operator">+=</span> digit <span class="token operator">*</span> cur<span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0\u5404\u53D8\u91CF</span>
      cur <span class="token operator">=</span> high <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
      high <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>high <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      digit <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">countDigitOne</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-44-\u6570\u5B57\u5E8F\u5217\u4E2D\u67D0\u4E00\u4F4D\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-44-\u6570\u5B57\u5E8F\u5217\u4E2D\u67D0\u4E00\u4F4D\u7684\u6570\u5B57" aria-hidden="true">#</a> NO.44 \u6570\u5B57\u5E8F\u5217\u4E2D\u67D0\u4E00\u4F4D\u7684\u6570\u5B57</h2><p>\u9898\u76EE\uFF1A\u6570\u5B57\u4EE50123456789101112131415...\u7684\u683C\u5F0F\u5E8F\u5217\u5316\u5230\u4E00\u4E2A\u5B57\u7B26\u5E8F\u5217\u4E2D\u3002\u5728\u8FD9\u4E2A\u5E8F\u5217\u4E2D\uFF0C\u7B2C5\u4F4D(\u4ECE0\u5F00\u59CB\u8BA1\u6570)\u662F5\uFF0C\u7B2C13\u4F4D\u662F1\uFF0C\u7B2C19\u4E3A\u662F4\uFF0C\u7B49\u7B49\u3002\u8BF7\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u6C42\u4EFB\u610F\u7B2Cn\u4F4D\u5BF9\u5E94\u7684\u6570\u5B57</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5C06\u6570\u5B57\u5206\u6BB5\u6309\u7167\u4F4D\u6570\uFF0C<code>[1-9]</code>,<code>[10-99]</code>,<code>[100-999]</code>\xB7\xB7\xB7\uFF1B\u5BF9\u5E94\u4F4D\u6570digit\u5206\u522B\u4E3A1,2,3,\xB7\xB7\xB7(<code>digit++</code>)\uFF1B\u6BCF\u6BB5\u8D77\u59CB\u6570\u5B57start\u4E3A\uFF0C1,10,100,\xB7\xB7\xB7(<code>start*=10</code>)\uFF1B\u5BF9\u5E94\u6BCF\u6BB5\u533A\u95F4\u5B57\u7B26\u6570count\u4E3A<code>9*start*digit</code><ol><li>\u9996\u5148\u8F93\u5165n\u662F\u4ECE0\u5F00\u59CB\u7684\uFF0C\u6240\u4EE5\u76F8\u5F53\u4E8E\u5E8F\u5217\u5316\u5B57\u7B26\u4E32\u7684\u7D22\u5F15\uFF0C\u82E5n &gt; count \u5219\u5BF9n\u8FDB\u884C\u904D\u5386\uFF0C\u76F4\u5230\u4E0D\u6EE1\u8DB3\u8BE5\u6761\u4EF6\uFF0C\u6C42\u5F97n\u6240\u5728\u6570\u5B57\u533A\u95F4</li><li>\u5229\u7528\u8BE5\u533A\u95F4\u7684\u8D77\u59CB\u6570\u5B57\u53CA\u4F4D\u6570\uFF0C\u6C42\u5F97n\u6240\u5728\u6570\u5B57num\u3002\u6CE8\u610F\uFF1A\u6BCF\u6BB5\u533A\u95F4start\u7684\u4E2A\u4F4D\u6570\u5747\u4ECE0\u5F00\u59CB,\u56E0\u6B64n\u9700\u51CF1\uFF0C\u518D\u9664digit\u53D6\u6574(\u7B2C\u4E00\u6BB5\u533A\u95F4\u9664\u5916\uFF0C\u4F46\u7531\u4E8E\u542B0\uFF0C\u6240\u4EE5\u89C4\u5219\u540C\u6837\u6709\u6548)</li><li>\u53D6\u5F97n\u6240\u5728\u6570\u5B57num\u540E<code>((n - 1) $ digit)</code>\u5373\u4E3An\u6240\u5728\u5B57\u7B26\u7684\u7D22\u5F15</li></ol></li></ul><p><a href="./TODO">\u601D\u8DEF\u53C2\u8003\u8DEF\u98DE</a></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">findNthDigit</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> digit <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>n <span class="token operator">&gt;</span> count<span class="token punctuation">)</span><span class="token punctuation">{</span>
      n <span class="token operator">-=</span> count<span class="token punctuation">;</span>
      start <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">;</span>
      digit<span class="token operator">++</span><span class="token punctuation">;</span>
      count <span class="token operator">=</span> <span class="token number">9</span> <span class="token operator">*</span> start <span class="token operator">*</span> digit
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> start <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> digit<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> digit<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span>
    example<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">findNthDigit</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-45-\u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570" tabindex="-1"><a class="header-anchor" href="#no-45-\u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570" aria-hidden="true">#</a> NO.45 \u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E00\u4E2A\u6B63\u6574\u6570\u6570\u7EC4\uFF0C\u628A\u6570\u7EC4\u91CC\u6240\u6709\u6570\u5B57\u62FC\u63A5\u8D77\u6765\u6392\u6210\u4E00\u4E2A\u6570\uFF0C\u6253\u5370\u80FD\u62FC\u63A5\u51FA\u7684\u6240\u6709\u6570\u7EC4\u4E2D\u6700\u5C0F\u7684\u4E00\u4E2A\u3002\u4F8B\u5982\uFF0C\u8F93\u5165\u6570\u7EC4{3,32,321}\uFF0C\u5219\u6253\u5370\u51FA\u8FD9\u4E09\u4E2A\u6570\u5B57\u80FD\u6392\u6210\u7684\u6700\u5C0F\u6570\u5B57321323</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5B9A\u4E49\u6BD4\u8F83\u5927\u5C0F\u7684\u51FD\u6570Compare\uFF0C\u5728\u6B64\u51FD\u6570\u4E2D\u5C1D\u8BD5\u5C1D\u8BD5\u62FC\u63A5\u6570\u5B57a,b\uFF0C\u82E5ab &gt; ba \u5219\u4EFB\u52A1a &gt; b \u8FD4\u56DE\u5BF9\u5E94bool\u503C\u5373\u53EF\uFF1B\u4F7F\u7528\u6392\u5E8F\u7B97\u6CD5\u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\u5373\u53EF\u83B7\u5F97\u6700\u5C0F\u6570\u5B57\u7684\u6392\u5217</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">minNumber</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span>_compare<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_compare</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> left <span class="token operator">-</span> right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">minNumber</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-46-\u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#no-46-\u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32" aria-hidden="true">#</a> NO.46 \u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32</h2><p>\u9898\u76EE\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u6570\u5B57\uFF0C\u6211\u4EEC\u6309\u7167\u5982\u4E0B\u89C4\u5219\u628A\u5B83\u7FFB\u8BD1\u4E3A\u5B57\u7B26\u4E32\uFF1A0\u7FFB\u8BD1\u6210&#39;a&#39;\uFF0C1\u7FFB\u8BD1\u4E3A&#39;b&#39;\uFF0C....\uFF0C11\u7FFB\u8BD1\u4E3A&#39;l&#39;\uFF0C...\uFF0C25\u7FFB\u8BD1\u4E3A&#39;z&#39;\u3002\u4E00\u4E2A\u6570\u5B57\u53EF\u80FD\u6709\u591A\u4E2A\u7FFB\u8BD1\u3002\u4F8B\u5982\uFF0C12258\u67095\u4E2D\u4E0D\u540C\u7684\u7FFB\u8BD1\uFF0C\u5206\u522B\u662F&#39;bccfi&#39;,&#39;bwfi&#39;,&#39;bczi&#39;,&#39;mcfi&#39;,&#39;mzi&#39;\u3002\u8BF7\u7F16\u7A0B\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u8BA1\u7B97\u4E00\u4E2A\u6570\u5B57\u6709\u591A\u5C11\u79CD\u4E0D\u540C\u7684\u7FFB\u8BD1\u65B9\u6CD5\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u8BBEn\u4F4D\u6570\u7FFB\u8BD1\u65B9\u6CD5\u662Ff(n)\u79CD,\u5219\u7B2Cn\u4F4D\u5355\u72EC\u7FFB\u8BD1\u65F6\u6709f(n-1)\u4E2D\u7FFB\u8BD1\u65B9\u6CD5\uFF0C\u82E5\u7B2Cn\u4F4D\u3001\u7B2Cn-1\u4F4D\u53EF\u4EE5\u6574\u4F53\u7FFB\u8BD1\u65F6,\u7FFB\u8BD1\u5219\u53EF\u9009\u62E9\u6574\u4F53\u7FFB\u8BD1\u6216\u5206\u522B\u7FFB\u8BD1\uFF0C\u56E0\u6B64\u7FFB\u8BD1\u65B9\u6CD5\u6709<code>f(n-2) + f(n-1)</code>\u79CD\u3002\u53EF\u4F7F\u7528\u52A8\u6001\u89C4\u5212\uFF0C\u4ECE\u53F3\u5411\u5DE6\u904D\u5386\u5404\u4F4D\u4E0A\u7684\u6570\u5B57\uFF0C\u5176\u4E2Dn\u4F4D\u4E0A\u7684\u6570\u5B57\u4E3A0\u65F6\u65E0\u6CD5\u8FDB\u884C\u6574\u4F53\u7FFB\u8BD1</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">translateNum</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316y\u4E3A\u4E2A\u4F4D\u6570, dp\u521D\u59CB\u65E0\u6570\u5B57\u548C1\u4F4D\u6570\u5B57\u7684\u7FFB\u8BD1\u65B9\u6CD5\u5747\u4E3A1</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>num <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      num  <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u53F3\u5411\u5DE6\u904D\u5386</span>
      x <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u9996\u6B21\u904D\u5386x\u4E3A\u5341\u4F4D\u6570</span>
      <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span> <span class="token comment">// \u8BA1\u7B97xy\u7EC4\u5408\u662F\u5426\u5728\u6574\u7406\u53EF\u7FFB\u8BD1\u7684\u8303\u56F4\u5185\uFF0C\u5E76\u8BA1\u7B97\u6700\u8FD1\u7684dp\u503C</span>
      <span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">(</span>temp <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">?</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0dp\u503C</span>
      dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">;</span>
      y <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0\u4E0B\u4E00\u8F6E\u9012\u5F52\u7684y\u503C</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">translateNum</span><span class="token punctuation">(</span><span class="token number">12258</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-47-\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C" tabindex="-1"><a class="header-anchor" href="#no-47-\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C" aria-hidden="true">#</a> NO.47 \u793C\u7269\u7684\u6700\u5927\u4EF7\u503C</h2><p>\u9898\u76EE:\u5728\u4E00\u4E2Am*n\u7684\u68CB\u76D8\u7684\u6BCF\u4E00\u683C\u90FD\u653E\u6709\u4E00\u4E2A\u793C\u7269\uFF0C\u6BCF\u4E2A\u793C\u7269\u90FD\u6709\u4E00\u5B9A\u7684\u4EF7\u503C(\u4EF7\u503C\u5927\u4E8E0).\u4F60\u53EF\u4EE5\u4ECE\u68CB\u76D8\u7684\u5DE6\u4E0A\u89D2\u5F00\u59CB\u62FF\u683C\u5B50\u91CC\u7684\u793C\u7269\uFF0C\u5E76\u6BCF\u6B21\u5411\u53F3\u6216\u8005\u5411\u4E0B\u79FB\u52A8\u4E00\u683C\uFF0C\u76F4\u5230\u8FBE\u5230\u68CB\u76D8\u7684\u53F3\u4E0B\u89D2\u3002\u7ED9\u5B9A\u4E00\u4E2A\u68CB\u76D8\u53CA\u5176\u4E0A\u9762\u7684\u793C\u7269\uFF0C\u8BF7\u8BA1\u7B97\u4F60\u6700\u591A\u80FD\u62FF\u5230\u591A\u5C11\u4EF7\u503C\u7684\u793C\u7269\uFF1F</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u533A\u522B\u4E8E\u56DE\u6EAF\u6CD5\uFF0C\u672C\u9898\u4F7F\u7528\u52A8\u6001\u89C4\u5212\uFF0C\u8003\u8651\u5230\u7B2C<code>dp[i][j]</code>\u5904\u7684\u793C\u7269\u4EF7\u503C\u4EC5\u4E0E\u683C\u5B50<code>grid[i][j]</code>\u3001\u4E0A\u65B9<code>dp[i-1][j]</code>\u548C\u5DE6\u65B9<code>dp[i][j-1]</code>\u7684\u4EF7\u503C\u6709\u5173\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5BF9\u68CB\u76D8grid\u8FDB\u884C\u904D\u5386\uFF0C\u4E3A\u8282\u7701\u5185\u5B58\u53EF\u4EE5\u76F4\u63A5\u5728grid\u4E0A\u4FEE\u6539\u4EF7\u503C\uFF0C\u5C06grid\u8F6C\u6362\u4E3Adp\uFF0C\u6700\u540Edp\u77E9\u9635\u53F3\u4E0B\u89D2\u5373\u4E3A\u80FD\u6700\u591A\u62FF\u5230\u7684\u793C\u7269\u4EF7\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">maxValue</span><span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u4F4D\u7F6E\u4EF7\u503C\u5C31\u7B49\u4E8E\u5176\u672C\u8EAB</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4F4D\u4E8E\u7B2C\u4E00\u884C\uFF0C\u81F3\u4E0E\u5DE6\u8FB9\u7684\u503C\u6709\u5173</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> grid<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4F4D\u4E8E\u7B2C\u4E00\u5217</span>
        <span class="token keyword">else</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> grid<span class="token punctuation">[</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// \u8FD4\u56DE\u53F3\u4E0B\u89D2\u7684\u503C</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">maxValue</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-48-\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#no-48-\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B57\u7B26\u4E32" aria-hidden="true">#</a> NO.48 \u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B57\u7B26\u4E32</h2><p>\u9898\u76EE\uFF1A\u8BF7\u4ECE\u5B57\u7B26\u4E32\u4E2D\u627E\u51FA\u4E00\u4E2A\u6700\u957F\u7684\u4E0D\u5305\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32\uFF0C\u8BA1\u7B97\u8BE5\u6700\u957F\u5B50\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u3002\u5047\u8BBE\u5B57\u7B26\u4E32\u4E2D\u53EA\u5305\u542B&#39;a&#39;-&#39;z&#39;\u7684\u5B57\u7B26\u3002\u4F8B\u5982\uFF0C\u5728\u5B57\u7B26\u4E32&quot;arabcacfr&quot;\u4E2D\uFF0C\u6700\u957F\u7684\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32\u662F&quot;acfr&quot;\uFF0C\u957F\u5EA6\u4E3A4.</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u6ED1\u52A8\u7A97\u53E3 <ol><li>\u53CC\u6307\u9488left\u548Cright\u6ED1\u52A8\u7A97\u53E3\uFF0C\u5229\u7528hash\u8868\u8F85\u52A9\u5B58\u50A8\u5728\u7A97\u53E3\u5185\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570</li><li>right\u6307\u9488\u904D\u5386\u5B57\u7B26\u4E32\u6269\u5927\u7A97\u53E3\uFF0C\u6BCF\u6B21\u904D\u5386\u65F6\u66F4\u65B0hash\u8868</li><li>\u5224\u65AD\u65B0\u52A0\u5165\u7684\u5B57\u7B26\u6B21\u6570\u5927\u4E8E1\u5219\uFF0C\u5728left\u4FA7\u7F29\u5C0F\u7A97\u53E3\uFF0C\u76F4\u5230\u7A97\u53E3\u5185\u4E0D\u5305\u542B\u91CD\u590D\u5B57\u7B26</li><li>\u6BD4\u8F83\u533A\u95F4\u548Cres\u7684\u5927\u5C0F\uFF0C\u5E76\u66F4\u65B0res\u503C\uFF0C\u904D\u5386\u5B8C\u6210\u540E\u5373\u53EF\u5F97\u5230\u6700\u5927\u7684\u957F\u5EA6</li></ol></li><li>\u89E3\u9898\u601D\u8DEF\u4E8C\uFF1A\u52A8\u6001\u89C4\u5212\uFF0C <ol><li><code>dp[j]</code>\u4EE3\u8868\u4EE5<code>s[j]</code>\u7ED3\u5C3E\u7684\u6700\u957F\u4E0D\u91CD\u590D\u5B50\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\uFF0C\u5728j\u5DE6\u4FA7\u4E0E\u53F3\u8FB9\u754C<code>s[j]</code>\u6700\u8FD1\u7684\u76F8\u540C\u5B57\u7B26\u4E32\u8BB0\u4E3A<code>s[i]</code></li><li>\u5F53<code>dp[j-1] &lt; j - i</code>\u65F6\uFF0C\u8BF4\u660E<code>s[i]</code>\u5728\u533A\u95F4\u5916\uFF0C<code>dp[j] = dp[j - 1] + 1</code></li><li>\u5F53<code>dp[j - 1] &gt;= j -i</code>\u65F6\uFF0C<code>s[i]</code>\u5728\u533A\u95F4\u5185<code>dp[j] = j - i</code></li><li>\u904D\u5386\u6574\u4E2A\u5B57\u7B26\u4E32\u5F97\u5230dp\u6570\u7EC4\u4E2D\u6700\u5927\u6570\u503C\u5373\u4E3A\u6700\u5927\u957F\u5EA6(\u6700\u5927\u503C\u53EF\u8FB9\u904D\u5386\u8FB9\u5224\u65AD, \u56E0\u6B64\u65E0\u9700\u8BB0\u5F55dp\u6570\u7EC4)</li></ol></li></ul><div class="custom-container tip"><p class="custom-container-title">\u52A8\u6001\u89C4\u5212\u4E5F\u53EF\u4F7F\u7528\u53CC\u6307\u9488</p><ol><li>\u5229\u7528j\u6307\u9488\u904D\u5386s\uFF0C\u5229\u7528hash\u5B58\u50A8<code>s[j]</code>\u6700\u540E\u51FA\u73B0\u7684\u7D22\u5F15\u4F4D\u7F6E</li><li>\u6839\u636E\u4E0A\u4E00\u8F6E<code>i</code>\u548C<code>hash[s[j]]</code>\uFF0C\u66F4\u65B0\u5DE6\u8FB9\u754C<code>i = max(hash[s[j]], i)</code>\uFF0C\u4FDD\u8BC1\u533A\u95F4\u5185\u65E0\u91CD\u590D\u5B57\u7B26</li><li>\u66F4\u65B0<code>res = max(res, j - i)</code></li></ol></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6ED1\u52A8\u7A97\u53E3\u5B9E\u73B0</span>
  <span class="token keyword">static</span> <span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> window <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u6ED1\u52A8\u7A97\u53E3hash</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u5DE6\u53F3\u6307\u9488\u548C\u957F\u5EA6\u8BB0\u5F55</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>right <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5411\u53F3\u6269\u5927\u7A97\u53E3</span>
      <span class="token keyword">let</span> char <span class="token operator">=</span> s<span class="token punctuation">[</span>right<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token punctuation">)</span> window<span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u5411hash\u4E2D\u6DFB\u52A0\u8BE5\u5B57\u7B26\u8BB0\u5F55</span>
      <span class="token keyword">else</span> window<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>window<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5728hash\u4E2D\u53D1\u73B0\u91CD\u590D\u5B57\u7B26,left\u6307\u9488\u7F29\u5C0F\u7A97\u53E3</span>
        <span class="token keyword">let</span> tmp <span class="token operator">=</span> s<span class="token punctuation">[</span>left<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u9000\u51FA\u7A97\u53E3\u7684\u5B57\u7B26</span>
        window<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u8BE5\u5B57\u7B26\u8BB0\u5F55\u51CF1\uFF0C\u901A\u5E38\u6B64\u65F6tmp\u4E0Echar\u662F\u76F8\u7B49\u7684</span>
      <span class="token punctuation">}</span>
      res <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> right <span class="token operator">-</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u8F6E\u904D\u5386\u8BB0\u5F55\u6700\u5927\u7B26\u5408\u8981\u6C42\u7684\u957F\u5EA6</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u52A8\u6001\u89C4\u5212\u601D\u8DEF\u5B9E\u73B0</span>
  <span class="token keyword">static</span> <span class="token function">lengthOfLongestSubstring2</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u56E0\u4E3Aj\u4ECE0\u5F00\u59CB\u904D\u5386i\u5FC5\u987B\u521D\u59CB\u5316\u4E3A-1\uFF0C\u4FDD\u8BC1j-i\u4E3A\u533A\u95F4\u957F\u5EA6(\u5DE6\u5F00\u53F3\u95ED\u533A\u95F4)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// \u4F18\u5148\u5224\u65ADhash\u4E2D\u662F\u5426\u53F3\u91CD\u590D\u5B57\u7B26(\u6B64\u5904\u5FC5\u987B\u7528undefined\u6BD4\u8F83\uFF0C\u56E0\u4E3A\u7D22\u5F150\u4F4D\u4E3Afalse)\uFF0C\u82E5\u53F3\u66F4\u65B0i\u503C</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>hash<span class="token punctuation">[</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>hash<span class="token punctuation">[</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      hash<span class="token punctuation">[</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0hash\u5B57\u7B26\u5BF9\u5E94\u7D22\u5F15\u4F4D</span>
      res <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> j <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0\u6700\u65B0dp</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token string">&#39;pwwkew&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-49-\u4E11\u6570" tabindex="-1"><a class="header-anchor" href="#no-49-\u4E11\u6570" aria-hidden="true">#</a> NO.49 \u4E11\u6570</h2><p>\u9898\u76EE\uFF1A\u6211\u4EEC\u628A\u53EA\u5305\u542B\u56E0\u5B502,3,5\u7684\u6570\u6210\u4E3A\u4E11\u6570\uFF0C\u6C42\u4ECE\u5C0F\u5230\u5927\u7684\u987A\u5E8F\u7684\u7B2C1500\u4E2A\u4E11\u6570\u3002\u4F8B\u5982\uFF0C6,8\u90FD\u662F\u4E11\u6570\uFF0C\u4F4614\u4E0D\u662F\uFF0C\u56E0\u4E3A\u5B83\u5305\u542B\u56E0\u5B507.\u4E60\u60EF\u4E0A\u6211\u4EEC\u628A1\u5F53\u505A\u7B2C\u4E00\u4E2A\u4E11\u6570\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u52A8\u6001\u89C4\u5212\uFF0C\u6839\u636E\u4E11\u6570\u7684\u6027\u8D28\u6709&quot;\u4E11\u6570 = \u67D0\u8F83\u5C0F\u7684\u4E11\u6570 \xD7 \u67D0\u56E0\u5B50(2,3,5)&quot;\uFF0C\u8BBE\u67D0\u8F83\u5C0F\u4E11\u6570\u5728dp\u4E2D\u7684\u7D22\u5F15\u4E3Aa, b, c\u5206\u522B\u5BF9\u5E94\u56E0\u5B502, 3, 5\u3002\u53EF\u5F97\u957F\u5EA6\u4E3An \u7684\u4E11\u6570\u5E8F\u5217dp\u4E2D<code>dp[n+1] = min(dp[a]*2, dp[b]*3, dp[c]*5)</code>\uFF0C\u4E14a, b, c\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u6761\u4EF6\uFF1A</p><ol><li><code>dp[a]*2 &gt; dp[n] &gt;= dp[a-1]*2</code>,\u7B2C\u4E00\u4E2A\u4E582\u540E\u5927\u4E8E<code>dp[n]</code>\u7684\u4E11\u6570</li><li><code>dp[b]*3 &gt; dp[n] &gt;= dp[b-1]*3</code>,\u7B2C\u4E00\u4E2A\u4E583\u540E\u5927\u4E8E<code>dp[n]</code>\u7684\u4E11\u6570</li><li><code>dp[c]*5 &gt; dp[n] &gt;= dp[c-1]*5</code>,\u7B2C\u4E00\u4E2A\u4E585\u540E\u5927\u4E8E<code>dp[n]</code>\u7684\u4E11\u6570</li></ol></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u52A8\u6001\u89C4\u5212\u5217\u8868<code>dp[i]</code>\u8868\u793A\u7B2C<code>i+1</code>\u4E2A\u4E11\u6570(\u4ECE0\u5F00\u59CB)</li><li>\u53D6\u6EE1\u8DB3\u6761\u4EF6\u7684a, b, c\u7D22\u5F15\u503C\u66F4\u65B0<code>dp[i]</code>\u503C</li><li>\u5206\u522B\u5224\u65ADa, b, c\u7EF4\u6301\u5176\u4ECD\u6EE1\u8DB3\u65B0<code>dp[i]</code>\u7684\u6761\u4EF6\uFF0C(\u5177\u4F53\u6765\u8BF4\u66F4\u65B0\u540E\u7684<code>dp[i]</code>\u5FC5\u5B9A\u7B49\u4E8E\u5176\u4E2D\u4E00\u4E2A\u7684\u5BF9\u5E94\u4E11\u6570\xD7\u56E0\u5B50\uFF0C\u627E\u51FA\u5176\u7D22\u5F15\u5E76\u52A01)</li><li>\u5FAA\u73AFn\u6B21\u540E\u8F93\u51FA\u672B\u4F4D\u6570\u5373\u53EF</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">nthUglyNumber</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6839\u636En\uFF0C\u5148\u5206\u914Ddp\u957F\u5EA6</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// a,b,c\u4E3A\u7B2C\u4E00\u4E2A\u4E11\u6570\uFF0C\u7D22\u5F15\u4E3A0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4ECE1\u5F00\u59CB\u904D\u5386\u5230n-1\uFF0C\u904D\u5386n-1\u6B21</span>
      <span class="token comment">// \u53EA\u9700\u8BA1\u7B97\u6761\u4EF6\u5DE6\u8FB9\u7684\u503C\uFF0C\u540E\u7EED\u7D22\u5F15\u66F4\u65B0\u7EF4\u6301\u6761\u4EF6\u53F3\u53D8\u7684\u503C</span>
      <span class="token keyword">let</span> n2 <span class="token operator">=</span> dp<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> n3 <span class="token operator">=</span> dp<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> n5 <span class="token operator">=</span> dp<span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">;</span>
      dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> n3<span class="token punctuation">,</span> n5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0dp[i]</span>
      <span class="token comment">// \u7EF4\u6301\u53F3\u8FB9\u754C\u6761\u4EF6</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> n2<span class="token punctuation">)</span> a<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> n3<span class="token punctuation">)</span> b<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> n5<span class="token punctuation">)</span> c<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>dp<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">nthUglyNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-50-\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#no-50-\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26" aria-hidden="true">#</a> NO.50 \u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26</h2><p>\u5728\u5B57\u7B26\u4E32 s \u4E2D\u627E\u51FA\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u3002\u5982\u679C\u6CA1\u6709\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5355\u7A7A\u683C\u3002 s \u53EA\u5305\u542B\u5C0F\u5199\u5B57\u6BCD\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u904D\u5386\u4E00\u904Ds\u5B57\u7B26\u4E32\uFF0C\u4F7F\u7528hash\u8868\u7EDF\u8BA1\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u518D\u904D\u5386\u4E00\u904Ds\u5B57\u7B26\u4E32\uFF0C\u67E5\u627E\u5BF9\u5E94\u5B57\u7B26\u51FA\u73B0\u6B21\u6570\u4E3A1\u7684\u5B57\u7B26\uFF0C\u8FD4\u56DE\u5373\u53EF</li><li>\u4F18\u5316\uFF1A\u7B2C\u4E8C\u904D\u904D\u5386\u65F6\uFF0C\u53EF\u5229\u7528\u987A\u5E8Fhash\u8868\uFF0C\u76F4\u63A5\u904D\u5386hash\u8868\uFF0C\u83B7\u53D6\u5230\u7B2C\u4E00\u4E2A\u51FA\u73B0\u6B21\u6570\u4E3A1\u7684\u5B57\u7B26\u8FD4\u56DE\u5373\u53EF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">firstUniqChar</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// js\u539F\u751F\u5BF9\u8C61\u4E0D\u80FD\u4FDD\u8BC1key\u6309\u5B9A\u4E49\u987A\u5E8F\u8F93\u51FA\uFF0C\u6240\u4EE5\u4F7F\u7528\u5185\u7F6EMap</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> s<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>char<span class="token punctuation">,</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>char<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> cache<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&#39; &#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">firstUniqChar</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-51-\u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9" tabindex="-1"><a class="header-anchor" href="#no-51-\u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9" aria-hidden="true">#</a> NO.51 \u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9</h2><p>\u9898\u76EE\uFF1A\u5728\u6570\u7EC4\u4E2D\u6709\u4E24\u4E2A\u6570\u5B57\uFF0C\u5982\u679C\u524D\u9762\u4E00\u4E2A\u6570\u5B57\u5927\u4E8E\u540E\u9762\u7684\u6570\u5B57\uFF0C\u5219\u4E24\u4E2A\u6570\u5B57\u7EC4\u6210\u4E00\u4E2A\u9006\u5E8F\u5BF9\u3002\u8F93\u5165\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6C42\u51FA\u8FD9\u4E2A\u6570\u7EC4\u4E2D\u7684\u9006\u5E8F\u5BF9\u7684\u603B\u6570\u3002\u4F8B\u5982\u5728\u6570\u7EC4{7,5,6,4}\u4E2D\uFF0C\u4E00\u5171\u5B58\u57285\u4E2A\u9006\u5E8F\u5BF9\uFF0C\u5206\u522B\u662F(7,6),(7,5),(7,4),(6,4),(5,4).</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5229\u7528\u5F52\u5E76\u6392\u5E8F\u6CD5\uFF0C\u8FDB\u884C\u5206\u800C\u6CBB\u4E4B\uFF0C\u5728\u5F52\u5E76\u9636\u6BB5\u5F53\u53F3\u5E8F\u5217\u5143\u7D20r\u6BD4\u5DE6\u5E8F\u5217\u5143\u7D20l\u5C0F\u65F6\uFF0C\u5219\u8BF4\u660El\u5143\u7D20\u53CA\u5176\u540E\u7684\u6240\u6709\u5DE6\u5E8F\u5217\u5143\u7D20\u90FD\u4E0Er\u5143\u7D20\u6784\u6210\u9006\u5E8F\u5BF9\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u5728\u4E0D\u6EE1\u8DB3<code>left[l] &lt;= right[r]</code>\u65F6\u7EDF\u8BA1left\u5269\u4F59\u5143\u7D20\u6570<code>left.length - l</code>\u5373\u53EF\uFF0C\u5BF9\u4E8E\u53F3\u5E8F\u5217\u5148\u904D\u5386\u5B8C\u6210\u7684\u60C5\u51B5\u5DF2\u5305\u542B\u5728\u5185\uFF0C\u65E0\u9700\u7279\u6B8A\u5904\u7406</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">reversePairs</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> length <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">arr</span><span class="token operator">:</span>nums<span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> lRes <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">reversePairs</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> rRes <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">reversePairs</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> merge <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">_mergeArray</span><span class="token punctuation">(</span>lRes<span class="token punctuation">.</span>arr<span class="token punctuation">,</span> rRes<span class="token punctuation">.</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">arr</span><span class="token operator">:</span>merge<span class="token punctuation">.</span>arr<span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span>lRes<span class="token punctuation">.</span>count<span class="token operator">+</span>rRes<span class="token punctuation">.</span>count<span class="token operator">+</span>merge<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">_mergeArray</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> r <span class="token operator">&lt;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> right<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>l<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment">// \u6BCF\u6B21\u6DFB\u52A0\u53F3\u5B50\u5E8F\u5217\u5143\u7D20\u65F6\uFF0C\u7EDF\u8BA1\u9006\u5E8F\u6570</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">[</span>r<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        count <span class="token operator">+=</span> left<span class="token punctuation">.</span>length <span class="token operator">-</span> l<span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u4E2A\u5143\u7D20\u4E0E\u5DE6\u5E8F\u5217\u5269\u4F59\u7684\u6240\u6709\u5143\u7D20\u6784\u6210\u9006\u5E8F\u5BF9</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>left<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u56E0\u5728\u6DFB\u52A0\u53F3\u5B50\u5E8F\u5217\u65F6\u7EDF\u8BA1\u8FC7\u9006\u5E8F\u5BF9\uFF0C\u6B64\u5904\u4E0D\u518D\u7EDF\u8BA1</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>right<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>arr<span class="token punctuation">,</span> count<span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">reversePairs</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-52-\u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#no-52-\u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9" aria-hidden="true">#</a> NO.52 \u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u4E24\u4E2A\u94FE\u8868\uFF0C\u627E\u51FA\u5B83\u4EEC\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u8BBE\u516C\u5171\u8282\u70B9\u6570\u91CF\u4E3Ac\uFF0C\u94FE\u8868headA\u7684\u8282\u70B9\u6570\u91CF\u4E3Aa, headB\u7684\u8282\u70B9\u6570\u91CF\u4E3Ab\uFF0C\u5219\u6307\u9488A\u9700\u8981\u8D70<code>a-c</code>\u6B65,B\u6307\u9488\u9700\u8981\u8D70<code>b - c</code>\u6B65\uFF0C\u4F7F\u7528A\u6307\u9488\u904D\u5386headA\u7136\u540E\u518D\u904D\u5386headB\u5230\u516C\u5171\u8282\u70B9\u9700\u8981\u7684\u6B65\u6570\u4E3A<code>a + b - c</code>\uFF0C\u4F7F\u7528B\u6307\u9488\u904D\u5386headB\u7136\u540E\u904D\u5386headA\u5230\u516C\u5171\u8282\u70B9\u9700\u8981\u7684\u6B65\u6570\u4E3A<code>b + a - c</code>\uFF0C\u4E24\u6307\u9488\u9700\u8981\u6B65\u6570\u76F8\u540C\u4E14\u6B64\u65F6\u6307\u5411\u540C\u4E00\u8282\u70B9\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5408\u5E76\u904D\u5386\uFF0C\u6700\u7EC8A,B\u6307\u5411\u4E3A\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9,\u82E5\u4E3Anull\u5219\u6CA1\u6709\u516C\u5171\u8282\u70B9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">LinkNote</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">=</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> next<span class="token operator">=</span><span class="token keyword">undefined</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">getIntersectionNode</span><span class="token punctuation">(</span><span class="token parameter">headA<span class="token punctuation">,</span> headB</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> pa <span class="token operator">=</span> headA<span class="token punctuation">,</span> pb <span class="token operator">=</span> headB<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>pa <span class="token operator">!==</span> pb<span class="token punctuation">)</span><span class="token punctuation">{</span>
      pa <span class="token operator">=</span> pa <span class="token operator">?</span> pa<span class="token punctuation">.</span>next <span class="token operator">:</span> headB<span class="token punctuation">;</span>
      pb <span class="token operator">=</span> pb <span class="token operator">?</span> pb<span class="token punctuation">.</span>next <span class="token operator">:</span> headA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pa<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> headA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNote</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> headB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNote</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> common <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNote</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> pa <span class="token operator">=</span> headA<span class="token punctuation">,</span> pb <span class="token operator">=</span> headB<span class="token punctuation">,</span> pc <span class="token operator">=</span> common<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> example<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span> i <span class="token operator">&lt;</span> example<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> example<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pa<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNote</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pa <span class="token operator">=</span> pa<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> example<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pb<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNote</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pb <span class="token operator">=</span> pb<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> example<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pc<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNote</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pc <span class="token operator">=</span> pc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    pa<span class="token punctuation">.</span>next <span class="token operator">=</span> common<span class="token punctuation">,</span> pb<span class="token punctuation">.</span>next <span class="token operator">=</span> common<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">getIntersectionNode</span><span class="token punctuation">(</span>headA<span class="token punctuation">,</span> headB<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-53-\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u67E5\u627E\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-53-\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u67E5\u627E\u6570\u5B57" aria-hidden="true">#</a> NO.53 \u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u67E5\u627E\u6570\u5B57</h2><h3 id="\u9898\u76EE\u4E00-\u6570\u5B57\u5728\u6392\u5E8F\u6570\u5B57\u4E2D\u51FA\u73B0\u7684\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u6570\u5B57\u5728\u6392\u5E8F\u6570\u5B57\u4E2D\u51FA\u73B0\u7684\u6B21\u6570" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u6570\u5B57\u5728\u6392\u5E8F\u6570\u5B57\u4E2D\u51FA\u73B0\u7684\u6B21\u6570</h3><p>\u7EDF\u8BA1\u4E00\u4E2A\u6570\u5B57\u5728\u6392\u5E8F\u6570\u7EC4\u4E2D\u51FA\u73B0\u7684\u6B21\u6570\u3002\u4F8B\u5982\uFF0C\u8F93\u5165\u6392\u5E8F\u6570\u7EC4{1,2,3,3,3,3,4,5}\u548C\u6570\u5B573\uFF0C\u7531\u4E8E3\u5728\u8FD9\u4E2A\u6570\u7EC4\u4E2D\u51FA\u73B0\u4E864\u6B21\uFF0C\u56E0\u6B64\u8F93\u51FA4</p><ul><li>\u89E3\u9898\u601D\u8DEF:\u5229\u7528\u4E8C\u5206\u67E5\u627E\u6CD5\uFF0Ctarget\u5728nums\u4E2D\u7684\u5DE6\u53F3\u8FB9\u754C,\u8BBE\u7F6E\u904D\u5386\u6761\u4EF6\u4E3A<code>i&lt;=j</code>\u8FDB\u884C\u8FC7\u5EA6\u904D\u5386\uFF0C\u904D\u5386\u7ED3\u675F\u65F6<code>i&gt;j</code>\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4ECEi,j\u4E2D\u53D6\u5F97\u8FB9\u754C\u3002\u5BF9\u6570\u7EC4\u8FDB\u884C\u4E24\u8F6E\u4E8C\u5206\u67E5\u627E\uFF0C\u4F9D\u6B21\u53D6\u5F97\u5DE6\u53F3\u8FB9\u754Cleft,right\uFF0C\u8FD4\u56DE\u957F\u5EA6\u4E3A<code>right - left - 1</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4E8C\u5206\u67E5\u627E\u53F3\u8FB9\u754C</span>
      <span class="token keyword">let</span> m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span> i <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> j <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u904D\u5386\u7ED3\u675F\u540Ej\u6307\u9488\u5FC5\u5B9A\u6307\u5411target\u5982\u679C\u5B58\u5728\u7684\u8BDD\uFF0C\u800Ci\u5219\u521A\u597D\u6307\u5411\u53F3\u8FB9\u754C</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!==</span> target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5224\u65AD\u533A\u95F4\u5185\u662F\u5426\u5B58\u5728target\uFF0C\u4E0D\u5B58\u5728\u5219\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token comment">// \u91CD\u7F6Ei\u7684\u503C\u5E76\u4E8C\u5206\u67E5\u627E\u5DE6\u8FB9\u754C</span>
    i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// </span>
      <span class="token keyword">let</span> m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> i <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> j <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> j<span class="token punctuation">;</span>
    <span class="token keyword">return</span> right <span class="token operator">-</span> left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u5DE6\u53F3\u8FB9\u754C\u533A\u95F4\u5185\u7684\u957F\u5EA6</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>example<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-0-n-1-\u4E2D\u7F3A\u5931\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-0-n-1-\u4E2D\u7F3A\u5931\u7684\u6570\u5B57" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A[0,n-1]\u4E2D\u7F3A\u5931\u7684\u6570\u5B57</h3><p>\u4E00\u4E2A\u957F\u5EA6\u4E3An-1\u7684\u9012\u589E\u6392\u5E8F\u6570\u7EC4\u4E2D\u7684\u6240\u6709\u6570\u5B57\u90FD\u662F\u552F\u4E00\u7684\uFF0C\u5E76\u4E14\u6BCF\u4E00\u4E2A\u6570\u5B57\u90FD\u5728\u8303\u56F4[0,n-1]\u4E4B\u5185\u3002\u5728\u8303\u56F4[0,n-1]\u4E4B\u5185\u7684n\u4E2A\u6570\u5B57\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u6570\u5B57\u4E0D\u5728\u8BE5\u6570\u7EC4\u4E2D\uFF0C\u8BF7\u627E\u51FA\u8BE5\u6570\u5B57\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u9898\u76EE\u524D\u63D0\u4E3A\u6240\u6709\u6570\u90FD\u4E3A\u6574\u6570\u3002\u53EF\u5C06\u6570\u7EC4\u5206\u4E3A\u5DE6\u53F3\u4E24\u7EC4\uFF0C\u5DE6\u8FB9\u7684\u6570\u7EC4\u5143\u7D20\u90FD\u4E0E\u5176\u7D22\u5F15\u76F8\u7B49\uFF0C\u53F3\u8FB9\u6570\u7EC4\u5143\u7D20\u90FD\u4E0D\u4E0E\u5176\u7D22\u5F15\u76F8\u7B49\uFF0C\u7F3A\u5931\u7684\u6570\u5B57\u5373\u4E3A\u53F3\u8FB9\u6570\u7EC4\u7684\u9996\u4E2A\u5143\u7D20\u3002</li><li>\u6B65\u9AA4\uFF1A <ul><li>\u4F7F\u7528\u4E8C\u5206\u6CD5\u786E\u5B9A\u8FB9\u754C\u5F53<code>l &lt;= r</code>\u65F6\u5FAA\u73AF,\u8BA1\u7B97\u4E2D\u70B9<code>m = (r - l) / 2 + l</code>\u7D22\u5F15</li><li>\u82E5<code>nums[m] = m</code>\uFF0C\u5219\u9996\u4F4D\u5143\u7D20\u4E00\u5B9A\u5728\u95ED\u533A\u95F4<code>[m+1,r]</code>\u4E2D\uFF0C\u56E0\u6B64\u6267\u884C<code>l = m+1</code></li><li>\u82E5<code>nums[m] != m</code>\uFF0C\u5219\u9996\u4F4D\u5143\u7D20\u4E00\u5B9A\u5728\u95ED\u533A\u95F4<code>[l, m - 1]</code>\u4E2D\uFF0C\u56E0\u6B64\u6267\u884C<code>r = m-1</code></li><li>\u5FAA\u73AF\u7ED3\u675F\u65F6l\u6307\u5411\u53F3\u6570\u7EC4\u9996\u4F4D\u5143\u7D20\uFF0Cr\u6307\u5411\u5DE6\u6570\u7EC4\u672B\u5C3E\u5143\u7D20</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">missingNumber</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> len <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> mid<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
      mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">)</span> <span class="token operator">+</span> l<span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> mid<span class="token punctuation">)</span> l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">missingNumber</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-54-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7B2Ck\u5927\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#no-54-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7B2Ck\u5927\u8282\u70B9" aria-hidden="true">#</a> NO.54 \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7B2CK\u5927\u8282\u70B9</h2><p>\u9898\u76EE\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u8BF7\u627E\u51FA\u5176\u4E2D\u7B2Ck\u5927\u7684\u8282\u70B9\u3002\u4F8B\u5982\uFF0C\u5728\u4E0B\u56FE\u4E2D\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u91CC\uFF0C\u6309\u8282\u70B9\u6570\u503C\u5927\u5C0F\u987A\u5E8F\uFF0C\u7B2C3\u5927\u8282\u70B9\u7684\u503C\u662F4<br><img src="`+i+`" alt="n54.png"></p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u662F\u6709\u5E8F\u6570\u7EC4\uFF0C\u82E5\u5B9A\u4E49&#39;\u53F3-&gt;\u6839-&gt;\u5DE6&#39;\u5219\u662F\u4ECE\u5927\u5230\u5C0F\u7684\u5E8F\u5217\uFF0C\u56E0\u6B64\u5229\u7528\u6B64\u7279\u6027\u53EF\u627E\u5230\u7B2Ck\u5927\u7684\u8282\u70B9\u3002\u5148\u904D\u5386\u53F3\u5B50\u6811\uFF0C\u5728\u6BCF\u6B21\u8BFB\u53D6\u8282\u70B9\u503C\u7684\u65F6\u5019\u8FDB\u884C\u8BA1\u6570count\uFF0C\u8BA1\u6570\u524D\u5224\u65AD\u5F53\u524Dcount\u662F\u5426\u4E3A0\uFF0C\u82E5\u4E3A0\u5219\u8BF4\u660E\u4E0A\u4E00\u8F6E\u5DF2\u7ECF\u627E\u5230\u8BE5\u8282\u70B9\u76F4\u63A5\u8FD4\u56DE\u4E0D\u518D\u8FDB\u884C\u904D\u5386\uFF0C\u5426\u5219\u5C06count\u51CF1\u518D\u5224\u65AD\u662F\u5426\u4E3A0\uFF0C\u82E5\u4E3A0\u5219\u7ED9\u95ED\u5305\u4E2D\u7684\u7ED3\u679C\u53D8\u91CFres\u8D4B\u503C\uFF0C\u7136\u540E\u904D\u5386\u5DE6\u5B50\u6811.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">kthLargest</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> k<span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u8BFB\u53D6\u8282\u70B9\u503C\u7684\u6B21\u6570</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2Ck\u5927\u7684\u8282\u70B9</span>
    <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u5229\u7528\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u662F\u5355\u8C03\u7684\u7279\u6027\uFF0C\u8FDB\u884C\u4E2D\u5E8F\u904D\u5386</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u9047\u5230\u53F6\u5B50\u8282\u70B9\u5219\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5148\u904D\u5386\u53F3\u5B50\u6811\u8868\u793A\u4ECE\u5927\u5230\u5C0F\u904D\u5386</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// \u5F53\u904D\u5386\u8282\u70B9\u503C\u65F6\u5BF9\u5148\u5BF9\u8BA1\u6570\u8FDB\u884C\u5224\u65AD\uFF0C\u82E5\u4E3A0\u8868\u793A\u4E0A\u4E00\u8F6E\u5DF2\u83B7\u53D6\u5230\u76EE\u6807\u6570\u636E\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5373\u53EF</span>
      count <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u6B21\u8BFB\u53D6\u8282\u70B9\u503C\u5C06\u8BA1\u6570\u51CF1</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> res <span class="token operator">=</span> node<span class="token punctuation">.</span>val<span class="token punctuation">;</span> <span class="token comment">// \u82E5\u8BFB\u53D6\u8282\u70B9\u4E4B\u540E\u8BA1\u6570\u4E3A0\u5219\uFF0C\u8BE5\u503C\u4E3A\u8D4B\u7ED9\u95ED\u5305\u53D8\u91CFres\u4FDD\u5B58</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u904D\u5386\u67E5\u627E\u5DE6\u5B50\u6811</span>
    <span class="token punctuation">}</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F00\u59CB\u904D\u5386</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-55-\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6" tabindex="-1"><a class="header-anchor" href="#no-55-\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6" aria-hidden="true">#</a> NO.55 \u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6</h2><h3 id="\u9898\u76EE\u4E00-\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6</h3><p>\u8F93\u5165\u4E00\u9897\u4E8C\u53C9\u6811\u7684\u6839\u8282\u70B9\uFF0C\u6C42\u8BE5\u6811\u7684\u6DF1\u5EA6\u3002\u4ECE\u6839\u8282\u70B9\u5230\u53F6\u8282\u70B9\u4F9D\u6B21\u7ECF\u8FC7\u7684\u8282\u70B9(\u542B\u6839\u3001\u53F6\u8282\u70B9)\u5F62\u6210\u6811\u7684\u4E00\u6761\u8DEF\u5F84\uFF0C\u6700\u957F\u8DEF\u5F84\u7684\u957F\u5EA6\u4E3A\u6811\u7684\u6DF1\u5EA6</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u548C\u52A8\u6001\u89C4\u5212\uFF0C\u5F53\u524D\u8282\u70B9\u4E3A\u7A7A\u65F6\u76F4\u63A5\u8FD4\u56DE0\uFF0C\u4E0D\u4E3A\u7A7A\u65F6\u6DF1\u5EA6\u53D6\u51B3\u4E8E\u5DE6\u53F3\u5B50\u6811\u6DF1\u5EA6\u4E2D\u6700\u5927\u7684\u52A01</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNoe</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">maxDepth</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> Solution<span class="token punctuation">.</span><span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u5E73\u8861\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u5E73\u8861\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u5E73\u8861\u4E8C\u53C9\u6811</h3><p>\u8F93\u5165\u4E00\u9897\u4E8C\u53C9\u6811\u7684\u6839\u8282\u70B9\uFF0C\u5224\u65AD\u8BE5\u6811\u662F\u4E0D\u662F\u5E73\u8861\u4E8C\u53C9\u6811\u3002\u5982\u679C\u67D0\u4E8C\u53C9\u6811\u4E2D\u4EFB\u610F\u8282\u70B9\u7684\u5DE6\u3001\u53F3\u5B50\u6811\u7684\u6DF1\u5EA6\u76F8\u5DEE\u4E0D\u8D85\u8FC71\uFF0C\u90A3\u4E48\u5B83\u5C31\u662F\u4E00\u9897\u5E73\u8861\u4E8C\u53C9\u6811\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4E0E\u4E0A\u9898\u7C7B\u4F3C\uFF0C\u91C7\u7528\u9012\u5F52\u7684\u540E\u5E8F\u904D\u5386\uFF0C\u4ECE\u6700\u5E95\u5C42\u5F00\u59CB\u8BA1\u7B97\u5DE6\u53F3\u5B50\u6811\u7684\u9AD8\u5EA6\uFF0C\u82E5\u53D1\u73B0\u9AD8\u5EA6\u5DEE\u5927\u4E8E1\u5219\u76F4\u63A5\u8FD4\u56DE-1\uFF0C\u5E76\u5728\u5DE6\u53F3\u5B50\u6811\u904D\u5386\u5B8C\u6210\u65F6\u5224\u65AD\u8FD4\u56DE\u9AD8\u5EA6\uFF0C\u82E5\u4E3A-1\u5219\u8BF4\u660E\u4E0D\u662F\u5E73\u8861\u4E8C\u53C9\u6811\uFF0C\u8FDB\u884C\u526A\u679D\u76F4\u63A5\u8FD4\u56DE-1\u4E0D\u518D\u5BF9\u5176\u4ED6\u5B50\u6811\u8FDB\u884C\u5224\u65AD\u3002\u82E5\u4E3A\u5E73\u8861\u4E8C\u53C9\u6811\u5219\u6B63\u5E38\u8BA1\u7B97\u9AD8\u5EA6</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span> <span class="token comment">// TreeNode\u7C7B\u63A5\u4E0A\u9898</span>
  <span class="token keyword">static</span> <span class="token function">isBalanced</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> Solution<span class="token punctuation">.</span><span class="token function">recur</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">recur</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u4F20\u5165\u8282\u70B9\u4E3A\u7A7A\u5219\u8FD4\u56DE\u6DF1\u5EA60</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">recur</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5DE6\u5B50\u6811\u7684\u9AD8\u5EA6</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u5224\u65AD\u9AD8\u5EA6\u5E76\u526A\u679D\uFF0C\u53F3\u5B50\u6811\u540C\u6837\u5904\u7406</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">recur</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> abs <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>left <span class="token operator">-</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u662F\u5E73\u8861\u6811\u5219\uFF0C\u83B7\u5F97\u5DE6\u53F3\u5B50\u6811\u9AD8\u5EA6\u5DEE</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>abs <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u9AD8\u5EA6\u5DEE\u7B26\u5408\u8981\u6C42\u5219\u8FD4\u56DE\u6B63\u5E38\u9AD8\u5EA6</span>
    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u9AD8\u5EA6\u5DEE\u4E0D\u7B26\u5408\u8981\u6C42\u5219\u76F4\u63A5\u8FD4\u56DE-1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNoe</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">isBalanced</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-56-\u6570\u7EC4\u4E2D\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#no-56-\u6570\u7EC4\u4E2D\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570" aria-hidden="true">#</a> NO.56 \u6570\u7EC4\u4E2D\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570</h2><h3 id="\u9898\u76EE-\u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u4E24\u4E2A\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-\u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u4E24\u4E2A\u6570\u5B57" aria-hidden="true">#</a> \u9898\u76EE\uFF0D\uFF1A\u6570\u7EC4\u4E2D\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u4E24\u4E2A\u6570\u5B57</h3><p>\u4E00\u4E2A\u6574\u578B\u6570\u7EC4\u91CC\u9664\u4E86\u4E24\u4E2A\u6570\u5B57\u4E4B\u5916\uFF0C\u5176\u4ED6\u6570\u5B57\u90FD\u51FA\u73B0\u4E86\u4E24\u6B21\u3002\u8BF7\u5199\u7A0B\u5E8F\u627E\u51FA\u8FD9\u4E24\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57\u3002\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6O(n)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6O(1)\u3002</p><ul><li><p>\u89E3\u9898\u601D\u8DEF\uFF1A\u56E0\u4E3A\u8981\u6C42\u4E86\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u6240\u4EE5\u4E0D\u80FD\u4F7F\u7528\u66B4\u529B\u89E3\u6CD5\u548C\u54C8\u5E0C\u8868\u6765\u5B9E\u73B0\uFF0C\u8003\u8651\u5230\u9664\u76EE\u6807\u6570\u5916\u5176\u4ED6\u6570\u90FD\u51FA\u73B0\u4E86\u4E24\u6B21\uFF0C\u4F7F\u7528\u6309\u4F4D\u5F02\u6216\u8FD0\u7B97\u80FD\u5C06\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57\u627E\u51FA\uFF0C\u4F46\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57\u6709\u4E24\u4E2A\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5229\u7528\u4E24\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57\u4E4B\u95F4\u7684\u4E0D\u540C\uFF0C\u5C06\u6570\u7EC4\u5206\u4E3A\u4E24\u7EC4\u5206\u522B\u8FDB\u884C\u5F02\u6216\u6C42\u89E3<br> ps:\u56E0\u4E3Am\u4E0E\u76F8\u540C\u7684\u6570\u5B57\u6309\u4F4D\u4E0E\uFF0C\u6240\u5F97\u7ED3\u679C\u76F8\u540C\uFF0C\u56E0\u6B64\u4E0D\u5F71\u54CD\u51FA\u73B0\u4E24\u6B21\u7684\u6570\u5B57\u7684\u5206\u7EC4\uFF0C\u4F46\u80FD\u5206\u5F00\u4EC5\u51FA\u73B0\u4E00\u6B21\u7684\u4E24\u4E2A\u6570\u7EC4</p></li><li><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u8BBE\u7F6Ex,y\u53D8\u91CF\u521D\u59CB\u503C\u4E3A0\uFF0C\u7528\u4E8E\u5B58\u50A8\u4E24\u4E2A\u6570\u5B57\uFF0C\u8BBE\u7F6En\u4E3A0\u8868\u793A\u6574\u4E2A\u6570\u7EC4\u5F02\u6216\u7684\u7ED3\u679C\uFF0C\u8BBE\u7F6Em\u4E3A1\u7528\u4E8E\u67E5\u627E\u5E76\u4FDD\u5B58x,y\u4E24\u6570\u5B57\u4E8C\u8FDB\u5236\u7B2C\u4E00\u4E2A\u4E0D\u540C\u7684\u4F4D</li><li>\u904D\u5386\u6570\u7EC4\uFF0C\u7528n\u5BF9\u6BCF\u4E2A\u6570\u5B57\u8FDB\u884C\u5F02\u6216\uFF0C\u8BA1\u7B97\u51FA\u6574\u4E2A\u6570\u7EC4\u5F02\u6216\u7684\u7ED3\u679C</li><li>\u5C06n\u548Cm\u6309\u4F4D\u4E0E\uFF0C\u82E5\u82E5\u7B49\u4E8E0\uFF0C\u5C06m\u5DE6\u79FB\u4E00\u4F4D\uFF0C\u76F4\u5230<code>(n&amp;m) !== 0</code></li><li>\u518D\u6B21\u904D\u5386\u6570\u7EC4\u5224\u65AD\u6BCF\u4E2A\u6570\u7EC4i\u548Cm\u6309\u4F4D\u4E0E\u7684\u7ED3\u679C\uFF0C\u5206\u4E3A\u4E24\u7EC4\u5206\u522B\u4F7F\u7528x\u548Cy\u8FDB\u884C\u5F02\u6216</li><li>\u904D\u5386\u5B8C\u6210\u540E\u8FD4\u56DEx,y\u5373\u53EF</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">singleNumbers</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
      n <span class="token operator">^=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> m<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> m <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&amp;</span>m<span class="token punctuation">)</span> x <span class="token operator">^=</span> i<span class="token punctuation">;</span>
      <span class="token keyword">else</span> y <span class="token operator">^=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>Solution<span class="token punctuation">.</span><span class="token function">singleNumbers</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u6570\u7EC4\u4E2D\u552F\u4E00\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u6570\u7EC4\u4E2D\u552F\u4E00\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u6570\u7EC4\u4E2D\u552F\u4E00\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57</h3><p>\u5728\u4E00\u4E2A\u6570\u7EC4\u4E2D\u9664\u4E00\u4E2A\u6570\u5B57\u53EA\u51FA\u73B0\u4E00\u6B21\u4E4B\u5916\uFF0C\u5176\u4ED6\u6570\u5B57\u90FD\u51FA\u73B0\u4E86\u4E09\u6B21\uFF0C\u8BF7\u627E\u51FA\u90A3\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5C06\u6570\u7EC4\u4E2D\u6240\u6709\u5143\u7D20\u7684\u4E8C\u8FDB\u5236\u6570\u7684\u6BCF\u4E00\u4F4D\u76F8\u52A0\uFF0C\u82E5\u80FD\u88AB3\u6574\u9664\u5219\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57\u5728\u6B64\u4F4D\u4E00\u5B9A\u4E3A0\uFF0C\u5426\u5219\u4E3A1\uFF0C\u6536\u96C6\u8FD9\u4E9B1\u5373\u53EF\u5F97\u5230\u8BE5\u6570(\u6CE8\u610F\u4E24\u6B2132\u4F4D\u7684\u6570\u7EC4\u904D\u5386\u9700\u53CD\u5411)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">singleNumbers</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>nums<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> bitSum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u6536\u96C6\u6BCF\u4E2A\u6570\u5B57\u7684\u4E8C\u8FDB\u5236\u5BF9\u5E94\u4F4D\u4E0A1\u51FA\u73B0\u7684\u6B21\u6570</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> bitSum<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        bitSum<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> i <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        i <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> m <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u53CD\u5411\u904D\u5386\uFF0C\u63D0\u53D6\u4F59\u6570\u4E3A1\u7684\u4F4D\u6570\u6062\u590D\u8BE5\u6570\u5B57</span>
      res <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      res <span class="token operator">+=</span> bitSum<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> m
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">singleNumbers</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-57-\u548C\u4E3As\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-57-\u548C\u4E3As\u7684\u6570\u5B57" aria-hidden="true">#</a> NO.57 \u548C\u4E3As\u7684\u6570\u5B57</h2><h3 id="\u9898\u76EE\u4E00-\u548C\u4E3As\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u548C\u4E3As\u7684\u6570\u5B57" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u548C\u4E3As\u7684\u6570\u5B57</h3><p>\u8F93\u5165\u4E00\u4E2A\u9012\u589E\u6392\u5E8F\u7684\u6570\u7EC4\u548C\u4E00\u4E2A\u6570\u5B57s\uFF0C\u5728\u6570\u7EC4\u4E2D\u67E5\u627E\u4E24\u4E2A\u6570\uFF0C\u4F7F\u5F97\u5B83\u4EEC\u7684\u548C\u6B63\u597D\u662Fs\u3002\u5982\u679C\u6709\u591A\u5BF9\u6570\u5B57\u7684\u548C\u7B49\u4E8Es\uFF0C\u5219\u8F93\u51FA\u4EFB\u610F\u4E00\u5BF9\u5373\u53EF</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u7ECF\u5178\u7684\u4E24\u6570\u4E4B\u548C\uFF0C\u53EF\u91C7\u7528\u54C8\u5E0C\u8868\u7B49\u65B9\u5F0F\uFF0C\u7531\u4E8E\u672C\u9898\u662F\u5DF2\u7ECF\u6392\u597D\u5E8F\u7684\u6570\u7EC4\uFF0C\u5219\u53EF\u4F7F\u7528\u53CC\u6307\u9488\u5BF9\u649E\u7684\u65B9\u5F0F\u89E3\u9898</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>nums <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>
      s <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">===</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> left<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> right<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>Solution<span class="token punctuation">.</span><span class="token function">twoSum</span><span class="token punctuation">(</span>example<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u548C\u4E3As\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u548C\u4E3As\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u548C\u4E3As\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217</h3><p>\u8F93\u5165\u4E00\u4E2A\u6B63\u6570s\uFF0C\u6253\u5370\u51FA\u6240\u6709\u548C\u4E3As\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217(\u81F3\u5C11\u542B\u6709\u4E24\u4E2A\u6570)\u3002\u4F8B\u5982\uFF0C\u8F93\u516515\uFF0C\u7531\u4E8E1+2+3+4+5=4+5+6=7+8=15\uFF0C\u6240\u4EE5\u6253\u5370\u51FA3\u4E2A\u8FDE\u7EED\u5E8F\u52171~5,4~6,7~8\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u56E0\u4E3A\u65F6\u8FDE\u7EED\u7684\u5E8F\u5217\uFF0C\u53EF\u4EE5\u4F7F\u7528\u53CC\u6307\u9488\u7EC4\u6210\u6ED1\u52A8\u7A97\u53E3\uFF0C\u904D\u5386\u7EF4\u62A4\u4E00\u4E2A\u548Cs\u4E0E\u76EE\u6807\u6570target\u8FDB\u884C\u5224\u65AD\uFF0C\u82E5\u76F8\u7B49\u5219\u751F\u6210\u8BE5\u95ED\u533A\u95F4\u7684\u5E8F\u5217\u5E76\u4FDD\u5B58\uFF0C\u518D\u5224\u65AD\u662F\u5426\u5927\u4E8E\u7B49\u4E8Etarget\uFF0C\u79FB\u52A8\u5DE6\u6307\u9488l\uFF0C\u5E76\u66F4\u65B0\u548Cs\uFF0C\u5426\u5219\u79FB\u52A8\u53F3\u6307\u9488r\u6269\u5927\u7A97\u53E3\u5E76\u66F4\u65B0\u548Cs\uFF0C\u904D\u5386\u7ED3\u675F\u6761\u4EF6\u4E3A<code>l&gt;=r</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">findContinuousSequence</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">===</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>r<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s <span class="token operator">-=</span> l<span class="token punctuation">;</span>
        l<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        r<span class="token operator">++</span><span class="token punctuation">;</span>
        s <span class="token operator">+=</span> r<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>Solution<span class="token punctuation">.</span><span class="token function">findContinuousSequence</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-58-\u7FFB\u8F6C\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#no-58-\u7FFB\u8F6C\u5B57\u7B26\u4E32" aria-hidden="true">#</a> NO.58 \u7FFB\u8F6C\u5B57\u7B26\u4E32</h2><h3 id="\u9898\u76EE\u4E00-\u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u7FFB\u8F6C\u5355\u8BCD\u987A\u5E8F</h3><p>\u8F93\u5165\u4E00\u4E2A\u82F1\u6587\u53E5\u5B50\uFF0C\u7FFB\u8F6C\u53E5\u5B50\u4E2D\u5355\u8BCD\u7684\u987A\u5E8F\uFF0C\u4F46\u5355\u8BCD\u5185\u5B57\u7B26\u7684\u987A\u5E8F\u4E0D\u53D8\u3002\u4E3A\u7B80\u5355\u8D77\u89C1\uFF0C\u6807\u70B9\u7B26\u53F7\u548C\u666E\u901A\u5B57\u6BCD\u4E00\u6837\u5904\u7406\u3002\u4F8B\u5982\u8F93\u5165\u5B57\u7B26\u4E32&quot;I am a student&quot;\uFF0C\u5219\u8F93\u51FA&quot;student a am I&quot;\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u53CC\u6307\u9488\u53CD\u5411\u904D\u5386\u5B57\u7B26\u4E32\uFF0C\u5DE6\u53F3\u6307\u9488\u6355\u83B7\u5355\u8BCD\uFF0C\u5E76\u63A8\u5165\u7ED3\u679C\u6570\u7EC4\u4E2D\uFF0C\u6700\u540E\u4F7F\u7528join\u65B9\u6CD5\u62FC\u63A5\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">reverseWords</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53BB\u9664\u9996\u5C3E\u7A7A\u683C</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">=</span> j<span class="token punctuation">;</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> i<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// \u627E\u5230\u9996\u4E2A\u7A7A\u683C\u5B57\u7B26</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u63A8\u5165\u5355\u8BCD</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> i<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// \u8DF3\u8FC7\u5355\u8BCD\u95F4\u7684\u7A7A\u683C</span>
      j <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">reverseWords</span><span class="token punctuation">(</span><span class="token string">&#39;the sky is blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u5DE6\u65CB\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u5DE6\u65CB\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u5DE6\u65CB\u5B57\u7B26\u4E32</h3><p>\u5B57\u7B26\u4E32\u7684\u5DE6\u65CB\u8F6C\u64CD\u4F5C\u662F\u628A\u5B57\u7B26\u4E32\u7684\u524D\u9762\u82E5\u5E72\u4E2A\u5B57\u7B26\u8F6C\u79FB\u5230\u5B57\u7B26\u4E32\u7684\u5C3E\u90E8\u3002\u8BF7\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u5B9E\u73B0\u5B57\u7B26\u4E32\u5DE6\u65CB\u8F6C\u64CD\u4F5C\u7684\u529F\u80FD\u3002\u6BD4\u5982\uFF0C\u8F93\u5165\u5B57\u7B26\u4E32&quot;abcdefg&quot;\u548C\u6570\u5B57\uFF12\uFF0C\u8BE5\u51FD\u6570\u5C06\u8FD4\u56DE\u5DE6\u65CB\u8F6C\u4E24\u4F4D\u5F97\u5230\u7684\u7ED3\u679C&quot;cdefgab&quot;</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u901A\u8FC7slice\u65B9\u6CD5\u526A\u5207\u6307\u5B9A\u957F\u5EA6\u7684\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u53CD\u5E8F\u8FDB\u884C\u62FC\u63A5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">reverseLeftWords</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">reverseLeftWords</span><span class="token punctuation">(</span><span class="token string">&#39;abcdefg&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-59-\u961F\u5217\u7684\u6700\u5927\u503C" tabindex="-1"><a class="header-anchor" href="#no-59-\u961F\u5217\u7684\u6700\u5927\u503C" aria-hidden="true">#</a> NO.59 \u961F\u5217\u7684\u6700\u5927\u503C</h2><h3 id="\u9898\u76EE\u4E00-\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00-\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C" aria-hidden="true">#</a> \u9898\u76EE\u4E00\uFF1A\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4\u548C\u6ED1\u52A8\u7A97\u53E3\u7684\u5927\u5C0F\uFF0C\u8BF7\u627E\u51FA\u6240\u6709\u6ED1\u52A8\u7A97\u53E3\u91CC\u7684\u6700\u5927\u503C\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u8F93\u5165\u6570\u7EC4{2,3,4,2,6,2,5,1}\u4EE5\u53CA\u6ED1\u52A8\u7A97\u53E3\u5927\u5C0F3\uFF0C\u90A3\u4E48\u4E00\u5171\u5B58\u57286\u4E2A\u6ED1\u52A8\u7A97\u53E3\uFF0C\u4ED6\u4EEC\u7684\u6700\u5927\u503C\u5206\u522B\u662F{4,4,6,6,6,5}\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5728\u6BCF\u8F6E\u6ED1\u52A8\u7A97\u53E3\u4E2D\u7EF4\u62A4\u4E00\u4E2A\u5355\u8C03\u7684\u53CC\u7AEF\u961F\u5217\uFF0C\u6BCF\u6B21\u6ED1\u52A8\u7A97\u53E3\u65F6\uFF0C\u5220\u9664\u961F\u5217\u4E2D\u6BD4\u65B0\u52A0\u5165\u7684\u5143\u7D20nums[i]\u8981\u5C0F\u7684\u5143\u7D20\uFF0C\u5224\u65AD\u82E5\u6700\u5927\u5143\u7D20\u4E0D\u5728\u7A97\u53E3\u5185\uFF0C\u5219\u5F39\u51FA\u8BE5\u5143\u7D20\uFF0C\u5411\u961F\u5C3E\u4E2D\u52A0\u5165\u5F53\u524D\u5143\u7D20, \u5411\u7ED3\u679C\u6570\u7EC4\u4E2D\u6DFB\u52A0\u961F\u5934\u7684\u6700\u5927\u5143\u7D20\uFF0C\u904D\u5386\u5B8C\u6210\u540E\u5C06\u6700\u540E\u4E00\u4E2A\u7A97\u53E3\u7684\u6700\u5927\u503C\u52A0\u5165\u7ED3\u679C\u6570\u7EC4\uFF0C\u8FD4\u56DE\u7ED3\u679C\u6570\u7EC4\u5373\u53EF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">maxSlidingWindow</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>nums <span class="token operator">||</span> k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token keyword">let</span> deque <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u53CC\u7AEF\u961F\u5217\uFF0C\u5B58\u50A8\u7A97\u53E3\u4E2D\u5143\u7D20\u5BF9\u5E94nums\u4E2D\u7684\u7D22\u5F15\uFF0C\u5E76\u7EF4\u6301\u4E86\u5355\u8C03</span>
    <span class="token comment">// \u5BF9\u9996\u4E2A\u6ED1\u52A8\u7A97\u53E3\u7EF4\u62A4deque\u961F\u5217</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>deque <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>deque<span class="token punctuation">[</span>deque<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u904D\u5386\u961F\u5C3E\uFF0C\u627E\u5230\u6BD4\u5F53\u524D\u65B0\u52A0\u5143\u7D20\u5C0F\u7684\u5143\u7D20\uFF0C\u4ECE\u540E\u65B9\u5220\u9664</span>
      <span class="token punctuation">}</span>
      deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6ED1\u52A8\u7A97\u53E3</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> k<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>deque<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u5C06\u7EF4\u62A4\u7684\u6700\u5927\u503C\u63A8\u5165\u7ED3\u679C\u6570\u7EC4</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>deque <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>deque<span class="token punctuation">[</span>deque<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u540E\u65B9\u5220\u9664\u5C0F\u4E8Enums[i]\u7684\u503C</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5F53\u524D\u6700\u5927\u503C\u5DF2\u6ED1\u51FA\u7A97\u53E3\uFF0C\u5219\u5C06\u5176\u5220\u9664(i-k)\u4E3A\u7A97\u53E3\u5DE6\u8FB9\u754C</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>deque <span class="token operator">&amp;&amp;</span> deque<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> i <span class="token operator">-</span> k<span class="token punctuation">)</span> deque<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>deque<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">k</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">result</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>Solution<span class="token punctuation">.</span><span class="token function">maxSlidingWindow</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span>test<span class="token punctuation">,</span> example<span class="token punctuation">.</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>example<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9898\u76EE\u4E8C-\u961F\u5217\u7684\u6700\u5927\u503C" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C-\u961F\u5217\u7684\u6700\u5927\u503C" aria-hidden="true">#</a> \u9898\u76EE\u4E8C\uFF1A\u961F\u5217\u7684\u6700\u5927\u503C</h3><p>\u8BF7\u5B9A\u4E49\u4E00\u4E2A\u961F\u5217\u5E76\u5B9E\u73B0\u51FD\u6570max\u5F97\u5230\u961F\u5217\u91CC\u7684\u6700\u5927\u503C\uFF0C\u8981\u6C42\u51FD\u6570max\uFF0Cpush_back\u548Cpop_front\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662FO(1)\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4E0E\u4E0A\u9898\u601D\u8DEF\u7C7B\u4F3C\uFF0C\u989D\u5916\u7EF4\u62A4\u4E00\u4E2A\u5355\u8C03\u961F\u5217\uFF0C\u5220\u9664\u961F\u5217\u4E2D\u5C0F\u4E8E\u65B0\u589E\u5143\u7D20\u7684\u5143\u7D20\uFF0C\u51FA\u961F\u65F6\u82E5\u662F\u5F53\u524D\u6700\u5927\u503C\uFF0C\u5219\u5C06\u5355\u8C03\u961F\u5217\u4E2D\u6700\u5927\u503C\u4E5F\u51FA\u961F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deque <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">max_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">push_back</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop_front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deque<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> max_queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6682\u65E0\u6D4B\u8BD5\u7528\u4F8B</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-60-n\u4E2A\u9AB0\u5B50\u7684\u70B9\u6570" tabindex="-1"><a class="header-anchor" href="#no-60-n\u4E2A\u9AB0\u5B50\u7684\u70B9\u6570" aria-hidden="true">#</a> NO.60 n\u4E2A\u9AB0\u5B50\u7684\u70B9\u6570</h2><p>\u9898\u76EE\uFF1A\u628An\u4E2A\u9AB0\u5B50\u4ECD\u5728\u5730\u4E0A\uFF0C\u6240\u6709\u9AB0\u5B50\u671D\u4E0A\u4E00\u9762\u7684\u70B9\u6570\u4E4B\u548C\u4E3As\u3002\u8F93\u5165n\uFF0C\u6253\u5370\u51FAs\u6240\u6709\u53EF\u80FD\u7684\u503C\u51FA\u73B0\u7684\u6982\u7387\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u53EF\u4F7F\u7528\u52A8\u6001\u89C4\u5212\u6765\u505A\uFF0Cn\u4E2A\u9AB0\u5B50\u7684\u53D6\u503C\u8303\u56F4x\u4E3A<code>[n, 6n]</code>\uFF0C\u5373\u6709<code>6n - n + 1 = 5n + 1</code>\u79CD\u53D6\u503C\uFF0C\u5404\u53D6\u503C\u7684\u6982\u7387\u51FD\u6570f(n, x)\u53EF\u4EE5\u7531n-1\u4E2A\u9AB0\u5B50\u7684\u6982\u7387\u51FD\u6570f(n-1, x)\u63A8\u5BFC\u800C\u6765\uFF0C\u6BD4\u5982\uFF1A\u53D6\u503C\u4E3Ai\u7684\u9AB0\u5B50\u53EF\u80FD\u7531<code>f(n-1, x - 1),\xB7\xB7\xB7\uFF0Cf(n-1, x - 5)</code>\u52A0\u548C\u7EC4\u6210\uFF0C\u56E0\u6B64\u4E5F\u53EF\u4EE5\u7AD9\u5728f(n-1,x)\u7684\u89D2\u5EA6\u770B\uFF0C\u6BCF\u4E2A\u53D6\u503C\u90FD\u5C06\u5BF9<code>f(n, x+1),\xB7\xB7\xB7,f(n, x+6)</code>\u6709\u8D21\u732E\uFF0C\u56E0\u6B64\u5148\u5BF9f(n-1,x)\u8FDB\u884C\u904D\u5386\uFF0C\u5BF9\u6BCF\u4E2A\u503C\u7D2F\u52A0\u8BA1\u7B97\u5176\u8D21\u732E\u503C\u5373\u53EF\u5F97\u5230f(n, x)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">dicesProbability</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u4E00\u4E2A\u9AB0\u5B50\u7684\u6982\u7387\u60C5\u51B5</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u521D\u59CB\u5316i\u4E2A\u9AB0\u5B50\u7684\u60C5\u51B5\uFF0C\u5148\u586B\u51650</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> dp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4ECEi-1\u4E2A\u9AB0\u5B50\u7684\u60C5\u51B5\u5F00\u59CB\u904D\u5386\u9012\u63A8i\u4E2A\u9AB0\u5B50\u7684\u60C5\u51B5</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          tmp<span class="token punctuation">[</span>j<span class="token operator">+</span>k<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">6</span> <span class="token comment">// \u5229\u7528\u7D22\u5F15\u503C\u4F5C\u4E3A\u70B9\u6570\uFF0C\u4F9D\u6B21\u7D2F\u52A0i-1\u4E2A\u9AB0\u5B50\u5BF9i\u4E2A\u9AB0\u5B50\u5404\u70B9\u6570\u7684\u8D21\u732E\u60C5\u51B5</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      dp <span class="token operator">=</span> tmp
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>Solution<span class="token punctuation">.</span><span class="token function">dicesProbability</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-61-\u6251\u514B\u724C\u4E2D\u7684\u987A\u5B50" tabindex="-1"><a class="header-anchor" href="#no-61-\u6251\u514B\u724C\u4E2D\u7684\u987A\u5B50" aria-hidden="true">#</a> NO.61 \u6251\u514B\u724C\u4E2D\u7684\u987A\u5B50</h2><p>\u9898\u76EE\uFF1A\u4ECE\u6251\u514B\u724C\u4E2D\u968F\u673A\u62BD\u51FA5\u5F20\u724C\uFF0C\u5224\u65AD\u662F\u4E0D\u662F\u4E00\u4E2A\u987A\u5B50\uFF0C\u5373\u8FD95\u5F20\u724C\u662F\u4E0D\u662F\u8FDE\u7EED\u7684\u30022~10\u4E3A\u6570\u5B57\u672C\u8EAB\uFF0CA\u4E3A1\uFF0CJ\u4E3A11\uFF0CQ\u4E3A12\uFF0CK\u4E3A13\uFF0C\u800C\u5927\u3001\u5C0F\u738B\u75280\u8868\u793A\uFF0C\u53EF\u4EE5\u770B\u6210\u4EFB\u610F\u6570\u5B57\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u987A\u5B50\u7684\u6761\u4EF6\u4E3A\uFF0C\u6CA1\u6709\u91CD\u590D\u7684\u724C\uFF0C\u6700\u5927\u724Cmax-\u6700\u5C0F\u724Cmin &lt; 5\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8BBE\u7F6Eset\u96C6\u5408\u904D\u5386\u6570\u7EC4\u5224\u65AD\u6709\u91CD\u590D\u7684\u724C\u5219\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5224\u65AD\u4E3A0\u5219\u8DF3\u8FC7\u5F53\u524D\u904D\u5386\uFF0C\u7EF4\u62A4max\u548Cmin\u53D8\u91CF\uFF0C\u904D\u5386\u7ED3\u675F\u540E\u8FD4\u56DE<code>max - min &lt; 5</code>\u7684\u7ED3\u679C\u5373\u53EF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">isStraight</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>nums<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      min <span class="token operator">=</span> num <span class="token operator">&lt;</span> min <span class="token operator">?</span> num <span class="token operator">:</span> min<span class="token punctuation">;</span>
      max <span class="token operator">=</span> num <span class="token operator">&gt;</span> max <span class="token operator">?</span> num <span class="token operator">:</span> max<span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      cache<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> max <span class="token operator">-</span> min <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">isStraight</span><span class="token punctuation">(</span>example<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-62-\u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#no-62-\u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570\u5B57" aria-hidden="true">#</a> NO.62 \u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570\u5B57</h2><p>\u9898\u76EE\uFF1A0,1,...,n-1\u8FD9n\u4E2A\u6570\u5B57\u6392\u6210\u4E00\u4E2A\u5706\u5708\uFF0C\u4ECE\u6570\u5B570\u5F00\u59CB\uFF0C\u6BCF\u6B21\u4ECE\u8FD9\u4E00\u4E2A\u5706\u5708\u91CC\u5220\u9664\u7B2Cm\u4E2A\u6570\u5B57\u3002\u6C42\u51FA\u8FD9\u4E2A\u5706\u5708\u91CC\u5269\u4E0B\u7684\u6700\u540E\u4E00\u4E2A\u6570\u5B57\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u672C\u9898\u4E3A\u7EA6\u745F\u592B\u73AF\u95EE\u9898\uFF0C\u901A\u8FC7\u6A21\u62DF\u5220\u9664\u89E3\u9898\u590D\u6742\u5EA6\u8F83\u9AD8\u3002\u53EF\u8003\u8651\u52A8\u6001\u89C4\u5212\u7B97\u6CD5\uFF0C\u8BBEf(n)\u4E3An\u4E2A\u6570\u5B57\u6BCF\u6B21\u79FB\u9664\u7B2Cm\u4E2A\u6570\u5B57\u540E\u7684\u7ED3\u679C\uFF0C\u5219f(n)\u79FB\u9664\u4E00\u4E2A\u6570\u5B57\u540E\u53D8\u4E3A<code>f(n) = f&#39;(n-1)</code>\uFF0C\u6570\u5B57\u53D8\u4E3An-1\u4E2A\uFF0C\u987A\u5E8F\u4E3A<code>m,m+1,\xB7\xB7\xB7,m+x</code>\uFF0C\u800Cf(n-1)\u4E5F\u6709n-1\u4E2A\u6570\u5B57\uFF0C\u987A\u5E8F\u4E3A<code>0,1,\xB7\xB7\xB7,x</code>\uFF0C\u5219f(n-1)\u548Cf&#39;(n-1)\u7684\u5173\u7CFB\u4E3A<code>f&#39;(n-1) = (f(n-1)+m)%n</code> \u6240\u4EE5\u6709\u9012\u63A8\u5173\u7CFB<code>f(n) = (f(n-1) + m) % n</code>,\u521D\u59CB\u503Cf(1)\u4EC5\u6709\u4E00\u4F4D\u6570\u5B57\uFF0C\u56E0\u6B64\u4E00\u5B9A\u7B49\u4E8E0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">lastRemaining</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> m</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> m <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316f(1)\u7684\u7ED3\u679C</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      last <span class="token operator">=</span> <span class="token punctuation">(</span>last <span class="token operator">+</span> m<span class="token punctuation">)</span> <span class="token operator">%</span> i<span class="token punctuation">;</span> <span class="token comment">// \u4ECEn=2\u5F00\u59CB\u904D\u5386\u9012\u63A8\uFF0C\u5BF9i\u53D6\u4F59\u7528\u4E8E\u6A21\u62DF\u5706\u73AF</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> last<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    example<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
      Solution<span class="token punctuation">.</span><span class="token function">lastRemaining</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> i<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-63-\u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6" tabindex="-1"><a class="header-anchor" href="#no-63-\u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6" aria-hidden="true">#</a> NO.63 \u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6</h2><p>\u9898\u76EE\uFF1A\u5047\u8BBE\u628A\u67D0\u80A1\u7968\u7684\u4EF7\u683C\u6309\u7167\u65F6\u95F4\u5148\u540E\u987A\u5E8F\u5B58\u50A8\u5728\u6570\u7EC4\u4E2D\uFF0C\u8BF7\u95EE\u4E70\u5356\u8BE5\u80A1\u7968\u4E00\u6B21\u53EF\u80FD\u83B7\u5F97\u7684\u6700\u5927\u5229\u6DA6\u662F\u591A\u5C11\uFF1F\u4F8B\u5982\uFF0C\u4E00\u53EA\u80A1\u7968\u5728\u67D0\u4E9B\u65F6\u95F4\u8282\u70B9\u7684\u4EF7\u683C\u4E3A{9,11,8,5,7,12,16,14}\u3002\u5982\u679C\u6211\u4EEC\u80FD\u5728\u4EF7\u683C\u4E3A5\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5E76\u5728\u4EF7\u683C\u4E3A16\u65F6\u5356\u51FA\uFF0C\u5219\u80FD\u6536\u83B7\u6700\u5927\u7684\u5229\u6DA611.</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4F7F\u7528\u52A8\u6001\u89C4\u5212\uFF0C\u904D\u5386\u4EF7\u683C\u6570\u7EC4\uFF0C\u5F53\u524D\u4EF7\u683C\u4E4B\u524D\u5B8C\u6210\u4E70\u5356\u64CD\u4F5C\u7684\u6700\u5927\u5229\u6DA6\u8BB0\u4E3Adp(i)\uFF0C\u5219dp(i)\u7684\u503C\u53D6\u53D6\u51B3\u4E8Edp(i-1)\u548C\u5F53\u524D\u4EF7\u683Cprice\u51CF\u53BB\u622A\u6B62\u76EE\u524D\u6700\u4F4E\u4EF7\u683CminPrice\u4E2D\u7684\u6700\u5927\u503C\uFF0C\u5373<code>dp(i) = max(dp(i-1), price - minPrice)</code>\uFF0C\u56E0\u6B64\u5728\u904D\u5386\u65F6\u9700\u8981\u540C\u65F6\u7EF4\u62A4\u4E00\u4E2A\u8BB0\u5F55\u6700\u5C0F\u4EF7\u683C\u7684\u53D8\u91CF\u548C\u4E4B\u524D\u5B50\u6570\u7EC4\u7684\u6700\u5927\u5229\u6DA6\u53D8\u91CF\uFF0C\u904D\u5386\u5B8C\u6210\u540E\u8FD4\u56DE\u6700\u5927\u5229\u6DA6\u5373\u53EF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> minPrice <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">,</span> profit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> price <span class="token keyword">of</span> prices<span class="token punctuation">)</span><span class="token punctuation">{</span>
      minPrice <span class="token operator">=</span> price <span class="token operator">&lt;</span> minPrice <span class="token operator">?</span> price <span class="token operator">:</span> minPrice<span class="token punctuation">;</span>
      <span class="token keyword">let</span> tmp <span class="token operator">=</span> price <span class="token operator">-</span> minPrice<span class="token punctuation">;</span>
      profit <span class="token operator">=</span> tmp <span class="token operator">&gt;</span> profit <span class="token operator">?</span> tmp <span class="token operator">:</span> profit<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> profit
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">maxProfit</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-64-\u6C421-2-n" tabindex="-1"><a class="header-anchor" href="#no-64-\u6C421-2-n" aria-hidden="true">#</a> NO.64 \u6C421+2+...+n</h2><p>\u9898\u76EE\uFF1A\u6C421+2+...+n\uFF0C\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u4E58\u9664\u6CD5\uFF0Cfor\uFF0Cwhile\uFF0Cif\uFF0Celse\uFF0Cswitch\uFF0Ccase\u7B49\u5173\u952E\u5B57\u53CA\u6761\u4EF6\u5224\u65AD\u8BED\u53E5\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u629B\u5F00\u9650\u5236\u6B64\u9898\u89E3\u6CD5\u6709\u516C\u5F0F\u5E73\u5747\u8BA1\u7B97\u3001\u8FED\u4EE3\u3001\u9012\u5F52\uFF0C\u7531\u4E8E\u524D\u4E24\u79CD\u65B9\u6CD5\u9700\u8981\u4F7F\u7528\u5230\u4E58\u9664\u548C\u5FAA\u73AF\uFF0C\u56E0\u6B64\u6392\u9664\uFF0C\u800C\u9012\u5F52\u4E2D\u9012\u5F52\u7ED3\u675F\u6761\u4EF6\u9700\u8981\u7528\u5230\u6761\u4EF6\u5224\u65AD\uFF0C\u6761\u4EF6\u5224\u65AD\u53EF\u901A\u8FC7\u903B\u8F91\u64CD\u4F5C\u7B26\u77ED\u8DEF\u6765\u5B9E\u73B0\uFF0C\u56E0\u6B64\u53EF\u4F7F\u7528\u9012\u5F52\u5BF9\u8BE5\u9898\u8FDB\u884C\u6C42\u89E3</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">sumNums</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      n <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sumNums</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res <span class="token operator">+=</span> n<span class="token punctuation">;</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">sumNums</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-65-\u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5" tabindex="-1"><a class="header-anchor" href="#no-65-\u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5" aria-hidden="true">#</a> NO.65 \u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5</h2><p>\u9898\u76EE\uFF1A\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u6C42\u4E24\u6574\u6570\u4E4B\u548C\uFF0C\u8981\u6C42\u5728\u51FD\u6570\u4F53\u5185\u4E0D\u5F97\u4F7F\u7528+-*/\u56DB\u5219\u8FD0\u7B97\u7B26\u53F7</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u4E24\u4E2A\u4E8C\u8FDB\u5236\u7684\u65E0\u8FDB\u4F4D\u4E4B\u548C\u7684\u7ED3\u679C\u4E0E\u5F02\u6216\u64CD\u4F5C\u76F8\u540C\uFF0C\u800C\u8FDB\u4F4D\u7684\u90E8\u5206\u7684\u7ED3\u679C\u5219\u548C\u4E0E\u8FD0\u7B97\u5E76\u5DE6\u79FB\u4E00\u4F4D\u76F8\u540C\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8003\u8651\u4F7F\u7528\u53D8\u91CFc\u5B58\u50A8\u8FDB\u4F4D\uFF0C\u904D\u5386\u76F4\u5230\u8FDB\u4F4D\u4E3A0\u5373\u53EF\u83B7\u5F97\u6C42\u548C\u7ED3\u679C(\u7531\u4E8E\u8865\u7801\u7684\u5B58\u5728\uFF0C\u4E0A\u8FF0\u601D\u8DEF\u540C\u6837\u9002\u7528\u4E8E\u8D1F\u6570)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
      a <span class="token operator">^=</span> b<span class="token punctuation">;</span>
      b <span class="token operator">=</span> c
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-66-\u6784\u5EFA\u4E58\u79EF\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#no-66-\u6784\u5EFA\u4E58\u79EF\u6570\u7EC4" aria-hidden="true">#</a> NO.66 \u6784\u5EFA\u4E58\u79EF\u6570\u7EC4</h2><p>\u9898\u76EE\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4A[0,1,...,n-1],\u8BF7\u6784\u5EFA\u4E00\u4E2A\u6570\u7EC4B[0,1,...,n-1]\uFF0C\u5176\u4E2DB\u4E2D\u7684\u5143\u7D20<br> $$ B[i]=A[0]\\times A[1]\\times ...\\times A[i-1] \\times A[i+1] \\times ... \\times A[n-1] $$<br> \u4E0D\u80FD\u4F7F\u7528\u9664\u6CD5</p><ul><li>\u89E3\u9898\u601D\u8DEF\uFF1A\u5C06<code>B[i]</code>\u6309\u7167<code>A[i-1]</code>\u548C<code>A[i+1]</code>\u5206\u6210\u524D\u9762\u4E58\u79EF<code>C[i]</code>\u548C\u540E\u9762\u4E58\u79EF<code>D[i]</code>\u4E24\u90E8\u5206\uFF0C\u5BF9\u4E8E<code>C[i]=C[i-1]*A[i-1]</code>\uFF0C<code>D[i]=D[i+1]*A[i+1]</code>\uFF0C\u56E0\u6B64\u53EF\u4EE5\u91C7\u7528\u4ECE\u6CBF\u7740i\u589E\u52A0\u7684\u65B9\u5411\u5FAA\u73AF\u8BA1\u7B97<code>C[i]</code>\uFF0C\u518D\u6CBF\u7740i\u51CF\u5C11\u7684\u65B9\u5411\u8BA1\u7B97<code>D[i]</code>\uFF0C\u6700\u7EC8\u83B7\u5F97B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">constructorArr</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tmp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
      b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// \u4F7F\u7528b\u6570\u7EC4\u7F13\u5B58c[i]\u7684\u7ED3\u679C</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> a<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      tmp <span class="token operator">*=</span> a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4F7F\u7528tmp\u53D8\u91CF\u7F13\u5B58d[i]</span>
      b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*=</span> tmp<span class="token punctuation">;</span> <span class="token comment">// \u5C06\u7F13\u5B58\u7684c[i]\u4E0Ed[i]\u76F8\u4E58</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">result</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token class-name">Solution</span><span class="token punctuation">.</span><span class="token function">constructorArr</span><span class="token punctuation">(</span>example<span class="token punctuation">.</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>example<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-67-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#no-67-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570" aria-hidden="true">#</a> NO.67 \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570</h2><p>\u9898\u76EE\uFF1A\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u4E00\u4E2A\u6574\u6570(\u5B9E\u73B0Integer.valueOf(string)\u7684\u529F\u80FD\uFF0C\u4F46\u662Fstring\u4E0D\u7B26\u5408\u6570\u5B57\u8981\u6C42\u65F6\u8FD4\u56DE0)\uFF0C\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u5B57\u7B26\u4E32\u8F6C\u6362\u6574\u6570\u7684\u5E93\u51FD\u6570\u3002 \u6570\u503C\u4E3A0\u6216\u8005\u5B57\u7B26\u4E32\u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u6570\u503C\u5219\u8FD4\u56DE0\u3002</p><ul><li>\u89E3\u9898\u601D\u8DEF:\u6839\u636Eleetcode\u8981\u6C42\uFF0C\u5BF9\u4E8E\u8D85\u51FA\u8303\u56F4\u7684\u503C\u76F4\u63A5\u663E\u793A\u6700\u5927\u6216\u6700\u5C0F\u503C\uFF0C\u56E0\u6B64\u5B57\u7B26\u4E32\u9700\u8981\u4F18\u5148\u5904\u7406\u7684\u6709\uFF0C\u5F00\u5934\u7684\u7A7A\u683C\u3001\u6B63\u8D1F\u53F7;\u4F7F\u7528sign\u53D8\u91CF\u5B58\u50A8\u6B63\u8D1F\u53F7\uFF0C\u5224\u65AD\u6EA2\u51FA\u9700\u8981\u4F18\u5148\u5224\u65AD\u7ED3\u679Cres\u4E0E<code>2**31 // 10</code>\u7684\u5927\u5C0F\uFF0C\u56E0\u4E3Ares\u540E\u7EED\u8BA1\u7B97\u9700\u8981\u4E5810\u5E76\u52A0\u4E0A\u5F53\u524D\u4F4D\u6570\uFF0C\u82E5\u5224\u65AD\u6EA2\u51FA\u5219\u6839\u636E\u6B63\u8D1F\u53F7\u8FD4\u56DE\u76F8\u5E94\u7684\u6700\u5927\u6216\u6700\u5C0F\u503C\uFF0C\u5728\u7D2F\u52A0\u904D\u5386\u8FC7\u7A0B\u4E2D\u9047\u5230\u975E\u6570\u5B57\u5B57\u7B26\u76F4\u63A5\u8DF3\u51FA\uFF0C\u8FD4\u56DE\u7ED3\u679C\u65F6\u4E0Esign\u53D8\u91CF\u76F8\u4E58\u5373\u53EF\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">strToInt</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> sign <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> int_max <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">**</span><span class="token number">31</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>int_min <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bndry <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">31</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">===</span> len<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span> sign <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&#39;+-&#39;</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> c <span class="token keyword">of</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">||</span> c <span class="token operator">&gt;</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">&gt;</span> bndry <span class="token operator">||</span> res <span class="token operator">===</span> bndry <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> sign <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> int_max <span class="token operator">:</span> int_min<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      res <span class="token operator">=</span> <span class="token number">10</span><span class="token operator">*</span> res <span class="token operator">+</span> <span class="token punctuation">(</span>c <span class="token operator">-</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sign <span class="token operator">*</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;42&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-42&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4193 wi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wo 987&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-91283472332&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">result</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">4193</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2147483648</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    example<span class="token punctuation">.</span>test<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">str</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">strToInt</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>example<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="no-68-\u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148" tabindex="-1"><a class="header-anchor" href="#no-68-\u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148" aria-hidden="true">#</a> NO.68 \u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148</h2><p>\u9898\u76EE\uFF1A\u8F93\u5165\u6811\u7684\u6839\u8282\u70B9\u548C\u4E4B\u4E2D\u4E24\u4E2A\u8282\u70B9\uFF0C\u6C42\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148</p><ul><li>\u601D\u8DEF\u4E00\uFF1A\u5224\u5B9A\u4E3A\u4E8C\u53C9\u641C\u7D22\u6811<br> \u82E5\u662F\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u5219\u901A\u8FC7\u6BD4\u8F83\u4E24\u8282\u70B9\u548C\u6839\u8282\u70B9\u503C\u7684\u5927\u5C0F\uFF0C\u6765\u5224\u65AD\u5176\u4F4D\u4E8E\u6839\u8282\u70B9\u7684\u5DE6\u5B50\u6811\u6216\u53F3\u5B50\u6811\uFF0C\u9012\u5F52/\u904D\u5386\u5224\u65AD\u5DE6\u5B50\u6811\u6216\u53F3\u5B50\u6811\uFF0C\u82E5\u4E24\u8282\u70B9\u5206\u522B\u4F4D\u4E8E\u5B50\u8282\u70B9(\u5305\u62EC\u6839\u8282\u70B9)\u7684\u4E24\u4FA7\uFF0C\u5219\u8BE5\u8282\u70B9\u4E3A\u4E24\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148</li><li>\u601D\u8DEF\u4E8C\uFF1A\u82E5\u4E0D\u662F\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u4E14\u6709\u6307\u5411\u7236\u8282\u70B9\u7684\u6307\u9488<br> \u82E5\u6709\u6307\u5411\u7236\u8282\u70B9\u7684\u6307\u9488\uFF0C\u8BE5\u95EE\u9898\u53EF\u8F6C\u6362\u4E3A\u6C42\u4E24\u4E2A\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9\uFF0C\u8BE5\u94FE\u8868\u7684\u5C3E\u8282\u70B9\u90FD\u662F\u6307\u5411\u6839\u8282\u70B9\uFF0C\u53EF\u53C2\u8003\u4E24\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9\u7684\u89E3\u6CD5</li><li>\u601D\u8DEF\u4E09\uFF1A\u82E5\u53EA\u662F\u666E\u901A\u6811\uFF0C\u4E14\u6CA1\u6709\u6307\u5411\u7236\u8282\u70B9\u7684\u6307\u9488<br> \u82E5\u53EA\u662F\u666E\u901A\u6811\uFF0C\u5219\u53EF\u91C7\u7528\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF0C\u627E\u5230\u4E24\u8282\u70B9\u5230\u6839\u8282\u70B9\u7684\u8DEF\u5F84\uFF0C\u5C06\u5176\u8F6C\u6362\u4E3A\u6C42\u4E24\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u516C\u5171\u8282\u70B9\u3002</li><li>\u601D\u8DEF\u56DB\uFF1A\u5BF9\u4E0E\u666E\u901A\u6811\uFF0C\u56E0\u4E3A\u5404\u8282\u70B9\u7684\u503C\u90FD\u662F\u552F\u4E00\u7684\uFF0C\u91C7\u7528\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u65F6\uFF0C\u82E5\u5F53\u524D\u8282\u70B9\u7B49\u4E8E\u76EE\u6807\u8282\u70B9\u6216\u4E3A\u7A7A\u53EF\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u5BF9\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u8FDB\u884C\u9012\u5F52\u5224\u65AD\uFF0C\u83B7\u5F97\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u7684\u7ED3\u679C\uFF0C\u82E5\u90FD\u4E3A\u7A7A\u8BF4\u660E\u5F53\u524D\u5B50\u6811\u6CA1\u6709\u627E\u5230\u4E24\u8282\u70B9\uFF0C\u82E5\u5176\u4E2D\u4E00\u4E2A\u4E3A\u7A7A\u5219\u8FD4\u56DE\u53E6\u4E00\u4E2A\u8282\u70B9\uFF0C\u82E5\u90FD\u4E0D\u4E3A\u7A7A\u5219\u8BF4\u660E\u5F53\u524D\u8282\u70B9\u5373\u4E3A\u516C\u5171\u7956\u5148\uFF0C\u8FD4\u56DE\u5F53\u524D\u8282\u70B9\u3002\u9012\u5F52\u8FD4\u56DE\u9636\u6BB5\u6700\u7EC8\u80FD\u591F\u83B7\u5F97\u516C\u5171\u8282\u70B9\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">=</span><span class="token keyword">undefined</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E8C\u53C9\u641C\u7D22\u6811\u60C5\u51B5\u7684\u5B9E\u73B0</span>
  <span class="token keyword">static</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> point <span class="token operator">=</span> root<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> q<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4FDD\u8BC1p\u5927\u4E8Eq\u80FD\u51CF\u5C11\u540E\u7EED\u7684\u5224\u65AD\u590D\u6742\u5EA6</span>
      <span class="token keyword">let</span> tmp <span class="token operator">=</span> p<span class="token punctuation">;</span>
      p <span class="token operator">=</span> q<span class="token punctuation">;</span>
      q <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> q<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
        point <span class="token operator">=</span> point<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
        point <span class="token operator">=</span> point<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> point<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u666E\u901A\u4E8C\u53C9\u6811\u7684\u60C5\u51B5</span>
  <span class="token keyword">static</span> <span class="token function">lowestCommonAncestor2</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> root <span class="token operator">===</span> p <span class="token operator">||</span> root <span class="token operator">===</span> q<span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">lowestCommonAncestor2</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> Solution<span class="token punctuation">.</span><span class="token function">lowestCommonAncestor2</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>left<span class="token punctuation">)</span> <span class="token keyword">return</span> right<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span> left<span class="token punctuation">;</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> example <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">tree</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">tree2</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">result</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>    <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> build_tree <span class="token operator">=</span> example<span class="token punctuation">.</span>tree2<span class="token punctuation">;</span>
    <span class="token keyword">const</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>build_tree<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">lowestCommonAncestor2</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> head<span class="token punctuation">.</span>right<span class="token punctuation">,</span>head<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Solution<span class="token punctuation">.</span><span class="token function">lowestCommonAncestor2</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> head<span class="token punctuation">.</span>left<span class="token punctuation">,</span> head<span class="token punctuation">.</span>left<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Solution<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,133);function g(x,N){const t=r("ExternalLinkIcon");return d(),v("div",null,[w,a(" \u4EE5\u4E0B\u65B9\u6CD5\u4E0D\u80FD\u4FDD\u8BC1100%\u627E\u5230\u91CD\u590D\u7684\u6570\u5B57 "),a(" \u5229\u7528\u4E8C\u5206\u67E5\u627E\u6CD5\u539F\u7406\uFF0C\u786E\u5B9A\u4E2D\u503C\uFF0C\u7EDF\u8BA1\u6570\u7EC4\u4E2D\u6BD4\u4E2D\u503C\u5C0F\u6216\u8005\u6BD4\u4E2D\u503C\u5927\u7684\u6570\u5B57\u7684\u4E2A\u6570\uFF0C\u4EE5\u6B64\u786E\u5B9A\u91CD\u590D\u7684\u6570\u5B57\u5728\u4E2D\u503C\u5DE6\u4FA7\u8FD8\u662F\u53F3\u4FA7 "),y,p("p",null,[n("\u5FAA\u73AF\u904D\u5386\u6BCF\u4E00\u4F4D\uFF0C\u7EC8\u6B62\u6761\u4EF6\u4E3Acur\u548Chigh\u540C\u65F6\u4E3A0\uFF0C"),p("a",f,[n("\u53C2\u8003leetcode\u8DEF\u98DE"),m(t)]),n(" \u6B64\u9898\u8F6C\u6362\u4E3A\u6392\u5217\u7EC4\u5408\u540E\uFF0C\u5173\u952E\u5728\u4E8E\u786E\u5B9Acur\u51FA\u73B01\u7684\u6570\u5B57\u8303\u56F4\uFF0C\u9650\u5B9A\u8303\u56F4\u540E\uFF0C\u53EF\u6309\u7167\u6392\u5217\u7EC4\u5408\u7684\u65B9\u5F0F\u786E\u5B9A\uFF0C\u7EC4\u5408\u6570")]),h])}const D=k(b,[["render",g],["__file","tsSword4Offer.html.vue"]]);export{D as default};
