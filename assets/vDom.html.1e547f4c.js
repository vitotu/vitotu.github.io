import{_ as n,o as s,c as a,e as p}from"./app.4a97f006.js";const t={},o=p(`<h1 id="\u624B\u5199\u5B9E\u73B0\u865A\u62DFdom\u548Cdiff\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u5B9E\u73B0\u865A\u62DFdom\u548Cdiff\u7B97\u6CD5" aria-hidden="true">#</a> \u624B\u5199\u5B9E\u73B0\u865A\u62DFDOM\u548Cdiff\u7B97\u6CD5</h1><p>\u5047\u8BBE\u8282\u70B9\u4E2D\u6587\u672C\u8282\u70B9\u548C\u5143\u7D20\u5B50\u8282\u70B9\u4E0D\u540C\u65F6\u51FA\u73B0\uFF0C\u5373\u4E0D\u5B58\u5728<code>&lt;div&gt;abc&lt;p&gt;xyz&lt;/p&gt;&lt;/div&gt;</code>\u8FD9\u79CD\u60C5\u51B5<br> \u7B80\u5355\u7684html\u7247\u6BB5\u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>click to change dom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">class</span> <span class="token class-name">VDom</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span>: \u7B80\u5355\u7684h\u51FD\u6570\uFF0C\u5C06token\u8F6C\u6362\u4E3AVNode\u5BF9\u8C61\uFF0C\u5C06\u5BF9\u5165\u53C2\u8FDB\u884C\u4E25\u683C\u68C0\u67E5
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">sel</span> \u6807\u7B7E\u540D
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">data</span> \u6807\u7B7E\u5C5E\u6027
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token operator">|</span>Number<span class="token operator">|</span>Array<span class="token operator">|</span>h<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token parameter">c</span> \u6587\u672C\u8282\u70B9\u6216\u5B50\u8282\u70B9\u6570\u7EC4
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>VNode<span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">static</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">sel<span class="token punctuation">,</span> data<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5BF9tokens\u7684\u9012\u5F52\u4EA4\u7531\u5916\u90E8\u5B9E\u73B0</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;h only accept 3 args&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> c <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> c <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u68C0\u6D4B\u5230\u6587\u672C\u8282\u70B9</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u68C0\u6D4B\u5230\u5B50\u8282\u70B9\u5217\u8868\u5FAA\u73AF\u5904\u7406</span>
        <span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> c<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;sel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;array c must be h item&#39;</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token comment">// \u53EA\u6709\u6570\u7EC4\u4E2D\u7684\u6BCF\u9879\u6EE1\u8DB3\u662F\u5BF9\u8C61\u7C7B\u578B\u4E14\u542B\u6709sel\u5C5E\u6027\u65F6\u624D\u653E\u5165children\u6536\u96C6\u5668\u4E2D</span>
          children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token comment">// \u5047\u8BBE\u4EC5\u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u4E0D\u540C\u65F6\u542B\u6587\u672C\u8282\u70B9\u7B49\u590D\u6742\u60C5\u51B5</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> c <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;sel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u4E3A\u5BF9\u8C61\u7C7B\u578B\u4E14\u6709sel\u5C5E\u6027\uFF0C\u5219\u4EC5\u6709\u4E00\u4E2A\u5B50\u8282\u70B9\uFF0C\u5BF9\u5E94c\u4E3A\u975E\u6570\u7EC4\u60C5\u51B5</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>sel<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u6240\u6709\u652F\u6301\u7684\u60C5\u51B5\u90FD\u4E0D\u6EE1\u8DB3\u5219\u629B\u51FA\u9519\u8BEF</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;typeof c not support&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span>: \u5728\u6B64\u51FD\u6570\u4E2D\u8FDB\u884C\u65B0\u65E7\u865A\u62DFDOM\u6BD4\u8F83
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>VNode<span class="token punctuation">}</span></span> <span class="token parameter">oldVNode</span>
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>VNode<span class="token punctuation">}</span></span> <span class="token parameter">newVNode</span>
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">static</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">oldVNode<span class="token punctuation">,</span> newVNode</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// \u65E7\u7684\u8282\u70B9\u4E0D\u662FVNode\u865A\u62DF\u8282\u70B9\u5219\u57FA\u4E8E\u65E7\u8282\u70B9\u521B\u5EFA\u4E00\u4E2A\u865A\u62DF\u8282\u70B9</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>sel <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span> oldVNode<span class="token punctuation">.</span>sel <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        oldVNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> oldVNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u547D\u4E2D\u89C4\u5219\uFF0C\u5224\u5B9A\u65B0\u65E7VNode\u76F8\u540C\uFF0C\u8FDB\u884C\u66F4\u7EC6\u81F4\u7684\u6BD4\u8F83</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newVNode<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span> oldVNode<span class="token punctuation">.</span>sel <span class="token operator">===</span> newVNode<span class="token punctuation">.</span>sel<span class="token punctuation">)</span><span class="token punctuation">{</span>
        VDom<span class="token punctuation">.</span><span class="token function">patchVNode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">)</span><span class="token punctuation">;</span> 
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E0D\u662F\u540C\u4E00\u4E2A\u865A\u62DF\u8282\u70B9\uFF0C\u76F4\u63A5\u63D2\u5165\u65B0\u7684\u8282\u70B9\u5E76\u5220\u9664\u65E7\u8282\u70B9</span>
        <span class="token keyword">let</span> newVNodeElm <span class="token operator">=</span> VDom<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>parentNode <span class="token operator">&amp;&amp;</span> newVNodeElm<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63D2\u5165\u5230\u65E7\u8282\u70B9\u4E4B\u524D</span>
          oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newVNodeElm<span class="token punctuation">,</span> oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5220\u9664\u65E7\u7684\u8282\u70B9</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">patchVNode</span><span class="token punctuation">(</span><span class="token parameter">oldVNode<span class="token punctuation">,</span> newVNode</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5728\u6B64\u51FD\u6570\u4E2D\u8FDB\u884C\u66F4\u7EC6\u81F4\u7684\u6BD4\u8F83</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>oldVNode <span class="token operator">===</span> newVNode<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u65B0\u65E7\u8282\u70B9\u6307\u5411\u5185\u5B58\u4E2D\u76F8\u540C\u7684\u5BF9\u8C61\u5219\u4E0D\u7528\u66F4\u65B0</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>text <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> newVNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u65B0VNode\u4EC5\u6709\u6587\u672C\u8282\u70B9\u65F6, \u76F4\u63A5\u5224\u65AD\u65B0\u65E7\u8282\u70B9\u7684\u6587\u672C\u662F\u5426\u76F8\u540C</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>text <span class="token operator">!==</span> oldVNode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u4E0D\u540C\u76F4\u63A5\u8FDB\u884C\u66F4\u65B0\uFF0C\u65E7VNode\u7684\u5B50\u8282\u70B9\u5DF2\u6CA1\u6709\u610F\u4E49</span>
          oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>innerText <span class="token operator">=</span> newVNode<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0VNode\u4E2D\u4E0D\u5B58\u5728\u6587\u672C\u8282\u70B9(\u5047\u5B9A\u6587\u672C\u8282\u70B9\u4E0D\u4E0E\u5B50\u8282\u70B9\u540C\u65F6\u5B58\u5728)</span>
        <span class="token comment">// \u82E5\u65E7VNode\u4E2D\u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u5219\u5BF9\u5B50\u8282\u70B9\u8FDB\u884C\u66F4\u65B0</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>children <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> oldVNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          VDom<span class="token punctuation">.</span><span class="token function">updateChildren</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldVNode<span class="token punctuation">.</span>children<span class="token punctuation">,</span> newVNode<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u65E7VNode\u4E2D\u4E0D\u5B58\u5728\u5B50\u8282\u70B9\u5219\u5FAA\u73AF\u7684\u65B0VNode\u4E2D\u7684\u6240\u6709\u5B50\u8282\u70B9\u6DFB\u52A0\u5230DOM\u4E2D</span>
          oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newVNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> dom <span class="token operator">=</span> VDom<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oldVNode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">createElement</span><span class="token punctuation">(</span><span class="token parameter">vNode</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u57FA\u4E8EVNode\u5BF9\u8C61\u521B\u5EFA\u5B64\u513F(\u672A\u6302\u5728\u7684)\u771F\u5B9EDOM\u8282\u70B9</span>
      <span class="token keyword">let</span> domNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>vNode<span class="token punctuation">.</span>sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>vNode<span class="token punctuation">.</span>text <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>vNode<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> vNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        domNode<span class="token punctuation">.</span>innerText <span class="token operator">=</span> vNode<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>vNode<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> vNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> ch <span class="token operator">=</span> vNode<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">let</span> chDom <span class="token operator">=</span> VDom<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
          domNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>chDom<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      vNode<span class="token punctuation">.</span>elm <span class="token operator">=</span> domNode<span class="token punctuation">;</span> <span class="token comment">// \u5C06\u521B\u5EFA\u7684\u5B64\u513F\u8282\u70B9\u6302\u5728\u5230VNode\u5BF9\u8C61\u4E0A</span>
      <span class="token keyword">return</span> vNode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span>: \u4F7F\u7528\u5DE6\u53F3\u53CC\u6307\u9488\u6CD5\u5BF9\u4E24\u4E2A\u5B50\u8282\u70B9\u5E8F\u5217\u8FDB\u884C\u9012\u5F52\u6BD4\u8F83\uFF0C\u5E76\u64CD\u4F5C\u5BF9\u5E94\u771F\u5B9EDOM\u66F4\u65B0
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">parentElm</span> \u65E7VNode\u5E8F\u5217\u5BF9\u5E94\u771F\u5B9EDOM\u7684\u7236\u8282\u70B9
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">[</span>VNode<span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">oldCh</span> \u65E7VNode\u5E8F\u5217
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">[</span>VNode<span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">newCh</span> \u65B0VNode\u5E8F\u5217
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">static</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span><span class="token parameter">parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> newCh</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76F8\u540C\u8282\u70B9\u5224\u65AD</span>
      <span class="token keyword">const</span> <span class="token function-variable function">isSameVNode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>sel <span class="token operator">===</span> b<span class="token punctuation">.</span>sel <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>key <span class="token operator">===</span> b<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
      <span class="token comment">// \u7A7A\u8282\u70B9\u5224\u65AD</span>
      <span class="token keyword">const</span> <span class="token function-variable function">isVoidVNode</span> <span class="token operator">=</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> v <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5B9A\u4E49\u65B0\u65E7\u5B50\u8282\u70B9\u7684\u5DE6\u6307\u9488 oldLeftIndex, newLeftIndex</span>
      <span class="token keyword">let</span> oldLI <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> newLI <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5B9A\u4E49\u65B0\u65E7\u8282\u70B9\u7684\u53F3\u6307\u9488 oldRightIndex, newRightIndex</span>
      <span class="token keyword">let</span> oldRI <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> newRI <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> keyMap <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>oldLI <span class="token operator">&lt;=</span> oldRI <span class="token operator">&amp;&amp;</span> newLI <span class="token operator">&lt;=</span> newRI<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isVoidVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> oldLI<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u7A7A\u8282\u70B9\u68C0\u67E5</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isVoidVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> oldRI<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isVoidVNode</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> newLI<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isVoidVNode</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newRI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> newRI<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token comment">// \u65B0\u65E7\u5E8F\u5217\u5DE6\u6307\u9488\u5BF9\u5E94\u7684VNode\u5224\u5B9A\u76F8\u7B49\uFF0C\u9012\u5F52\u7684\u8FDB\u884C\u66F4\u7CBE\u7EC6\u5316\u7684\u6BD4\u8F83\uFF0C\u5E76\u79FB\u52A8\u6307\u9488</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isSameVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          VDom<span class="token punctuation">.</span><span class="token function">patchVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldLI<span class="token operator">++</span><span class="token punctuation">;</span>
          newLI<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token comment">// \u65B0\u65E7\u5E8F\u5217\u53F3\u6307\u9488\u5BF9\u5E94\u7684VNode\u5224\u5B9A\u76F8\u7B49\uFF0C\u9012\u5F52\u8FDB\u884C\u66F4\u7CBE\u7EC6\u5316\u7684\u6BD4\u8F83\uFF0C\u5E76\u79FB\u52A8\u6307\u9488</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isSameVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newRI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          VDom<span class="token punctuation">.</span><span class="token function">patchVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newRI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldRI<span class="token operator">--</span><span class="token punctuation">;</span>
          newRI<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token comment">// \u65E7\u5E8F\u5217\u7684\u5DE6\u6307\u9488\u4E0E\u65B0\u5E8F\u5217\u7684\u53F3\u6307\u9488\u5BF9\u5E94VNode\u5224\u5B9A\u76F8\u7B49\uFF0C\u9012\u5F52\u8FDB\u884C\u66F4\u7CBE\u7EC6\u5316\u7684\u6BD4\u8F83\uFF0C</span>
        <span class="token comment">// \u540C\u65F6\u5728DOM\u4E2D\u5C06\u65E7VNode\u5BF9\u5E94\u7684\u8282\u70B9\u79FB\u52A8\u5230\u65E7\u5E8F\u5217\u53F3\u6307\u9488VNode\u5BF9\u5E94\u7684\u8282\u70B9\u540E\u65B9\uFF0C\u79FB\u52A8\u6307\u9488</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isSameVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newRI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          VDom<span class="token punctuation">.</span><span class="token function">patchVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newRI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldLI<span class="token operator">++</span><span class="token punctuation">;</span>
          newRI<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token comment">// \u65E7\u5E8F\u5217\u7684\u53F3\u6307\u9488\u4E0E\u65B0\u5E8F\u5217\u7684\u5DE6\u6307\u9488\u5BF9\u5E94VNode\u5224\u5B9A\u76F8\u7B49\uFF0C\u961F\u89C4\u8FDB\u884C\u66F4\u7CBE\u7EC6\u5316\u7684\u6BD4\u8F83\uFF0C</span>
        <span class="token comment">// \u540C\u65F6\u5728DOM\u4E2D\u5C06\u65E7VNode\u5BF9\u5E94\u7684\u8282\u70B9\u79FB\u52A8\u5230\u65E7\u5E8F\u5217\u5DE6\u6307\u9488VNode\u5BF9\u5E94\u7684\u8282\u70B9\u524D\u65B9\uFF0C\u79FB\u52A8\u6307\u9488</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isSameVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          VDom<span class="token punctuation">.</span><span class="token function">patchVNode</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>oldRI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldRI<span class="token operator">--</span><span class="token punctuation">;</span>
          newLI<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u5DE6\u53F3\u6307\u9488\u5747\u672A\u5339\u914D\u4E0A\uFF0C\u5728\u65E7\u5E8F\u5217\u5DE6\u53F3\u6307\u9488\u8303\u56F4\u5185\u901A\u8FC7key\u5BF9\u65B0\u5E8F\u5217\u5DE6\u6307\u9488\u5BF9\u5E94\u8282\u70B9\u8FDB\u884C\u67E5\u627E</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>keyMap<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u8F85\u52A9\u67E5\u627E\u5BF9\u8C61\u4E3A\u7A7A\u5219\uFF0C\u5148\u586B\u5145\u8F85\u52A9\u67E5\u627E\u5BF9\u8C61</span>
            keyMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> oldLI<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oldRI<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">const</span> key <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>key<span class="token punctuation">;</span>
              <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> keyMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span> <span class="token comment">// \u7B80\u5386\u65E7\u5E8F\u5217\u4E2D\u8303\u56F4\u5185key\u5230\u6307\u9488\u4F4D\u7F6E\u7D22\u5F15\u7684\u6620\u5C04</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">const</span> curOld <span class="token operator">=</span> keyMap<span class="token punctuation">[</span>newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u8FC7\u65B0\u5E8F\u5217\u5DE6\u6307\u9488\u7684key\u53D6\u5F97\u65E7\u5E8F\u5217\u4E2D\u76F8\u5E94key\u7684\u7D22\u5F15\u4F4D\u7F6E</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>curOld <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u8BE5\u4F4D\u7F6E\u4E0D\u5B58\u5728\u5219\u76F4\u63A5\u5C06\u65B0VNode\u63D2\u5165\u5230\u771F\u5B9EDOM\u5BF9\u5E94\u65E7\u5E8F\u5217VNode\u8282\u70B9\u4E4B\u524D\u7684\u4F4D\u7F6E\u4E0A</span>
            parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>VDom<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u8BE5\u4F4D\u7F6E\u5B58\u5728\uFF0C\u5219\u8BF4\u660E\u627E\u5230\u4E0E\u65B0\u5E8F\u5217\u5BF9\u5E94\u7684VNode\uFF0C\u7CBE\u7EC6\u5316\u6BD4\u8F83\u5E76\u79FB\u52A8\u8282\u70B9\uFF0C\u5C06\u65E7\u5E8F\u5217\u4E2D\u5BF9\u5E94\u4F4D\u7F6E\u7F6E\u4F4Dundefined\u4EE5\u4FBF\u540E\u7EED\u8DF3\u8FC7\u8BE5\u4F4D\u7F6E</span>
            <span class="token keyword">const</span> elmToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>curOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
            VDom<span class="token punctuation">.</span><span class="token function">patchVNode</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">,</span> newCh<span class="token punctuation">[</span>newLI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oldCh<span class="token punctuation">[</span>curOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
            parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>elmToMove<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          newLI<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u65B0VNode\u5E8F\u5217\u5DE6\u6307\u9488\u5904\u7406\u5B8C\u6BD5\uFF0C\u53F3\u79FB\u4E00\u4F4D</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>newLI <span class="token operator">&lt;=</span> newRI<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u65B0\u5E8F\u5217\u4E2D\u8FD8\u6709\u8282\u70B9\u5269\u4F59\uFF0C\u5219\u8BF4\u660E\u65E7\u5E8F\u5217\u5148\u904D\u5386\u5B8C\u6210\uFF0C\u5FAA\u73AF\u63D2\u5165\u5269\u4F59\u7684\u65B0\u8282\u70B9</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> newLI<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oldRI<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>VDom<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">[</span>oldLI<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token comment">// \u82E5\u662F\u65E7\u5E8F\u5217\u4E2D\u8FD8\u6709\u8282\u70B9\u5269\u4F59\uFF0C\u5219\u8BF4\u660E\u65B0\u5E8F\u5217\u5148\u904D\u5386\u5B8C\u6210\uFF0C\u5FAA\u73AF\u5220\u9664\u5269\u4F59\u7684\u65E7\u8282\u70B9</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>oldLI <span class="token operator">&lt;=</span> oldRI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> oldLI<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oldRI<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parentElm<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
      <span class="token comment">// TODO:\u5728\u6D4B\u8BD5\u7528\u4F8B\u4E2D\u9012\u5F52\u7684\u8C03\u7528VDom.h\u51FD\u6570\uFF0C\u6B64\u5904\u53EF\u4EE5\u7EE7\u7EED\u4F18\u5316</span>
      <span class="token comment">// VDom.h\u51FD\u6570\u76F4\u63A5\u5229\u7528tokens\u751F\u6210VNode\u5BF9\u8C61\uFF0C\u5047\u8BBE\u6587\u672C\u8282\u70B9\u548C\u5B50\u8282\u70B9\u4E0D\u540C\u65F6\u51FA\u73B0</span>
      <span class="token keyword">const</span> eVNode1 <span class="token operator">=</span> VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      VDom<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> eVNode1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// diff\u7B97\u6CD5\u5E76\u6E32\u67D3\u5230\u771F\u5B9EDOM\u4E0A</span>
      <span class="token keyword">const</span> eVNode2 <span class="token operator">=</span> VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;Q&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Q&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;T&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;Z&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        VDom<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;E&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        VDom<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span>eVNode1<span class="token punctuation">,</span> eVNode2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u89E6\u53D1\u4E8B\u4EF6\u5E76\u6E32\u67D3\u771F\u5B9EDOM</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">class</span> <span class="token class-name">VNode</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">sel<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text<span class="token punctuation">,</span> elm</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sel <span class="token operator">=</span> sel<span class="token punctuation">;</span> <span class="token comment">// \u6807\u7B7E\u540D</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span> <span class="token comment">// </span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> children<span class="token punctuation">;</span> <span class="token comment">// \u5B50\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text<span class="token punctuation">;</span> <span class="token comment">// \u6587\u672C\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>elm <span class="token operator">=</span> elm<span class="token punctuation">;</span> <span class="token comment">// \u865A\u62DF\u8282\u70B9\u5BF9\u5E94\u7684\u771F\u5B9E\u5143\u7D20</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> data<span class="token punctuation">.</span>key<span class="token punctuation">;</span> <span class="token comment">// key\u503C</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  VDom<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","vDom.html.vue"]]);export{k as default};
