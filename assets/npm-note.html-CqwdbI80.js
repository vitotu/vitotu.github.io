import{_ as n,c as s,o as a,d as e}from"./app-Dbya5h1F.js";const p={},l=e(`<h1 id="前端开发工具" tabindex="-1"><a class="header-anchor" href="#前端开发工具"><span>前端开发工具</span></a></h1><h2 id="包管理器" tabindex="-1"><a class="header-anchor" href="#包管理器"><span>包管理器</span></a></h2><p>在没有使用包管理器的情况下，要使用第三方库只能通过<code>&lt;script&gt;</code>的方式去引用依赖<br> 当依赖发生变化、需要更新升级、第三方库之间的相互依赖、版本管理等问题。会让这种方式变得难以维护，因此需要使用包管理器<br> 通常安装node环境之后，node自带npm作为包管理器，你也可以安装其他包管理器如:yarn,pnpm等<br> 下面将详细介绍这三种包管理器</p><p><a href="https://www.51cto.com/article/702067.html" target="_blank" rel="noopener noreferrer">参考文档1</a><br><a href="https://juejin.cn/post/6844903616109641736" target="_blank" rel="noopener noreferrer">参考文档2</a><br><a href="https://juejin.cn/post/7047556067877716004" target="_blank" rel="noopener noreferrer">参考文档3</a></p><h3 id="npm" tabindex="-1"><a class="header-anchor" href="#npm"><span>npm</span></a></h3><p>npm作为node的默认包管理器，同时也是yarn、pnpm的基础<br> npm使用语义版本控制思想设计的使用package.json文件管理依赖<br> 依赖记录如<code>&quot;dependencies&quot;: { &quot;包名&quot;: &quot;版本命名&quot;}</code></p><ul><li>版本命名格式x.y.z： <ul><li>x是大版本，更新可能会导致API不兼容；</li><li>y次版本，以兼容的方式添加新功能；</li><li>z补丁版本</li></ul></li><li>版本命名前缀： <ul><li>^大版本锁定</li><li>~锁定至次版本</li><li>其他符号(&gt;,&gt;=,&lt;,&lt;=,||,-)则对应其符号表意</li></ul></li></ul><p>通过版本命名的方式保证项目在不同的机器上安装一致的依赖</p><p>通常第三方库也有其依赖，并在对应包目录下的package.json中，因此项目依赖整体应该是个树状结构<br> 在npm v3及之前存在这些问题</p><ul><li>相同依赖在不同节点上无法共享，这会导致node_modules体积过大</li><li>嵌套层级过深会导致路径太长(windows不能处理过长的路径)</li><li>模块实例不能共享(内部单例等变量无法在不同的包中共享)</li></ul><p>因此npm v3之后的版本和yarn 将依赖树拍平(将嵌套依赖包提升至顶层便于共享)，安装时会不停的向上层node_modules查找，找到相同的包则不再重复安装，解决了包复用的问题，但扁平化带来了新的问题</p><ul><li>扁平化算法复杂度较高，耗时较长</li><li>项目中可以非法访问没有声明过的依赖包，即可以访问依赖树上2层甚至叶子节点上的包</li><li>依赖结构不确定性即，B、C都依赖于F，但是不同的版本，对于F的哪个版本提升至顶层共享存在不确定性</li></ul><p>yarn.lock和npm v5才出现的package-lock.json的出现保证产生确定的依赖结构。<br> 仍存在安全性和性能问题</p><p><a href="https://juejin.cn/post/6999829253395054623" target="_blank" rel="noopener noreferrer">npm install模块安装机制</a></p><h3 id="yarn" tabindex="-1"><a class="header-anchor" href="#yarn"><span>yarn</span></a></h3><p>yarn为了解决依赖共享等问题，也将依赖树拍平，同时引入了yarn.lock文件解决拍平带来的依赖结构不确定性问题；并且增加并行处理和离线安装模式提升运行速度</p><h3 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm"><span>pnpm</span></a></h3><p>pnpm在npm的基础上使用链接(linux下的链接、window下的快捷方式)构成依赖树解决了依赖共享问题。包及依赖包被扁平化到node_modules/.pnpm目录下，当依赖了一个包的不同版本时，仅对变更文件进行更新，不需要重复下载不变的部分<br> 对于.pnpm目录下包A的依赖也是同样处理，因此利用链接恢复的依赖树并不存在路径过长的问题<br> 同时因为不需要从扁平化恢复依赖树(向上级node_modules查询)，因此也没有扁平化带来的性能和安全问题</p><h2 id="npm使用笔记" tabindex="-1"><a class="header-anchor" href="#npm使用笔记"><span>npm使用笔记</span></a></h2><p><a href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer">npm官方文档</a>|<a href="https://docs.npmjs.com/cli/v8" target="_blank" rel="noopener noreferrer">使用命令文档</a> 下载安装node之后一般都会附带安装npm包管理器<br> 查看npm版本<br><code>npm -v</code><br> 查看npm配置信息<br><code>npm config list</code></p><h3 id="npm设置镜像源" tabindex="-1"><a class="header-anchor" href="#npm设置镜像源"><span>npm设置镜像源</span></a></h3><p>由于npm官方源<a href="https://registry.npmjs.org/" target="_blank" rel="noopener noreferrer">https://registry.npmjs.org/</a>在海外，没有搭梯子的直接使用npm安装一些依赖包会遇到访问速度慢的问题<br> 通过设置国内的镜像源加速依赖包的安装<br> 淘宝源地址：<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener noreferrer">https://registry.npm.taobao.org</a>，文档地址：<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm" target="_blank" rel="noopener noreferrer">https://developer.aliyun.com/mirror/NPM?from=tnpm</a><br> 全局配置镜像源<code>npm config set registry https://registry.npm.taobao.org</code><br> 临时使用镜像源<code>npm install &lt;包名&gt; --registry=https://registry.npm.taobao.org</code></p><p>推荐使用<a href="https://github.com/Pana/nrm" target="_blank" rel="noopener noreferrer">nrm</a>管理镜像源<code>npm install -g nrm</code><br> 可自由切换镜像源</p><h3 id="常用npm命令" tabindex="-1"><a class="header-anchor" href="#常用npm命令"><span>常用npm命令</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token parameter variable">-v</span> <span class="token comment"># 查看版本</span></span>
<span class="line"><span class="token function">npm</span> config list <span class="token comment"># 查看npm 配置信息</span></span>
<span class="line"></span>
<span class="line"><span class="token function">npm</span> init <span class="token comment"># 初始化项目，会生成package.json  </span></span>
<span class="line">  </span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev <span class="token operator">&lt;</span>package-name<span class="token operator">&gt;</span> <span class="token comment"># 项目内安装开发环境依赖包  </span></span>
<span class="line">  </span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> <span class="token operator">&lt;</span>package-name<span class="token operator">&gt;</span> <span class="token comment"># 项目内安装生产环境依赖包  </span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>package-name<span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>  </span>
<span class="line"><span class="token function">npm</span> root <span class="token parameter variable">-g</span> <span class="token comment"># 查看npm包全局安装路径  </span></span>
<span class="line">npx <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token comment"># 用于执行npm安装的提供了二进制可执行文件的包;npx 主要执行的是node_module/.bin/下的命令  </span></span>
<span class="line"><span class="token comment">## npx 还可运行执行url中的代码；指定node版本运行；  </span></span>
<span class="line"><span class="token function">npm</span> list <span class="token punctuation">[</span>-g<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>package-name<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>--depth -number<span class="token punctuation">]</span> <span class="token comment"># 查看已安装包(含依赖包)的最新版本，指定包名时则仅查看指定包的版本  </span></span>
<span class="line"><span class="token function">npm</span> view <span class="token operator">&lt;</span>package-name<span class="token operator">&gt;</span> versions <span class="token comment"># 查看指定包的所有版本  </span></span>
<span class="line"><span class="token function">npm</span> uninstall <span class="token punctuation">[</span>-S/-D/-g<span class="token punctuation">]</span> <span class="token operator">&lt;</span>package-name<span class="token operator">&gt;</span> <span class="token comment"># 卸载包，或并从package.json中移除引用  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提供了可执行命令的，且在项目间复用的包应该全局安装，其他则本地安装</p><h2 id="package-json文件中部分配置说明" tabindex="-1"><a class="header-anchor" href="#package-json文件中部分配置说明"><span>package.json文件中部分配置说明</span></a></h2><p>main 设置了应用程序的入口点<br> private 如果设置为 true，则可以防止应用程序/软件包被意外地发布到 npm<br> engines 设置了此软件包/应用程序在哪个版本的 Node.js 上运行<br> browserslist 用于告知要支持哪些浏览器（及其版本）</p><h2 id="package-lock-json" tabindex="-1"><a class="header-anchor" href="#package-lock-json"><span>package-lock.json</span></a></h2><p>该文件旨在跟踪被安装的每个软件包的确切版本，以便产品可以以相同的方式被 100％ 复制<br> package-lock.json 会固化当前安装的每个软件包的版本，当运行 npm install时，npm 会使用这些确切的版本。仅当使用npm update命令时才会更新</p><h2 id="pm2基础使用" tabindex="-1"><a class="header-anchor" href="#pm2基础使用"><span>pm2基础使用</span></a></h2><p>pm2是一个守护进程管理器，用于管理和保持应用程序在线 启动一个应用程序<code>pm2 start &lt;script&gt; --&lt;params&gt;</code></p><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pm2 restart <span class="token operator">&lt;</span>app-name/id<span class="token operator">&gt;</span></span>
<span class="line">pm2 reload <span class="token operator">&lt;</span>app-name/id<span class="token operator">&gt;</span></span>
<span class="line">pm2 stop <span class="token operator">&lt;</span>app-name/id<span class="token operator">&gt;</span></span>
<span class="line">pm2 delete <span class="token operator">&lt;</span>app-name/id<span class="token operator">&gt;</span></span>
<span class="line">pm2 list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noopener noreferrer">官方文档</a></p><h2 id="vscode-使用笔记" tabindex="-1"><a class="header-anchor" href="#vscode-使用笔记"><span>vscode 使用笔记</span></a></h2><h3 id="vscode打开过多页面too-many-open-files问题" tabindex="-1"><a class="header-anchor" href="#vscode打开过多页面too-many-open-files问题"><span>vscode打开过多页面too many open files问题</span></a></h3><p>俗称EMFILE，问题出现底层原因不明<br> 解决方案有：<br> 1、减少vscode页面<br> 2、设置系统的文件限制</p><ul><li>措施a<br> 编辑文件<br><code>vim /etc/sysctl.conf</code><br> 增加以下内容</li></ul><div class="language-vim line-numbers-mode" data-highlighter="prismjs" data-ext="vim" data-title="vim"><pre><code><span class="line"><span class="token builtin">fs</span><span class="token operator">.</span>inotify<span class="token operator">.</span>max_user_watches <span class="token operator">=</span> <span class="token number">2097152</span>  </span>
<span class="line"><span class="token builtin">fs</span><span class="token operator">.</span>inotify<span class="token operator">.</span>max_user_instances <span class="token operator">=</span> <span class="token number">2097152</span>  </span>
<span class="line"><span class="token builtin">fs</span><span class="token operator">.</span><span class="token keyword">file</span><span class="token operator">-</span>max <span class="token operator">=</span> <span class="token number">409600</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>措施b<br> 查看限制：<br><code>ulimit -n</code><br> 修改文件： /etc/security/limits.conf<br> 增加如下内容</li></ul><div class="language-vim line-numbers-mode" data-highlighter="prismjs" data-ext="vim" data-title="vim"><pre><code><span class="line">soft nofile <span class="token number">10000</span>  </span>
<span class="line">hard nofile <span class="token number">10000</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://www.imakewebsites.ca/posts/2018/03/06/node.js-too-many-open-files-and-ulimit/" target="_blank" rel="noopener noreferrer">参考文档</a></p><p>3、使用root用户打开vscode<br> 4、打开vscode设置，搜索watch，设置Watcher Exclude选项，排除不需要监听变化的目录</p><p>！！！ 该问题还没有摸索出最终解决方案</p><h3 id="插件" tabindex="-1"><a class="header-anchor" href="#插件"><span>插件</span></a></h3><ul><li>代码规范插件 <ul><li>sonarLint 规范代码插件</li><li>ESlint 规范代码插件</li></ul></li><li>前端开发推荐的插件 <ul><li>Auto Close Tag</li><li>Auto Rename Tag</li><li>Bracket Pair Colorizer</li><li>change-case 快速修改代码风格，小驼峰、大驼峰、蛇形等</li><li>Code Runner 快速代码运行插件，支持多种语言</li><li>Code Spell Checker 单词拼写检查</li><li>Dracula Official 主题皮肤</li><li>Git Blame 显示代码修改记录，当前行，上次是由谁修改的</li><li>Git Graph 以gitflow图的形式展示Git提交记录，并提供cherry-pick等图形化管理操作</li><li>indent-rainbow 彩虹缩进，对不同级别的缩进渲染不同的颜色</li><li>JavaScript (ES6) code snippets 对js、ts，html，vue代码补全及提示</li><li>koroFileHeader 文件头部注释，函数注释快速生成</li><li>Live Server 简易资源服务器，快速提供静态资源服务，可用来调试html</li><li>Markdown All in One 文档插件，预览markdown文档</li><li>Node.js Modules Intellisense 只能模块导入插件</li><li>Partial Diff 快速比较文件或选定文本之间的不同</li><li>REST Client 请求管理测试工具，可用于测试接口</li><li>Todo Tree 管理TODO，高亮</li><li>Vetur 高亮VUE语法</li><li>Visual Studio IntelliCode 智能代码补全，支持多种语言</li><li>Vue 3 Snippets 补全，智能提示VUE语法</li></ul></li></ul><h3 id="软件配置" tabindex="-1"><a class="header-anchor" href="#软件配置"><span>软件配置</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;editor.tabSize&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.renderWhitespace&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.multiCursorModifier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ctrlCmd&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.wordWrap&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wordWrapColumn&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.rulers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.wordWrapColumn&quot;</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.minimap.enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.fontSize&quot;</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.suggestSelection&quot;</span><span class="token operator">:</span> <span class="token string">&quot;first&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;bracket-pair-colorizer-2.depreciation-notice&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;bracketPairColorizer.depreciation-notice&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;workbench.colorTheme&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Dracula Soft&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;vsintellicode.modify.editor.suggestSelection&quot;</span><span class="token operator">:</span> <span class="token string">&quot;automaticallyOverrodeDefaultValue&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;window.openFilesInNewWindow&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;fileheader.configObj&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;supportAutoLanguage&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;autoAdd&quot;</span><span class="token operator">:</span><span class="token boolean">false</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;vetur.ignoreProjectWarning&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;liveServer.settings.donotShowInfoMsg&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;extensions.autoCheckUpdates&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;update.mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;manual&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gitlens.blame.ignoreWhitespace&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gitlens.blame.avatars&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;gitlens.blame.heatmap.enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;markdown.preview.doubleClickToSwitchToEditor&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),t=[l];function o(i,r){return a(),s("div",null,t)}const d=n(p,[["render",o],["__file","npm-note.html.vue"]]),u=JSON.parse('{"path":"/devToolsNote/npm-note.html","title":"前端开发工具","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"包管理器","slug":"包管理器","link":"#包管理器","children":[{"level":3,"title":"npm","slug":"npm","link":"#npm","children":[]},{"level":3,"title":"yarn","slug":"yarn","link":"#yarn","children":[]},{"level":3,"title":"pnpm","slug":"pnpm","link":"#pnpm","children":[]}]},{"level":2,"title":"npm使用笔记","slug":"npm使用笔记","link":"#npm使用笔记","children":[{"level":3,"title":"npm设置镜像源","slug":"npm设置镜像源","link":"#npm设置镜像源","children":[]},{"level":3,"title":"常用npm命令","slug":"常用npm命令","link":"#常用npm命令","children":[]}]},{"level":2,"title":"package.json文件中部分配置说明","slug":"package-json文件中部分配置说明","link":"#package-json文件中部分配置说明","children":[]},{"level":2,"title":"package-lock.json","slug":"package-lock-json","link":"#package-lock-json","children":[]},{"level":2,"title":"pm2基础使用","slug":"pm2基础使用","link":"#pm2基础使用","children":[{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]}]},{"level":2,"title":"vscode 使用笔记","slug":"vscode-使用笔记","link":"#vscode-使用笔记","children":[{"level":3,"title":"vscode打开过多页面too many open files问题","slug":"vscode打开过多页面too-many-open-files问题","link":"#vscode打开过多页面too-many-open-files问题","children":[]},{"level":3,"title":"插件","slug":"插件","link":"#插件","children":[]},{"level":3,"title":"软件配置","slug":"软件配置","link":"#软件配置","children":[]}]}],"git":{"updatedTime":1665760294000,"contributors":[{"name":"vito","email":"vitotu@qq.com","commits":4}]},"filePathRelative":"devToolsNote/npm-note.md"}');export{d as comp,u as data};
