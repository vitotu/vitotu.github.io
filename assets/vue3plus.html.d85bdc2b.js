import{_ as t,r as e,o,c,a as n,b as s,d as l,e as a}from"./app.fefaea33.js";const i={},u=a(`<h1 id="vue\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u8BFB\u4E66\u7B14\u8BB0" tabindex="-1"><a class="header-anchor" href="#vue\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u8BFB\u4E66\u7B14\u8BB0" aria-hidden="true">#</a> vue\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u8BFB\u4E66\u7B14\u8BB0</h1><p>\u8BE5\u4E66\u4EE5vue3\u4E3A\u57FA\u7840\uFF0C\u8BB2\u8FF0vue\u6846\u67B6\u7684\u5E95\u5C42\u5B9E\u73B0\u539F\u7406</p><h2 id="\u6846\u67B6\u8BBE\u8BA1\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6846\u67B6\u8BBE\u8BA1\u6982\u5FF5" aria-hidden="true">#</a> \u6846\u67B6\u8BBE\u8BA1\u6982\u5FF5</h2><h3 id="\u6743\u8861\u7684\u827A\u672F" tabindex="-1"><a class="header-anchor" href="#\u6743\u8861\u7684\u827A\u672F" aria-hidden="true">#</a> \u6743\u8861\u7684\u827A\u672F</h3><p>\u89C6\u56FE\u5C42\u6846\u67B6\u901A\u5E38\u5206\u4E3A\u547D\u4EE4\u5F0F\u548C\u58F0\u660E\u5F0F\uFF1B\u547D\u4EE4\u5F0F\u5982jquery\uFF0C\u901A\u8FC7js\u64CD\u4F5Cdom\uFF0C\u58F0\u660E\u5F0F\u5982vue.js\u7684template\u6A21\u677F\uFF0C\u76F4\u63A5\u58F0\u660E\u89C6\u56FE\u3002<br> vue.js\u5E95\u5C42\u5B9E\u73B0\u662F\u547D\u4EE4\u5F0F\u7684\uFF0C\u66B4\u9732\u7ED9\u5F00\u53D1\u8005\u7684\u5219\u662F\u58F0\u660E\u5F0F\u3002</p><p>\u58F0\u660E\u5F0F\u7684\u4EE3\u7801\u6027\u80FD\u4E0D\u4F18\u4E8E\u547D\u4EE4\u5F0F\u7684\u4EE3\u7801\u6027\u80FD\uFF0C\u4F46\u53EF\u7EF4\u62A4\u6027\u8981\u9AD8\u4E8E\u547D\u4EE4\u5F0F\u7684\u4EE3\u7801<br> \u58F0\u660E\u5F0F\u7684\u4EE3\u7801\u66F4\u65B0\u6027\u80FD\u6D88\u8017=\u627E\u51FA\u5DEE\u5F02\u7684\u6027\u80FD\u6D88\u8017+\u76F4\u63A5\u4FEE\u6539\u7684\u6027\u80FD\u6D88\u8017\uFF0C\u800C\u865A\u62DFDOM\u7684\u662F\u672A\u6765\u6700\u5C0F\u5316\u627E\u51FA\u5DEE\u5F02\u7684\u6027\u80FD\u6D88\u8017<br> \u56E0\u6B64\u865A\u62DFDOM\u7684\u6027\u80FD\u7406\u8BBA\u4E0A\u4E0D\u53EF\u80FD\u6BD4js\u539F\u751FDOM\u64CD\u4F5C\u6548\u7387\u66F4\u9AD8\uFF0C\u5373\u7406\u8BBA\u4E0A\u539F\u751FDOM\u64CD\u4F5C\u6027\u80FD\u66F4\u597D\uFF0C\u4F46\u8981\u6C42\u5199\u51FA\u6781\u81F4\u4F18\u5316\u7684\u547D\u4EE4\u5F0F\u4EE3\u7801<br> \u800C\u865A\u62DFDOM\u5728\u5B9E\u8DF5\u4E2D\uFF0C\u5982\u9891\u7E41\u66F4\u65B0\u5927\u91CFDOM\u7684\u64CD\u4F5C\u7B49\u573A\u666F\u4E0B\uFF0C\u6027\u80FD\u53EF\u80FD\u4F1A\u4F18\u4E8E\u539F\u751FDOM\u64CD\u4F5C</p><p>\u56E0\u6B64vue\u6846\u67B6\u8BBE\u8BA1\u6743\u8861\u4E86\u6027\u80FD\u548C\u5F00\u53D1\u6548\u7387(\u4E0A\u624B\u96BE\u6613\u7A0B\u5EA6\uFF0C\u53EF\u7EF4\u62A4\u6027)\u91C7\u7528\u4E86\u58F0\u660E\u5F0F\u7684\u89C6\u56FE</p><div class="custom-container tip"><p class="custom-container-title">\u6846\u67B6\u7684\u4E00\u79CD\u5206\u7C7B\u65B9\u5F0F</p><p>\u8FD0\u884C\u65F6\uFF1A\u62FF\u5230\u5F00\u53D1\u8005\u8F93\u5165\u7684\u4EE3\u7801\u4E0D\u52A0\u989D\u5916\u7684\u5904\u7406\uFF0C\u7531\u6E32\u67D3\u51FD\u6570\u8F93\u51FA<br> \u7F16\u8BD1\u65F6\uFF1A\u62FF\u5230\u5F00\u53D1\u8005\u7684\u4EE3\u7801\uFF0C\u5206\u6790\u5185\u5BB9\uFF0C\u52A0\u5DE5\u8FC7\u540E\u63D0\u4F9B\u7ED9\u6E32\u67D3\u51FD\u6570\uFF0C\u7531\u6E32\u67D3\u51FD\u6570\u8F93\u51FA<br> \u8FD0\u884C\u65F6\u7684\u6846\u67B6\u66F4\u4E3A\u7075\u6D3B\uFF0C\u7F16\u8BD1\u65F6\u7684\u6846\u67B6\u6027\u80FD\u4F1A\u66F4\u597D\uFF0Cvue.js\u4E3A\u8FD0\u884C\u65F6+\u7F16\u8BD1\u65F6\u7684\u67B6\u6784\uFF0C\u5728\u4FDD\u8BC1\u7075\u6D3B\u6027\u7684\u57FA\u7840\u4E0A\u5C3D\u53EF\u80FD\u7684\u53BB\u4F18\u5316</p></div><h3 id="\u6846\u67B6\u8BBE\u8BA1\u7684\u6838\u5FC3\u8981\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6846\u67B6\u8BBE\u8BA1\u7684\u6838\u5FC3\u8981\u7D20" aria-hidden="true">#</a> \u6846\u67B6\u8BBE\u8BA1\u7684\u6838\u5FC3\u8981\u7D20</h3><p>vue3\u9884\u5B9A\u4E49\u4E86__DEV__\u53D8\u91CF\u5B9E\u73B0\u4EC5\u5728\u5F00\u53D1\u73AF\u5883\u6253\u5370\u544A\u8B66\u4FE1\u606F\uFF0C\u5728\u751F\u4EA7\u73AF\u5883\u4E0D\u5305\u542B\u8FD9\u4E9B\u4EE3\u7801\uFF0C\u51CF\u5C0F\u4EE3\u7801\u4F53\u79EF</p><p>vue3\u6846\u67B6\u5728\u8BBE\u8BA1\u65F6\u8003\u8651\u4E86\u4EE5\u4E0B\u8981\u7D20\uFF1A \u5728\u5F00\u53D1\u73AF\u5883\u63D0\u4F9B\u53CB\u597D\u7684\u8B66\u544A\u4FE1\u606F<br> \u5408\u7406\u5229\u7528Tree-Shaking\u673A\u5236\uFF0C\u914D\u7F6E\u6784\u5EFA\u5DE5\u5177\u63A7\u5236\u751F\u4EA7\u73AF\u5883\u6253\u5305\u5927\u5C0F<br> \u8F93\u51FA\u591A\u79CD\u4E0D\u540C\u683C\u5F0F\u7684\u6253\u5305\u8D44\u6E90<br> \u5BF9\u4E8E\u7075\u6D3B\u6027\u4E0E\u517C\u5BB9\u6027\u63D0\u4F9B\u4E0D\u540C\u7684\u89E3\u51B3\u4E14\u4E0D\u4E92\u65A5\u7684\u89E3\u51B3\u65B9\u6848</p><h3 id="vue3\u7684\u8BBE\u8BA1\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#vue3\u7684\u8BBE\u8BA1\u601D\u8DEF" aria-hidden="true">#</a> Vue3\u7684\u8BBE\u8BA1\u601D\u8DEF</h3><p>\u58F0\u660E\u5F0Fui\uFF0C\u5373\u4EE5\u7C7B\u4F3Chtml\u7684\u6A21\u677F\uFF0C\u58F0\u660E\u5F0F\u7684\u63CF\u8FF0UI\u754C\u9762\u7ED3\u6784(\u58F0\u660E\u5F0F\u7684\u597D\u5904\u662F\u76F4\u63A5\u63CF\u8FF0\u7ED3\u679C\uFF0C\u65E0\u9700\u5173\u6CE8\u8FC7\u7A0B)<br> \u968F\u540E\u901A\u8FC7\u7F16\u8BD1\u5668\u5C06\u6A21\u677F\u7F16\u8BD1\u751F\u6210\u6E32\u67D3\u51FD\u6570<br> \u6700\u540E\u901A\u8FC7\u6E32\u67D3\u51FD\u6570\u8FD4\u56DE\u7684js\u5BF9\u8C61(\u4EE5js\u5BF9\u8C61\u5F62\u5F0F\u63CF\u8FF0UI\u754C\u9762\uFF0C\u5373\u865A\u62DFDOM)<br> \u5C06\u865A\u62DFDOM\u901A\u8FC7\u6E32\u67D3\u5668\u6E32\u67D3\u4E3A\u771F\u5B9EDOM</p><p>\u6E32\u67D3\u5668\u901A\u8FC7<code>document.createElement</code>\u7B49API\u521B\u5EFA\u865A\u62DFDOM\u63CF\u8FF0\u7684\u5143\u7D20\uFF0C\u4ECE\u865A\u62DFDOM\u4E0A\u53D6\u51FAprops\u3001\u4E8B\u4EF6\uFF0C\u4E3A\u65B0\u521B\u5EFA\u7684\u771F\u5B9EDOM\u7ED1\u5B9A\u5C5E\u6027\u53CA\u4E8B\u4EF6\uFF0C\u968F\u540E\u9012\u5F52\u7684\u5904\u7406children\u8282\u70B9\uFF0C\u5904\u7406\u5B8C\u6BD5\u540E\u83B7\u5F97\u7684\u771F\u5B9EDOM\u6811\uFF0C\u4F7F\u7528<code>container.appendChild(el)</code>\u7684\u65B9\u5F0F\u6302\u8F7D\u5230container\u5BB9\u5668\u4E0A\uFF0C\u81F3\u6B64\u5B8C\u6210\u4E86\u521D\u59CB\u6E32\u67D3\u8FC7\u7A0B<br> \u5728\u66F4\u65B0\u9636\u6BB5\uFF0C\u6E32\u67D3\u5668\u4F1A\u901A\u8FC7diff\u7B97\u6CD5\u627E\u5230\u53D8\u66F4\u70B9\uFF0C\u5E76\u53EA\u66F4\u65B0\u9700\u8981\u66F4\u65B0\u7684\u5185\u5BB9</p><p>vue\u4E2D\u7EC4\u4EF6\u7684\u672C\u8D28\u5C31\u662F\u4E00\u7EC4\u865A\u62DFDOM\u5143\u7D20\u7684\u5C01\u88C5\uFF0C\u82E5\u7528\u51FD\u6570\u6765\u63CF\u8FF0\uFF0C\u5373\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E3A\u7EC4\u4EF6\u6E32\u67D3\u7684\u5185\u5BB9\uFF0C\u53EF\u4EE5\u662F\u865A\u62DFDOM\u7684\u5F62\u5F0F<br> \u865A\u62DFDOM\u63CF\u8FF0\u7EC4\u4EF6\uFF0C\u901A\u8FC7tag\u5C5E\u6027\u6765\u533A\u5206\u5176\u4E0E\u666E\u901ADOM\uFF0C\u5BF9\u4E8E\u51FD\u6570\u5F0F\u7EC4\u4EF6tag\u662F\u51FD\u6570\uFF0C\u5BF9\u4E8E\u5BF9\u8C61\u578B\u7EC4\u4EF6tag\u662F\u5305\u542Brender\u51FD\u6570\u7684\u5BF9\u8C61\uFF0C\u4EC5\u9700\u5728\u6E32\u67D3\u5668\u4E2D\u8C03\u7528\u5BF9\u5E94\u7684\u51FD\u6570\u5373\u53EF\u53D6\u5F97\u865A\u62DFDOM</p><h2 id="\u54CD\u5E94\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u7CFB\u7EDF" aria-hidden="true">#</a> \u54CD\u5E94\u7CFB\u7EDF</h2><h3 id="\u54CD\u5E94\u7CFB\u7EDF\u7684\u4F5C\u7528\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u7CFB\u7EDF\u7684\u4F5C\u7528\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> \u54CD\u5E94\u7CFB\u7EDF\u7684\u4F5C\u7528\u4E0E\u5B9E\u73B0</h3><p>\u526F\u4F5C\u7528\u51FD\u6570\uFF1A\u51FD\u6570\u6267\u884C\u4F1A\u76F4\u63A5\u6216\u95F4\u63A5\u5F71\u54CD\u5176\u4ED6\u51FD\u6570\u7684\u6267\u884C\uFF0C\u8FD9\u79CD\u51FD\u6570\u79F0\u4E3A\u526F\u4F5C\u7528\u51FD\u6570 \u54CD\u5E94\u5F0F\u6570\u636E\uFF1A\u5373\u5F53\u54CD\u5E94\u5F0F\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u81EA\u52A8\u91CD\u65B0\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570</p><p>vue3\u901A\u8FC7<code>Object.defineProperty</code>\u6216<code>Proxy</code>API\u5728\u6570\u636E\u7684\u8BFB\u53D6\u73AF\u8282\u6536\u96C6\u526F\u4F5C\u7528\u51FD\u6570effect\u5B58\u50A8\u5230\u201C\u6876\u201D\u4E2D\uFF0C \u5728\u6570\u636E\u7684\u5199\u5165(\u4FEE\u6539)\u9636\u6BB5\u4ECE\u6876\u4E2D\u53D6\u51FA\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5E76\u6267\u884C</p><p>vue3\u5B9A\u4E49\u4E86effect\u51FD\u6570\u7528\u4E8E\u6CE8\u518C\u4F5C\u7528\u7528\u51FD\u6570\uFF0C\u901A\u8FC7\u4F20\u5165\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5728effect\u5185\u90E8\u6267\u884C\uFF0C\u5E76\u901A\u8FC7\u5168\u5C40\u53D8\u91CF\u4E34\u65F6\u5B58\u50A8\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u65B9\u4FBF\u54CD\u5E94\u5F0F\u6570\u636E\u7684getter\u6536\u96C6\u526F\u4F5C\u7528\u51FD\u6570<br> \u5BF9\u4E8E\u6536\u96C6\u526F\u4F5C\u7528\u51FD\u6570\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u9700\u8981\u80FD\u5EFA\u7ACB\u8BFB\u53D6\u5B57\u6BB5\u4E0E\u526F\u4F5C\u7528\u51FD\u6570\u6570\u7EC4\uFF08\u4F7F\u7528set\u5B9E\u73B0\uFF0C\u65B9\u4FBF\u53BB\u91CD\uFF09\u4E4B\u95F4\u7684\u8054\u7CFB</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> target<span class="token punctuation">[</span>kay<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">{</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newVal
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>activeEffect<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">let</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token comment">// bucket\u4E2D\u5B58\u50A8\u6240\u6709\u6536\u96C6\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> bucket<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">(</span>depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> deps <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// \u518D\u6839\u636Ekey\u53D6\u51FA\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u51FD\u96C6</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>deps<span class="token punctuation">)</span> depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span>deps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  deps<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activeEffect<span class="token punctuation">)</span> <span class="token comment">// \u6536\u96C6\u526F\u4F5C\u7528\u51FD\u6570</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> effects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  
<span class="token punctuation">}</span>

<span class="token keyword">let</span> activeEffect
<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// effect\u6CE8\u518C\u51FD\u6570\u4E2D\u8BBE\u7F6E\u5168\u5C40\u53D8\u91CFactivateEffect\uFF0C\u65B9\u4FBFgetter\u6536\u96C6</span>
  activeEffect <span class="token operator">=</span> fn <span class="token comment">// \u7B80\u5355\u5B9E\u73B0\uFF0C\u624B\u7EED\u5C06\u5B8C\u5584\u6CE8\u518C\u51FD\u6570\u7684\u529F\u80FD</span>
  <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5206\u652F\u5207\u6362\u4E0Ecleanup</li></ul><p>\u5F53\u526F\u4F5C\u7528\u51FD\u6570\u4E2D\u5B58\u5728\u6761\u4EF6\u5206\u652F\uFF0C\u4E14\u6761\u4EF6\u5206\u652F\u4F9D\u8D56\u4E8E\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u5F53\u8FDB\u5165a\u5206\u652F\u65F6\uFF0C\u4E0D\u5E0C\u671Bb\u5206\u652F\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u53D8\u5316\u65F6\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u53CD\u4E4B\u4EA6\u7136<br> \u56E0\u6B64\u9700\u8981\u5728\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C\u65F6\u5C06\u5176\u4ECE\u4E0E\u4E4B\u5173\u8054\u7684\u6240\u6709\u4F9D\u8D56\u96C6\u5408\u4E2D\u5220\u9664\uFF0C\u6267\u884C\u5B8C\u6BD5\u540E\u4F1A\u91CD\u65B0\u5EFA\u7ACB\u8054\u7CFB\uFF0C\u4F46\u5728\u65B0\u7684\u8054\u7CFB\u4E2D\u4E0D\u4F1A\u5305\u542B\u9057\u7559\u7684\u526F\u4F5C\u7528\u51FD\u6570<br> \u4E3A\u4E86\u5B9E\u73B0\u8FD9\u4E00\u70B9\uFF0C\u5728 track \u51FD\u6570\u4E2D\u6211\u4EEC\u5C06\u5F53\u524D\u6267\u884C\u7684\u526F\u4F5C\u7528\u51FD\u6570activeEffect \u6DFB\u52A0\u5230\u4F9D\u8D56\u96C6\u5408 deps \u4E2D, \u4E5F\u628Adeps\u6DFB\u52A0\u5230activeEffect.deps \u6570\u7EC4\u4E2D,\u8FD9\u6837\u5C31\u5B8C\u6210\u4E86\u5BF9\u4F9D\u8D56\u96C6\u5408\u7684\u6536\u96C6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> activateEffect
<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">effectFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">cleanup</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    activateEffect <span class="token operator">=</span> effectFn
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  effectFn<span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> effectFn<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> deps <span class="token operator">=</span> effectFn<span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span> deps<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  effectFn<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  activateEffect<span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span> <span class="token comment">// ... \u7701\u7565\u5176\u4ED6\u4EE3\u7801\uFF0C\u672B\u5C3E\u65B0\u589E\u4EE5\u4E0B\u4EE3\u7801</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u5220\u9664\u6B64\u884C effects &amp;&amp; effects.forEach(fn =&gt; fn())</span>
  <span class="token keyword">const</span> effectsToRun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span> <span class="token comment">// \u672B\u5C3E\u65B0\u589E\u4EE5\u4E0B\u4E24\u884C</span>
  effectsToRun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5D4C\u5957\u7684effect\u4E0Eeffect\u6808</li></ul><p>\u7531\u4E8E\u5D4C\u5957\u7684\u7528\u4E8E\u4E34\u65F6\u5B58\u50A8effect\u7684\u5168\u5C40\u53D8\u91CFactiveEffect\u53EA\u6709\u4E00\u4E2A\uFF0C\u5F53\u51FA\u73B0effect\u5D4C\u5957\u8C03\u7528\u65F6\uFF0C\u4F1A\u51FA\u73B0\u5185\u5C42\u51FD\u6570\u8986\u76D6\u5916\u5C42\u7684\u60C5\u51B5\uFF0C\u5BFC\u81F4\u526F\u4F5C\u7528\u51FD\u6570\u6536\u96C6\u53CA\u8C03\u7528\u51FA\u73B0\u5F02\u5E38\uFF0C\u56E0\u6B64\u9700\u8981\u5F15\u5165\u4E00\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u6808effectStack\uFF0C\u5728\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C\u65F6\uFF0C\u5C06\u5F53\u524D\u526F\u4F5C\u7528\u51FD\u6570\u538B\u5165\u6808\u4E2D\uFF0C\u6267\u884C\u5B8C\u6BD5\u540E\u5F39\u51FA\uFF0C\u8FD9\u6837\u5C31\u907F\u514D\u4E86\u526F\u4F5C\u7528\u51FD\u6570\u5D4C\u5957\u5E26\u6765\u7684\u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> effectStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u65B0\u589E\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u589E\u5982\u4E0B\u4EE3\u7801</span>
    <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
    effectStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    effectStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    activateEffect <span class="token operator">=</span> effectStack<span class="token punctuation">[</span>effectStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8C03\u5EA6\u6267\u884C</li></ul><p>\u53E6\u5916\u4E3A\u4E86\u66F4\u7075\u6D3B\u7684\u8C03\u7528\u526F\u4F5C\u7528\u51FD\u6570\uFF0Ceffect\u51FD\u6570\u652F\u6301\u4F20\u5165options\u5BF9\u8C61\uFF0C\u901A\u8FC7\u5176\u4E2D\u7684scheduler\u9009\u9879\uFF0C\u4F20\u9012\u7528\u6237\u7684\u8C03\u5EA6\u51FD\u6570\uFF0C\u5728trigger\u9636\u6BB5\uFF0C\u82E5\u53D1\u73B0\u6709scheduler\u9009\u9879\u5219\uFF0C\u5C06\u526F\u4F5C\u7528\u51FD\u6570\u4F20\u9012\u7ED9scheduler\u51FD\u6570\uFF0C\u5C06\u6267\u884C\u6743\u4EA4\u7531\u8C03\u5EA6\u5668\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  effectFn<span class="token punctuation">.</span>options <span class="token operator">=</span> options <span class="token comment">// \u5C06options\u6302\u8F7D\u5230effectFn\u4E0A</span>
  effectFn<span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> effects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token comment">// \u9632\u6B62\u65E0\u9650\u9012\u5F52</span>
  <span class="token keyword">const</span> effectsToRun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  effects <span class="token operator">&amp;&amp;</span> effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activateEffect<span class="token punctuation">)</span> effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u82E5options\u4E2D\u4F20\u5165\u4E86scheduler\u8C03\u5EA6\u51FD\u6570\uFF0C\u5219\u4EA4\u51FA\u6267\u884C\u6743\u7ED9\u7528\u6237</span>
  effectsToRun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span>scheduler<span class="token punctuation">)</span><span class="token punctuation">{</span>
      effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">scheduler</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8BA1\u7B97\u5C5E\u6027 computed \u4E0E lazy</li></ul><p>\u8BA1\u7B97\u5C5E\u6027\u5177\u6709\u61D2\u8BA1\u7B97\uFF0C \u7F13\u5B58\u7ED3\u679C\u7B49\u7279\u6027\uFF0C\u5176\u901A\u8FC7\u5728effect\u5165\u53C2\u7684options\u9009\u9879\u4E2D\u63D0\u4F9Blazy\u5C5E\u6027\uFF0C\u5728effect\u51FD\u6570\u5185\u90E8\uFF0C\u5C06\u526F\u4F5C\u7528\u51FD\u6570\u7684\u6267\u884C\u903B\u8F91\u5B9A\u4E49effectFn\u51FD\u6570\u4E2D\uFF0C\u6863options.lazy\u4E3Afalse\u65F6\u6267\u884CeffectFn\uFF0C\u5426\u5219\u8FD4\u56DEeffectFn\u5C06\u6267\u884C\u5168\u4EA4\u7ED9\u7528\u6237<br> \u5728computed\u4E2D\u6DFB\u52A0value\u7F13\u5B58\u4E0A\u6B21\u8BA1\u7B97\u7ED3\u679C\uFF0C\u8C03\u7528effect\u51FD\u6570\uFF0C\u5E76\u4F20\u5165lazy\u53C2\u6570\u83B7\u5F97\u8FD4\u56DE\u7684effectFn\uFF0C\u5F53\u7528\u6237\u8BBF\u95EEcomputed\u5C5E\u6027\u65F6\uFF0C\u6839\u636E\u662F\u5426\u4E3A\u810F\u6570\u636E\u6807\u5FD7\u91CD\u65B0\u8BA1\u7B97\u6216\u8FD4\u56DE\u7F13\u5B58<br> \u5F53\u8BA1\u7B97\u5C5E\u6027\u53D1\u751F\u5D4C\u5957\u65F6\uFF0C\u4F1A\u5BFC\u81F4\u5916\u5C42effect\u4E0D\u4F1A\u88AB\u5185\u5C42\u54CD\u5E94\u5F0F\u6570\u636E\u6536\u96C6\uFF0C\u56E0\u6B64\u5F53\u8BFB\u53D6\u8BA1\u7B97\u5C5E\u6027\u65F6\u9700\u8981\u624B\u52A8\u8C03\u7528track\uFF0C\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\u624B\u52A8trigger\u89E6\u53D1\u54CD\u5E94</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token comment">// \u7F13\u5B58\u4E0A\u6B21\u8BA1\u7B97\u7684\u503C</span>
  <span class="token keyword">let</span> dirty <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u662F\u5426\u9700\u8981\u91CD\u65B0\u8BA1\u7B97flag</span>
  <span class="token keyword">const</span> effectFn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">// effect\u51FD\u6570\u8FD4\u56DE\u5BF9getter\u51FD\u6570\u5305\u88C5\u540E\u7684\u51FD\u6570</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>dirty<span class="token punctuation">)</span><span class="token punctuation">{</span>
        dirty <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u6BCF\u6B21\u6267\u884C\u91CD\u7F6Edirty\u4E3Atrue\uFF0C\u907F\u514D\u6570\u636E\u4E0D\u53D8\u65F6\u7684\u91CD\u590D\u8BA1\u7B97</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u624B\u52A8\u89E6\u53D1\uFF0C\u89E3\u51B3computed\u5D4C\u5957\u95EE\u9898</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>dirty<span class="token punctuation">)</span><span class="token punctuation">{</span>
        value <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u5305\u88C5\u540E\u7684\u51FD\u6570\u83B7\u53D6getter\u51FD\u6570\u6267\u884C\u7684\u8FD4\u56DE\u503C</span>
        dirty <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u91CD\u7F6Edirty</span>
      <span class="token punctuation">}</span>
      <span class="token function">track</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u624B\u52A8\u8FFD\u8E2A\uFF0C\u89E3\u51B3computed\u5D4C\u5957\u95EE\u9898</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">effectFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5B58\u50A8\u6267\u884C\u7ED3\u679C</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">return</span> res <span class="token comment">// \u8FD4\u56DE\u6267\u884C\u7ED3\u679C</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> effectFn
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>watch\u7684\u5B9E\u73B0\u539F\u7406</li></ul><p>\u5229\u7528scheduler\u9009\u9879\u89E6\u53D1\u7528\u6237\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570\uFF0C<br> \u5B9A\u4E49traverse\u51FD\u6570\uFF0C\u517C\u5BB9\u5BF9\u8C61\u7C7B\u578B\u7684\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u8BA9\u5BF9\u8C61\u7684\u6BCF\u4E2A\u5C5E\u6027\u53D8\u5316\u65F6\u90FD\u80FD\u89E6\u53D1\u56DE\u8C03\u51FD\u6570<br> \u5B9A\u4E49getter\u53D8\u91CF\uFF0C\u517C\u5BB9\u7528\u6237\u4F20\u5165getter\u51FD\u6570\u7684\u60C5\u51B5<br> \u5B9A\u4E49oldValue\u548CnewValue\uFF0C\u5728scheduler\u4E2D\u6536\u96C6\u65B0\u65E7\u503C\uFF0C\u5E76\u4F20\u9012\u7ED9\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter <span class="token comment">// \u517C\u5BB9\u4F20\u5165getter\u51FD\u6570\u7684\u60C5\u51B5</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> getter <span class="token operator">=</span> source
  <span class="token keyword">else</span> <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
  <span class="token keyword">let</span> oldValue<span class="token punctuation">,</span> newValue
  <span class="token keyword">let</span> cleanup <span class="token comment">// \u5B58\u50A8\u8FC7\u671F\u7684\u56DE\u8C03\u51FD\u6570, \u89E3\u51B3\u7ADE\u6001\u95EE\u9898</span>
  <span class="token keyword">function</span> <span class="token function">onInvalidate</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    cleanup <span class="token operator">=</span> fn <span class="token comment">// \u5B58\u5165\u8FC7\u671F\u7684\u56DE\u8C03\u51FD\u6570\u5230cleanup\u4E2D</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">job</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5C06scheduler\u5C01\u88C5\u4E3Ajob\u65B9\u4FBF\u8C03\u7528</span>
    newValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5728\u8C03\u7528cb\u4E4B\u524D\u5148\u8C03\u7528\u8FC7\u671F\u7684\u56DE\u8C03</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> onInvalidate<span class="token punctuation">)</span> <span class="token comment">// \u4F20\u5165\u7B2C\u4E09\u4E2A\u53C2\u6570\u65B9\u4FBF\u7528\u6237\u4F7F\u7528</span>
    oldValue <span class="token operator">=</span> newValue
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> effectFn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token function-variable function">scheduler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u652F\u6301flush\u9009\u9879</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>flush <span class="token operator">===</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u82E5\u4F20\u5165\u7ACB\u5373\u8C03\u7528\u5219\u6267\u884Cjob</span>
  <span class="token keyword">else</span> oldValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u539F\u59CB\u503C\u6216\u5DF2\u88AB\u8BFB\u53D6\u8FC7\u5219\u4E0D\u8FDB\u884C\u64CD\u4F5C</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// \u907F\u514D\u6B7B\u5FAA\u73AF</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> k <span class="token keyword">in</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u4E3A\u5BF9\u8C61\uFF0C\u5219\u9012\u5F52\u7684\u8BFB\u53D6\u5BF9\u8C61\u7684\u6BCF\u4E2A\u503C</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u975E\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u975E\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848" aria-hidden="true">#</a> \u975E\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848</h3><p>\u5F53\u5BF9\u8C61\u4E2D\u5B58\u5728\u5B58\u5728getter\uFF0Csetter\u65F6\uFF0CProxy\u4EE3\u7406\u8BFB\u53D6\u65F6\u5176\u4E2Dthis\u6307\u5411\u4E3A\u539F\u59CB\u6570\u636E\uFF0C\u56E0\u6B64\u65E0\u6CD5\u89E6\u53D1\u54CD\u5E94\u5F0F\u6536\u96C6\uFF0CVue3\u4F7F\u7528Reflect\u65B9\u6CD5\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570receiver\uFF0C\u91CD\u65B0\u7ED1\u5B9AProxy\u5BF9\u8C61\uFF0C\u901A\u8FC7Proxy\u5BF9\u8C61\u8BBF\u95EE\u539F\u59CB\u5BF9\u8C61\u5C5E\u6027\uFF0C\u5E76\u89E6\u53D1\u54CD\u5E94\u5F0F\u6536\u96C6</p><p>\u8BFB\u53D6\u64CD\u4F5C<br> obj.foo, --&gt; Reflect.get key in obj, --&gt; HasProperty\u65B9\u6CD5 --&gt; Reflect.has for...in --&gt; \u4F9D\u8D56iteration\u8FED\u4EE3\u5BF9\u8C61 --&gt; Reflect.ownKeys \u6DFB\u52A0\u65B0\u5C5E\u6027set --&gt; Reflect.set \u5220\u9664\u5C5E\u6027delete --&gt; Reflect.deleteProperty</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;iterate&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u6B64\u64CD\u4F5C\u4E0D\u4E88\u4EFB\u4F55key\u7ED1\u5B9A\uFF0C\u56E0\u6B64\u4F7F\u7528\u6807\u8BC6ITERATE_KEY</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span> <span class="token comment">// \u5C06\u526F\u4F5C\u7528\u51FD\u6570\u4E0EITERATE_KEY\u7ED1\u5B9A</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u4E3A\u914D\u5408ITERATE_KEY key, \u540C\u65F6\u8C03\u6574set</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>
    key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span> <span class="token comment">// \u5224\u65AD\u662F\u4FEE\u6539\u8FD8\u662F\u6DFB\u52A0</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span> <span class="token comment">// \u89E6\u53D1\u65F6\u4F20\u5165\u64CD\u4F5C\u7C7B\u578B</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5\u88AB\u64CD\u4F5C\u7684\u5C5E\u6027\u662F\u5426\u662F\u5BF9\u8C61\u81EA\u5DF1\u7684\u5C5E\u6027</span>
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>
  key<span class="token punctuation">)</span>
    <span class="token comment">// \u4F7F\u7528 Reflect.deleteProperty \u5B8C\u6210\u5C5E\u6027\u7684\u5220\u9664</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u6709\u5F53\u88AB\u5220\u9664\u7684\u5C5E\u6027\u662F\u5BF9\u8C61\u81EA\u5DF1\u7684\u5C5E\u6027\u5E76\u4E14\u6210\u529F\u5220\u9664\u65F6,\u624D\u89E6\u53D1\u66F4\u65B0</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u589E\u52A0\u5165\u53C2type\uFF0C\u7528\u4E8E\u533A\u5206add\u548Cmodify</span>
  <span class="token comment">// ... \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u4E3A\u6DFB\u52A0\u64CD\u4F5C\uFF0C\u5219\u89E6\u53D1ITERATE_KEY</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ... \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u60F3\u8981\u5408\u7406\u7684\u89E6\u53D1\u54CD\u5E94\uFF0C\u9700\u8981\u89E3\u51B3\u5982\u4E0B\u573A\u666F\uFF1A\u65B0\u65E7\u503C\u76F8\u540C\u65F6\uFF0C\u4E0D\u89E6\u53D1\u54CD\u5E94\uFF1B\u8BBF\u95EE\u539F\u578B\u4E0A\u5C5E\u6027\u65F6\u91CD\u590D\u89E6\u53D1\u54CD\u5E94\u7B49\u95EE\u9898\uFF0C\u53EF\u901A\u8FC7\u5C01\u88C5reactive\u51FD\u6570\u521B\u5EFA\u54CD\u5E94\u5F0F\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> target <span class="token comment">// \u4EE3\u7406\u5BF9\u8C61\u53EF\u901A\u8FC7raw\u8BBF\u95EE\u539F\u59CB\u5C5E\u6027</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> key <span class="token operator">!==</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">)</span> <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token comment">// \u53EA\u8BFB\u5C5E\u6027\u4E0D\u6536\u96C6\u526F\u4F5C\u7528\u51FD\u6570</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isShallow<span class="token punctuation">)</span> <span class="token keyword">return</span> res
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> res <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> isReadonly <span class="token operator">?</span> <span class="token function">readonly</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// \u9012\u5F52\u5904\u7406\u5D4C\u5957\u5BF9\u8C61</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isReadonly<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">// \u53EA\u8BFB\u5C5E\u6027\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">===</span> receiver<span class="token punctuation">.</span>raw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> newVal <span class="token operator">===</span> newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
    <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isReadonly<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
    <span class="token comment">// ... \u7701\u7565\u5176\u4ED6\u62E6\u622A\u51FD\u6570</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">shallowReactive</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">readonly</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">shallowReadonly</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* shallow */</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7406\u6570\u7EC4</p><p>js\u4E2D\u7684\u5BF9\u8C61\u5206\u4E3A\u666E\u901A\u5BF9\u8C61\u548C\u5F02\u8D28\u5BF9\u8C61\uFF0C\u5F02\u8D28\u5BF9\u8C61\u662F\u5728\u666E\u901A\u5BF9\u8C61\u7684\u57FA\u7840\u4E0A\u4FEE\u6539\u4E86\u5185\u90E8\u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u5982\u6570\u7EC4\u4FEE\u6539\u4E86 <code>[[DefineOwnProperty]]</code>\u65B9\u6CD5<br> \u5F53\u6570\u7EC4\u957F\u5EA6\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u9700\u8981\u901A\u8FC7length\u4E3Akey\uFF0C\u8BB0\u5F55\u76F8\u5173\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5982\u904D\u5386</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> originMethod <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>includes
<span class="token keyword">const</span> arrayInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">includes</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">originMethod</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token comment">// \u5148\u5C1D\u8BD5\u4ECE\u4EE3\u7406\u5BF9\u8C61\u4E2D\u67E5\u627E</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res <span class="token operator">=</span> <span class="token function">originMethod</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>raw<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token comment">// \u5BF9\u4E8Eincludes\uFF0C indexOf\uFF0C lastIndexOf\u7684\u5904\u7406\u65B9\u6CD5\u76F8\u540C</span>

<span class="token comment">// \u89E3\u51B3\u9690\u5F0F\u4FEE\u6539\u6570\u7EC4\u957F\u5EA6\uFF0C\u5BFC\u81F4\u5FAA\u73AF\u89E6\u53D1\u6808\u6EA2\u51FA\u95EE\u9898</span>
<span class="token keyword">let</span> shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token comment">// \u91CD\u5199\u6570\u7EC4\u7684 push\u3001pop\u3001shift\u3001unshift \u4EE5\u53CA splice \u65B9\u6CD5</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">method</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> originMethod <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span>
  arrayInstrumentations<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    shouldTrack <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">originMethod</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u7981\u6B62\u8FFD\u8E2A\u65F6\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>activeEffect <span class="token operator">||</span> <span class="token operator">!</span>shouldTrack<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly<span class="token operator">=</span><span class="token boolean">false</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isReadonly<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> 
        <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span><span class="token operator">:</span><span class="token string">&#39;ADD&#39;</span> <span class="token operator">:</span> 
        <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">===</span> receiver<span class="token punctuation">.</span>raw<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> newVal <span class="token operator">===</span> newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">:</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> target
      <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arrayInstrumentations<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u4E3A\u6570\u7EC4\u5BF9\u8C61\u5219\u8FD4\u56DE\u5B9A\u4E49\u5728 arrayInstrumentations\u7684\u503C\uFF0C\u7528\u4E8E\u89E3\u51B3includes \u65B9\u6CD5\u95EE\u9898</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//... \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token comment">// \u7701\u7565\u90E8\u5206\u5185\u5BB9</span>

  <span class="token comment">// \u5F53\u64CD\u4F5C\u7C7B\u578B\u4E3A ADD \u5E76\u4E14\u76EE\u6807\u5BF9\u8C61\u662F\u6570\u7EC4\u65F6,\u5E94\u8BE5\u53D6\u51FA\u5E76\u6267\u884C\u90A3\u4E9B\u4E0E length\u5C5E\u6027\u76F8\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D6\u51FA\u4E0E length \u76F8\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
    <span class="token keyword">const</span> lengthEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5C06\u8FD9\u4E9B\u526F\u4F5C\u7528\u51FD\u6570\u6DFB\u52A0\u5230 effectsToRun \u4E2D,\u5F85\u6267\u884C</span>
    lengthEffects <span class="token operator">&amp;&amp;</span> lengthEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> key <span class="token operator">===</span> <span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u76EE\u6807\u5BF9\u8C61\u662F\u6570\u7EC4\u5E76\u4E14\u4FEE\u6539\u4E86 length \u5C5E\u6027\u65F6,\u5E94\u8BE5\u53D6\u51FA\u5E76\u6267\u884C\u90A3\u4E9B\u4E0E\u7D22\u5F15\u76F8\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
    depsMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">effects<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">&gt;</span> newVal<span class="token punctuation">)</span><span class="token punctuation">{</span>
        effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  effectsToRun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span>scheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">scheduler</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> reactiveMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> existionProxy <span class="token operator">=</span> reactiveMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u907F\u514D\u521B\u5EFA\u91CD\u590D\u7684\u4EE3\u7406\u5BF9\u8C61</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>existionProxy<span class="token punctuation">)</span> <span class="token keyword">return</span> existionProxy
  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  reactiveMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  <span class="token keyword">return</span> proxy
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7406Set\uFF0C Map\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> target
      <span class="token comment">// size\u662F\u5C5E\u6027\u8BBF\u95EE\u5668\uFF0C\u6267\u884C\u65F6\u9700\u8981\u6307\u5411target</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;size&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> target<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5C06\u8FD4\u56DE\u7684\u65B9\u6CD5\u4E0E\u539F\u59CB\u6570\u636E\u5BF9\u8C61target\u7ED1\u5B9A</span>
      <span class="token keyword">return</span>  mutableInstrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u81EA\u5B9A\u4E49\u5BF9\u8C61\u5B9E\u73B0\u81EA\u5B9A\u4E49\u7684add\u7B49\u65B9\u6CD5</span>
<span class="token keyword">const</span> mutableInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;ADD&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
  <span class="token keyword">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
  <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> had <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>had<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">:</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> had <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> rawVal <span class="token operator">=</span> value<span class="token punctuation">.</span>raw <span class="token operator">||</span> value
    target<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> rawVal<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>had<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;ADD&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> value <span class="token operator">===</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;SET&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    target<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> <span class="token function">wrap</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">wrap</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> itr <span class="token operator">=</span> target<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> value <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token function">wrap</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">wrap</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> value<span class="token punctuation">,</span>
          done
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// entries, values, keys \u7B49\u65B9\u6CD5\u7684\u5B9E\u73B0\u65B9\u5F0F\u4E0E\u4E0A\u9762\u53EF\u8FED\u4EE3\u534F\u8BAE\u7C7B\u4F3C, \u4F46keys\u9700\u8981\u518Dtrigger\u4E2D\u989D\u5916\u5904\u7406</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> effects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">const</span> effectsToRun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  effects <span class="token operator">&amp;&amp;</span> effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span><span class="token punctuation">{</span>
      effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6DFB\u52A0set\u64CD\u4F5C\u7C7B\u578B\uFF0C \u89E6\u53D1\u4E0EIterate_key\u76F8\u5173\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span> <span class="token operator">||</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Map]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span><span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848" aria-hidden="true">#</a> \u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848</h3><p>proxy\u7684\u4EE3\u7406\u76EE\u6807\u662F\u975E\u539F\u59CB\u503C\uFF0C \u5BF9\u539F\u59CB\u503C\u7684\u62E6\u622A\u53EA\u80FD\u901A\u8FC7\u4E00\u4E2A\u975E\u539F\u59CB\u503C\u7684\u5305\u88C5\u5BF9\u8C61\u6765\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> val
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u4E0D\u53EF\u679A\u4E3E\u5BF9\u8C61\uFF0C \u7528\u4E8E\u533A\u5206ref\u5BF9\u8C61\u548C\u666E\u901A\u5BF9\u8C61</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> <span class="token string">&#39;__v_isRef&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">reactive</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>toRef\u548CtoRefs\u89E3\u51B3\uFF0C\u5F53\u54CD\u5E94\u5F0F\u5BF9\u8C61\u8FDB\u884C\u7ED3\u6784\u8D4B\u503C\u7684\uFF0C\u54CD\u5E94\u5F0F\u4E22\u5931\u7684\u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toRef</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> <span class="token string">&#39;__v_isRef&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> wrapper
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">toRefs</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ret<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ret
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ref\u5BF9\u8C61\u7684\u503C\u5FC5\u987B\u901A\u8FC7value\u8FDB\u884C\u8BBF\u95EE\uFF0C \u4E3A\u4E86\u65B9\u4FBF\u4F7F\u7528\uFF0C \u9700\u8981\u63D0\u4F9B\u81EA\u52A8\u8131ref\u529F\u80FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">proxyRefs</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// setup\u51FD\u6570\u8FD4\u56DE\u65F6\u4F1A\u8C03\u7528\u7C7B\u4F3C\u7684\u51FD\u6570, \u5BF9ref\u5BF9\u8C61\u8C03\u7528reactive\u4E5F\u4F1A\u6709\u7C7B\u4F3C\u8FC7\u7A0B</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">return</span> res<span class="token punctuation">.</span>__v_isRefs <span class="token operator">?</span> res<span class="token punctuation">.</span>value <span class="token operator">:</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>__v_isRef<span class="token punctuation">)</span><span class="token punctuation">{</span>
        value<span class="token punctuation">.</span>value <span class="token operator">=</span> val
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6E32\u67D3\u5668" tabindex="-1"><a class="header-anchor" href="#\u6E32\u67D3\u5668" aria-hidden="true">#</a> \u6E32\u67D3\u5668</h2><h3 id="\u6E32\u67D3\u5668\u7684\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#\u6E32\u67D3\u5668\u7684\u8BBE\u8BA1" aria-hidden="true">#</a> \u6E32\u67D3\u5668\u7684\u8BBE\u8BA1</h3><p>\u6E32\u67D3\u5668\u5C06\u865A\u62DFDOM\u6E32\u67D3\u4E3A\u7279\u5B9A\u5E73\u53F0\u4E0A\u7684\u771F\u5B9E\u5143\u7D20\uFF0C \u6E32\u67D3\u5668\u4E0E\u6E32\u67D3\u51FD\u6570\u4E0D\u540C\uFF0C \u6E32\u67D3\u5668\u662F\u66F4\u5BBD\u6CDB\u7684\u6982\u6982\u5FF5\uFF0C \u53EF\u4EE5\u7528\u6765\u6E32\u67D3\u548C\u6FC0\u6D3B\u5DF2\u6709\u7684DOM\u5143\u7D20(\u4E0E\u670D\u52A1\u7AEF\u6E32\u67D3\u76F8\u5173)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createRenderer</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token comment">// \u901A\u8FC7options\u4F20\u5165\u64CD\u4F5CDOM\u7684API\u5B9E\u73B0\u6E32\u67D3\u5668\u7684\u5E73\u53F0\u65E0\u5173\u80FD\u529B</span>
    createElement<span class="token punctuation">,</span>
    insert<span class="token punctuation">,</span>
    setElementText<span class="token punctuation">,</span>
    patchProps<span class="token punctuation">,</span>
    createText<span class="token punctuation">,</span>
    setText<span class="token punctuation">,</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> options
  <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span>_vnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u65E7\u7684vnode \u5B58\u5728\uFF0C \u4E14\u65B0\u7684vnode\u4E0D\u5B58\u5728\uFF0C \u5219\u5378\u8F7D</span>
        <span class="token function">unmount</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    container<span class="token punctuation">.</span>_vnode <span class="token operator">=</span> vnode <span class="token comment">// \u6E32\u67D3\u5B8C\u6210\u540E\uFF0C \u5C06vnode\u6302\u8F7D\u5230container\u4E0A</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">hydrate</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n1 <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>type <span class="token operator">!==</span> n2<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unmount</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span>
      n1 <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> n2
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// n1\u4E0D\u5B58\u5728\uFF0C \u5219\u76F4\u63A5\u6302\u8F7D</span>
        <span class="token function">mountElement</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span> <span class="token comment">// \u652F\u6301\u6307\u5B9A\u4F4D\u7F6E\u6302\u8F7D</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">patchElement</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span>
        <span class="token comment">// n1 \u5B58\u5728\u9700\u8981\u6253\u8865\u4E01</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u4F55n2.type\u7684\u503C\u65F6\u5BF9\u8C61\u7C7B\u578B\uFF0C\u5219\u5B83\u662F\u7EC4\u4EF6</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> Text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406\u5176\u4ED6\u7C7B\u578B\u7684vnode</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> el <span class="token operator">=</span> n2<span class="token punctuation">.</span>el <span class="token operator">=</span> <span class="token function">createText</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cosnt el <span class="token operator">=</span> n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el
        <span class="token keyword">if</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children <span class="token operator">!==</span> n1<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setText</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> Fragment<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Fragment\u7C7B\u578B\uFF0C\u652F\u6301\u591A\u6839\u8282\u70B9</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span><span class="token punctuation">{</span>
        n2<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">patchChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">mountElement</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6302\u8F7Dvnode</span>
    <span class="token keyword">const</span> el <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> <span class="token function">createElement</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setElementText</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5904\u7406\u6570\u7EC4\u578B\u5B50\u8282\u70B9</span>
      vnode<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> child<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> vnode<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">insert</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span> <span class="token comment">// \u652F\u6301\u5728\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">shouldSetAsProps</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;form&#39;</span> <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">&#39;INPUT&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token keyword">return</span> key <span class="token keyword">in</span> el
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">unmount</span><span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>type <span class="token operator">===</span> Fragment<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// unmount\u517C\u5BB9Fragment\u7C7B\u578B\u8282\u70B9</span>
      vnode<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">unmount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> parent <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>parentNode
    <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">patchElement</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> el <span class="token operator">=</span> n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el
    <span class="token keyword">const</span> oldProps <span class="token operator">=</span> n1<span class="token punctuation">.</span>props
    <span class="token keyword">const</span> newProps <span class="token operator">=</span> n2<span class="token punctuation">.</span>props
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> newProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>newProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> newProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> oldProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> newProps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">patchChildren</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> n2<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u5B50\u8282\u70B9\u662F\u6587\u672C\u8282\u70B9</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u65E7\u5B50\u8282\u70B9\u662F\u4E00\u7EC4\u5B50\u8282\u70B9\uFF0C\u5219\u9010\u4E2A\u5378\u8F7D</span>
          n1<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">unmount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">setElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token comment">// \u5C06\u65B0\u7684\u6587\u672C\u8282\u70B9\u5185\u5BB9\u8BBE\u7F6E\u5230\u5BB9\u5668\u4E0A</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u65B0\u65E7\u5B50\u8282\u70B9\u5747\u4E3A\u4E00\u7EC4\u5B50\u8282\u70B9\uFF0C\u9700\u8981\u8FDB\u884Cdiff\u7B97\u6CD5</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u6B64\u65F6\u65E7\u5B50\u8282\u70B9\u4E3A\u6587\u672C\u8282\u70B9\u6216\u4E0D\u5B58\u5728\uFF0C \u56E0\u6B64\u53EA\u9700\u5C06\u5BB9\u5668\u6E05\u7A7A\uFF0C \u7136\u540E\u5C06\u5B50\u8282\u70B9\u9010\u4E2A\u6302\u8F7D</span>
          <span class="token function">setElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
          n2<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u5B50\u8282\u70B9\u662F\u7A7A\u8282\u70B9</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u9010\u4E2A\u5378\u8F7D\u65E7\u7684\u5B50\u8282\u70B9</span>
          n1<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">unmount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> n1<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u76F4\u63A5\u7F6E\u7A7A\u5BB9\u5668</span>
          <span class="token function">setElementText</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    render<span class="token punctuation">,</span>
    hydrate<span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6D4F\u89C8\u5668\u4E2Doptions\u5B9E\u73B0\u793A\u4F8B</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">createElement</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setElementText</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>textContent <span class="token operator">=</span> text
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">insert</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> anchor <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parent<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">createText</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setText</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>nodeValue <span class="token operator">=</span> text
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">patchProps</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> preValue<span class="token punctuation">,</span> nextValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^on</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5904\u7406\u7ED1\u5B9A\u4E8B\u4EF6</span>
      <span class="token keyword">const</span> invokers <span class="token operator">=</span> el<span class="token punctuation">.</span>_vei <span class="token operator">||</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>_vei <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u5B58\u50A8\u4E8B\u4EF6\u540D\u79F0\u5230\u51FD\u6570\u7684\u6620\u5C04</span>
      <span class="token keyword">let</span> invoker <span class="token operator">=</span> invokers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment">// \u5C1D\u8BD5\u83B7\u53D6\u4E8B\u4EF6\u5BF9\u5E94\u7684\u51FD\u6570\u7F13\u5B58</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>nextValue<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u6216\u65B0\u589E\u4E8B\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>invoker<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u589E\u4E8B\u4EF6</span>
          invoker <span class="token operator">=</span> el<span class="token punctuation">.</span>_vei<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u5305\u88C5\u4E8B\u4EF6\u51FD\u6570</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>timeStamp <span class="token operator">&lt;</span> invoker<span class="token punctuation">.</span>attached<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// \u4E8B\u4EF6\u53D1\u751F\u4E8B\u4EF6\u65E9\u4E8E\u4E8B\u4EF6\u7ED1\u5B9A\u65F6\u95F4\uFF0C \u5219\u4E0D\u5904\u7406</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>invoker<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              invoker<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              invoker<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          invoker<span class="token punctuation">.</span>value <span class="token operator">=</span> nextValue <span class="token comment">// \u5B58\u50A8\u56DE\u8C03\u51FD\u6570\uFF0C \u901A\u8FC7value\u8C03\u7528</span>
          invoker<span class="token punctuation">.</span>attached <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5B58\u50A8\u4E8B\u4EF6\u7ED1\u5B9A\u65F6\u95F4</span>
          el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> invoker<span class="token punctuation">)</span> <span class="token comment">// \u7ED1\u5B9A\u5305\u88C5\u51FD\u6570</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u4E8B\u4EF6\uFF0C\u4EC5\u9700\u76F4\u63A5\u66FF\u6362\uFF0C\u800C\u4E0D\u9700\u8981remove\u539F\u6765\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u63D0\u5347\u6027\u80FD</span>
          invoker<span class="token punctuation">.</span>value <span class="token operator">=</span> nextValue
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>invoker<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u672A\u4F20\u5165\u56DE\u8C03\u51FD\u6570\uFF0C\u5219\u8868\u660E\u79FB\u9664\u4E8B\u4EF6</span>
        el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> invoker<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5BF9class\u7279\u6B8A\u5904\u7406</span>
      el<span class="token punctuation">.</span>className <span class="token operator">=</span> nextValue <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">shouldSetAsProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> key<span class="token punctuation">,</span> nextValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span> el<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&#39;boolean&#39;</span> <span class="token operator">&amp;&amp;</span> nextValue <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> nextValue
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> nextValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B80\u5355diff\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355diff\u7B97\u6CD5" aria-hidden="true">#</a> \u7B80\u5355diff\u7B97\u6CD5</h3><p>diff\u7B97\u6CD5\u662F\u5F53\u65B0\u65E7vnode\u7684\u5B50\u8282\u70B9\u90FD\u662F\u4E00\u7EC4\u8282\u70B9\u662F\uFF0C\u4E3A\u4E86\u6700\u5C0F\u7684\u6027\u80FD\u5F00\u9500\u5B8C\u6210\u66F4\u65B0\u7684\u7B97\u6CD5</p><p>\u5148\u904D\u5386\u65B0\u5B50\u8282\u70B9\u5E8F\u5217\uFF0C\u67E5\u627E\u5BF9\u5E94\u7684\u65E7\u5B50\u8282\u70B9\u8C03\u6574\u987A\u5E8F\u5E76\u8FDB\u884C\u590D\u7528\uFF0C\u5BF9\u4E8E\u4E0D\u5B58\u5728\u7684\u8282\u70B9\u5220\u9664\uFF0C\u65B0\u589E\u8282\u70B9\u5219\u8FDB\u884C\u6302\u8F7D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patchChildren</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> n2<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> oldChildren <span class="token operator">=</span> n1<span class="token punctuation">.</span>children
    <span class="token keyword">const</span> newChildren <span class="token operator">=</span> n2<span class="token punctuation">.</span>children

    <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u65E7\u5B50\u8282\u70B9\u7684\u7D22\u5F15</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">let</span> find <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u662F\u5426\u627E\u5230\u5BF9\u5E94\u7684\u65E7\u5B50\u8282\u70B9\uFF0C\u521D\u59CB\u503C\u4E3Afalse</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u65E7\u5B50\u8282\u70B9\u7684key\u76F8\u540C</span>
          find <span class="token operator">=</span> <span class="token boolean">true</span>
          <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">&lt;</span> lastIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65E7\u5B50\u8282\u70B9\u7684\u4F4D\u7F6E\u5728\u5F53\u524D\u4F4D\u7F6E\u4E4B\u524D\uFF0C\u9700\u8981\u79FB\u52A8</span>
            <span class="token keyword">const</span> preVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>preVNode<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u975E\u7B2C\u4E00\u4E2A\u8282\u70B9\uFF0C \u5219\u9700\u8981\u79FB\u52A8\u771F\u5B9EDOM</span>
              <span class="token keyword">const</span> anchor <span class="token operator">=</span> preVNode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>nextSibling <span class="token comment">// \u83B7\u53D6\u4E0B\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9\u4F5C\u4E3A\u951A\u70B9</span>
              <span class="token function">insert</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            lastIndex <span class="token operator">=</span> j
          <span class="token punctuation">}</span>
          <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>find<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u4ECD\u672A\u627E\u5230\u65E7\u5B50\u8282\u70B9\uFF0C\u5219\u65B0\u589E\u8282\u70B9</span>
          <span class="token keyword">const</span> preVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
          <span class="token keyword">let</span> anchor <span class="token operator">=</span> <span class="token keyword">null</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>preVNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            anchor <span class="token operator">=</span> preVNode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>nextSibling
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            anchor <span class="token operator">=</span> container<span class="token punctuation">.</span>firstChild <span class="token comment">// \u65B0\u589E\u8282\u70B9\u4E3A\u7B2C\u4E00\u4E2A\u8282\u70B9</span>
          <span class="token punctuation">}</span>
          <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> oldChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> has <span class="token operator">=</span> newChildren<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">newVNode</span> <span class="token operator">=&gt;</span> newVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>has<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">unmount</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CC\u7AEFdiff\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u53CC\u7AEFdiff\u7B97\u6CD5" aria-hidden="true">#</a> \u53CC\u7AEFDiff\u7B97\u6CD5</h3><p>\u5229\u7528\u9996\u5C3E\u6307\u9488\uFF0C\u6BD4\u8F83\u4E0E\u4EA4\u53C9\u6BD4\u8F83\u5C3D\u53EF\u80FD\u7684\u51CF\u5C11DOM\u7684\u79FB\u52A8\u6B21\u6570\uFF0C\u4EE5\u63D0\u5347DOM\u66F4\u65B0\u6027\u80FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patchChildren</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> n2<span class="token punctuation">.</span>children <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> oldChildren <span class="token operator">=</span> n1<span class="token punctuation">.</span>children
  <span class="token keyword">const</span> newChildren <span class="token operator">=</span> n2<span class="token punctuation">.</span>children
  <span class="token comment">// \u56DB\u4E2A\u7D22\u5F15\u503C</span>
  <span class="token keyword">let</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> oldEndIdx <span class="token operator">=</span> oldChildren<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token keyword">let</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> newEndIdx <span class="token operator">=</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token comment">// \u56DB\u4E2A\u8282\u70B9</span>
  <span class="token keyword">let</span> oldStartVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>oldStartIdx<span class="token punctuation">]</span>
  <span class="token keyword">let</span> oldEndVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span>
  <span class="token keyword">let</span> newStartVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>newStartIdx<span class="token punctuation">]</span>
  <span class="token keyword">let</span> newEndVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span>

  <span class="token keyword">while</span><span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>oldStartVNode<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u8282\u70B9\u5DF2\u88AB\u5904\u7406\u5219\u8DF3\u8FC7</span>
      oldStartVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldEndVNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      oldEndVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>oldStartVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newStartVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>oldStartVNode<span class="token punctuation">,</span> newStartVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span> <span class="token comment">// \u5934\u90E8\u76F8\u7B49\u4EC5\u6253\u8865\u4E01</span>
      oldStartVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
      newStartVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>oldEndVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newEndVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C3E\u90E8\u76F8\u7B49\uFF0C\u4EC5\u9700\u6253\u8865\u4E01</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>oldEndVNode<span class="token punctuation">,</span> newEndVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
      oldEndVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
      newEndVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>oldStartVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newEndVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4EA4\u53C9\u76F8\u7B49\uFF0C\u5219\u6253\u8865\u4E01\u5E76\u79FB\u52A8\u8282\u70B9</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>oldStartVNode<span class="token punctuation">,</span> newEndVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
      <span class="token function">insert</span><span class="token punctuation">(</span>oldStartVNode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> newEndVNode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
      oldStartVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
      newEndVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>oldEndVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newStartVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>oldEndVNode<span class="token punctuation">,</span> newStartVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528patch\u6253\u8865\u4E01</span>
      <span class="token function">insert</span><span class="token punctuation">(</span>oldEndVNode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> oldStartVNode<span class="token punctuation">.</span>el<span class="token punctuation">)</span> <span class="token comment">// \u79FB\u52A8\u5C3E\u90E8\u8282\u70B9\u5230\u5934\u90E8</span>
      oldEndVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span> <span class="token comment">// \u66F4\u65B0\u5BF9\u5E94\u7D22\u5F15</span>
      newStartVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> idxInOld <span class="token operator">=</span> oldChildren<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>key <span class="token operator">===</span> newStartVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>idxInOld <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u627E\u5230\u53EF\u590D\u7528\u7684\u65E7\u5B50\u8282\u70B9</span>
        <span class="token keyword">const</span> vnodeToMove <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span>
        <span class="token function">patch</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> oldStartVNode<span class="token punctuation">)</span> <span class="token comment">// \u79FB\u52A8\u65E7\u5B50\u8282\u70B9\u5230\u5934\u90E8</span>
        oldChildren<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// \u6807\u8BB0\u5DF2\u5904\u7406\u7684\u8282\u70B9</span>
        newStartVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u589E\u8282\u70B9</span>
        <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newStartVNode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> oldStartVNode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
        newStartVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u6302\u8F7D\u9057\u6F0F\u7684\u65B0\u589E\u8282\u70B9</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> newStartIdx<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> container<span class="token punctuation">,</span> oldStartVNode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>newEndIdx <span class="token operator">&lt;</span> newStartIdx <span class="token operator">&amp;&amp;</span> oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u79FB\u9664\u591A\u4F59\u7684\u65E7\u8282\u70B9</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> oldStartIdx<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oldEndIdx<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">unmount</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FEB\u901Fdiff\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901Fdiff\u7B97\u6CD5" aria-hidden="true">#</a> \u5FEB\u901FDiff\u7B97\u6CD5</h3><p>\u8BE5\u7B97\u6CD5\u6700\u65E9\u5E94\u7528\u4E8Eivi\u548Cinferno\u4E24\u4E2A\u6846\u67B6\u4E2D\uFF0Cvue3\u4E2D\u501F\u9274\u5E76\u6269\u5C55\u4E4B\u3002<br> \u6269\u5C55\u540E\u8BE5\u7B97\u6CD5\u5148\u5BF9\u65B0\u65E7\u5B50\u8282\u70B9\u5E8F\u5217\u7684\u76F8\u540C\u524D\u7F6E\u5143\u7D20\u548C\u540E\u7F6E\u5143\u7D20\u8FDB\u884C\u9884\u5904\u7406\uFF0C\u5206\u79BB\u51FA\uFF0C\u4EC5\u9700\u8981\u63D2\u5165\u8282\u70B9\u6216\u4EC5\u9700\u8981\u5220\u9664\u8282\u70B9\u7684\u60C5\u51B5<br> \u968F\u540E\u5BF9\u5904\u7406\u540E\u65B0\u5B50\u8282\u70B9\u5E8F\u5217\u7684\u5269\u4F59\u90E8\u5206\u6784\u9020source\u6570\u7EC4\u7528\u4E8E\u5B58\u50A8\u5BF9\u5E94\u65E7\u5B50\u8282\u70B9\u7684\u4F4D\u7F6E\u7D22\u5F15\uFF0C\u5E76\u8BA1\u7B97\u51FA\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u8F85\u52A9\u5B8C\u6210DOM\u79FB\u52A8\u7684\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> newChildren <span class="token operator">=</span> n2<span class="token punctuation">.</span>children
  <span class="token keyword">const</span> oldChildren <span class="token operator">=</span> n1<span class="token punctuation">.</span>children
  <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u9884\u5904\u7406\u524D\u7F6E\u8282\u70B9</span>
    <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
    j<span class="token operator">++</span>
    oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
    newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> oldEnd <span class="token operator">=</span> oldChildren<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> newEnd <span class="token operator">=</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>oldEnd<span class="token punctuation">]</span>
  newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>newEnd<span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>key <span class="token operator">===</span> newVNode<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u9884\u5904\u7406\u540E\u7F6E\u8282\u70B9</span>
    <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
    oldEnd<span class="token operator">--</span>
    newEnd<span class="token operator">--</span>
    oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>oldEnd<span class="token punctuation">]</span>
    newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>newEnd<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">&gt;</span> oldEnd <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> newEnd<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4EC5\u5B58\u5728\u65B0\u589E\u8282\u70B9\u7684\u60C5\u51B5\uFF0C\u63D2\u5165\u8282\u70B9</span>
    <span class="token keyword">const</span> anchorIndex <span class="token operator">=</span> newEnd <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">const</span> anchor <span class="token operator">=</span> anchorIndex <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">?</span> newChildren<span class="token punctuation">[</span>anchorIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>el <span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> newEnd<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">&gt;</span> newEnd <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> oldEnd<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4EC5\u5B58\u5728\u5220\u9664\u8282\u70B9\u7684\u60C5\u51B5\uFF0C\u5220\u9664\u5269\u4F59\u8282\u70B9</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> oldEnd<span class="token punctuation">)</span> <span class="token function">unmount</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5904\u7406\u9700\u8981\u79FB\u52A8\u8282\u70B9\u7B49\u590D\u6742\u60C5\u51B5</span>
    <span class="token comment">// \u5904\u7406\u65B0\u5B50\u8282\u70B9\u5E8F\u5217\u7684\u5269\u4F59\u90E8\u5206\uFF0C\u6784\u9020source\u6570\u7EC4\u5B58\u50A8\u5176\u5BF9\u5E94\u65E7\u5B50\u8282\u70B9\u4E2D\u7684\u4F4D\u7F6E\u7D22\u5F15(\u672A\u5904\u7406\u90E8\u5206\uFF0C\u4ECE0\u5F00\u59CB)</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> newEnd <span class="token operator">-</span> j <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1\u6807\u5FD7\u4E3A\u672A\u5728\u65E7\u5B50\u8282\u70B9\u5E8F\u5217\u4E2D\u5339\u914D\u5230</span>
    <span class="token comment">// \u6784\u9020keyIndex\u7D22\u5F15\u8868\uFF0C\u5B58\u50A8\u5269\u4F59\u65B0\u5B50\u8282\u70B9\u7684key\u5230\u8282\u70B9\u4F4D\u7F6E\u7D22\u5F15\u7684\u6620\u5C04\uFF0C\u8F85\u52A9\u586B\u5145source</span>
    <span class="token keyword">const</span> oldStart <span class="token operator">=</span> j<span class="token punctuation">,</span> newStart <span class="token operator">=</span> j<span class="token punctuation">,</span> keyIndex <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> moved <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> newStart<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> newEnd<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      keyIndex<span class="token punctuation">[</span>newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> patched <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u8BB0\u5F55\u5DF2\u66F4\u65B0\u8FC7\u7684\u8282\u70B9\u6570\u91CF</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> oldStart<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oldEnd<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      oldVNode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>patched <span class="token operator">&lt;=</span> count<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> k <span class="token operator">=</span> keyIndex<span class="token punctuation">[</span>oldVNode<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token comment">// \u5229\u7528\u7D22\u5F15\u8868\u5728\u65E7\u7684\u5E8F\u5217\u4E2D\u5BFB\u627E\u76F8\u540Ckey\u7684\u65B0\u8282\u70B9</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> k <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u627E\u5230\u5219\uFF0C\u505Apatch\uFF0C\u5E76\u6807\u8BB0\u7D22\u5F15\u65B9\u4FBF\u540E\u7EED\u79FB\u52A8</span>
          newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
          <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> container<span class="token punctuation">)</span> <span class="token comment">// \u53D1\u73B0\u76F8\u540C\u7684\u8282\u70B9\u505Apatch</span>
          patched<span class="token operator">++</span>
          source<span class="token punctuation">[</span>k <span class="token operator">-</span> newStart<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token comment">// \u4EE5newStart\u4E3A\u8D77\u70B9\u8BB0\u5F55\u5176\u5728\u5C31\u5B50\u8282\u70B9\u4E2D\u7684\u7D22\u5F15i</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">&lt;</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u975E\u9012\u589E\u987A\u5E8F\uFF0C\u5219\u6807\u8BB0\u9700\u8981\u79FB\u52A8\u8282\u70B9</span>
            moved <span class="token operator">=</span> <span class="token boolean">true</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> pos <span class="token operator">=</span> k
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">unmount</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span> <span class="token comment">// \u672A\u627E\u5230\u8282\u70B9\u5219\u5378\u8F7D\u65E7\u8282\u70B9</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5DF2\u66F4\u65B0\u8282\u70B9\u6570\u8D85\u8FC7\u9700\u8981\u66F4\u65B0\u7684\u8282\u70B9\u6570(\u5269\u4F59\u65B0\u5B50\u8282\u70B9)\uFF0C\u5219\u8BF4\u660E\u9700\u8981\u5378\u8F7D\u591A\u4F59\u7684\u8282\u70B9</span>
        <span class="token function">unmount</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>moved<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5904\u7406DOM\u79FB\u52A8\u64CD\u4F5C</span>
      <span class="token keyword">const</span> seq <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token comment">// \u8BA1\u7B97\u6700\u957F\u589E\u957F\u5B50\u5E8F\u5217\uFF0C\u8FD4\u56DE\u5176\u5BF9\u5E94\u7684\u7D22\u5F15\u6570\u7EC4</span>
      <span class="token comment">// \u6700\u957F\u589E\u957F\u5B50\u5E8F\u5217\u5C3D\u53EF\u80FD\u7684\u51CF\u5C11\u79FB\u52A8\u64CD\u4F5C\uFF0C\u56E0\u6B64seq\u5BF9\u5E94\u7684\u8282\u70B9\u4E0D\u9700\u8981\u8FDB\u884C\u79FB\u52A8</span>
      <span class="token keyword">let</span> s <span class="token operator">=</span> seq<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">// \u6307\u5411\u589E\u957F\u5B50\u5E8F\u5217\u7684\u672B\u5C3E</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> count <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// \u6307\u5411\u5269\u4F59\u65B0\u5B50\u8282\u70B9\u7684\u672B\u5C3E</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5411\u5934\u90E8\u904D\u5386</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// i\u8282\u70B9\u4E3A\u65B0\u589E\u8282\u70B9\uFF0C\u8FDB\u884C\u6302\u8F7D</span>
          <span class="token keyword">const</span> pos <span class="token operator">=</span> i <span class="token operator">+</span> newStart
          <span class="token keyword">const</span> newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>pos<span class="token punctuation">]</span>
          <span class="token keyword">const</span> nextPos <span class="token operator">=</span> pos <span class="token operator">+</span> <span class="token number">1</span>
          <span class="token keyword">const</span> anchor <span class="token operator">=</span> nextPos <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">?</span> newChildren<span class="token punctuation">[</span>nextPos<span class="token punctuation">]</span><span class="token punctuation">.</span>el <span class="token operator">:</span> <span class="token keyword">null</span>
          <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">!==</span> seq<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// i\u8282\u70B9\u9700\u8981\u79FB\u52A8</span>
          <span class="token keyword">const</span> pos <span class="token operator">=</span> i <span class="token operator">+</span> newStart
          <span class="token keyword">const</span> newVNode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>pos<span class="token punctuation">]</span>
          <span class="token keyword">const</span> nextPos <span class="token operator">=</span> pos <span class="token operator">+</span> <span class="token number">1</span>
          <span class="token keyword">const</span> anchor <span class="token operator">=</span> nextPos <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">?</span> newChildren<span class="token punctuation">[</span>nextPos<span class="token punctuation">]</span><span class="token punctuation">.</span>e <span class="token operator">:</span> <span class="token keyword">null</span>
          <span class="token function">insert</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// i\u8282\u70B9\u65E0\u9700\u79FB\u52A8</span>
          s<span class="token operator">--</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,68),k={href:"https://vitotu.github.io/algorithm/labuladongNote.html#%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},r=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> c
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> arrI <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arrI <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      j <span class="token operator">=</span> result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arrI<span class="token punctuation">)</span><span class="token punctuation">{</span>
        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j
        result<span class="token punctuation">.</span>push<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">continue</span>
      <span class="token punctuation">}</span>
      u <span class="token operator">=</span> <span class="token number">0</span>
      v <span class="token operator">=</span> result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>u <span class="token operator">&lt;</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>
        c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>u <span class="token operator">+</span> v<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>result<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> arrI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          u <span class="token operator">=</span> c <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> v <span class="token operator">=</span> c
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>arrI <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>result<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>u <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">[</span>u <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      result<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  u <span class="token operator">=</span> result<span class="token punctuation">.</span>length
  v <span class="token operator">=</span> result<span class="token punctuation">[</span>u <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>u<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    result<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> v
    v <span class="token operator">=</span> p<span class="token punctuation">[</span>v<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7EC4\u4EF6\u5316" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u5316" aria-hidden="true">#</a> \u7EC4\u4EF6\u5316</h2><h3 id="\u7EC4\u4EF6\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> \u7EC4\u4EF6\u5B9E\u73B0\u539F\u7406</h3><p>\u4ECE\u6846\u67B6\u4F7F\u7528\u8005\u89D2\u5EA6\u770B\uFF0C\u7EC4\u4EF6\u662F\u4E00\u4E2A\u9009\u9879\u5BF9\u8C61\uFF0C\u4ECE\u6E32\u67D3\u5668\u5185\u90E8\u5B9E\u73B0\u770B\uFF0C\u7EC4\u4EF6\u662F\u4E00\u79CD\u7279\u6B8A\u7C7B\u578B\u7684\u865A\u62DFDOM\u8282\u70B9\uFF0C\u5176type\u4E3AObject\u7C7B\u578B\uFF0C\u9700\u8981\u8C03\u7528\u7EC4\u4EF6\u7684\u6302\u8F7DmountComponent\u6216\u66F4\u65B0patchComponent\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> n2
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// </span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
    <span class="token keyword">else</span> <span class="token function">patchComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u81EA\u5B9A\u4E49render\u51FD\u6570\u7684\u7EC4\u4EF6\u4E3A\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> MyComponent <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u6837\u4F8B\u7EC4\u4EF6</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;hello component&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">foo&#39;s value is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>foo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> componentOptions <span class="token operator">=</span> vnode<span class="token punctuation">.</span>type
  <span class="token comment">// \u4ECEoptions\u4E2D\u83B7\u53D6\u9009\u9879\u5F0Fapi\u7684\u751F\u547D\u5468\u671Fhook</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> data<span class="token punctuation">,</span> beforeCreate<span class="token punctuation">,</span> created<span class="token punctuation">,</span> beforeMount<span class="token punctuation">,</span> beforeUpdate<span class="token punctuation">,</span> updated<span class="token punctuation">,</span> <span class="token literal-property property">props</span><span class="token operator">:</span> propsOption<span class="token punctuation">,</span> setup <span class="token punctuation">}</span> <span class="token operator">=</span> componentOptions
  beforeCreate <span class="token operator">&amp;&amp;</span> <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528\u9009\u9879\u5F0F\u751F\u547D\u5468\u671F\u94A9\u5B50\uFF08\u5982\u6709\u4E0B\u540C\uFF09</span>
  <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>props<span class="token punctuation">,</span> attrs<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">resolveProps</span><span class="token punctuation">(</span>propsOption<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>props<span class="token punctuation">)</span>
  <span class="token keyword">const</span> slots <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u4ECEchildren\u4E2D\u83B7\u53D6\u63D2\u69FD\u5F15\u7528</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u7EC4\u4EF6\u5B9E\u4F8B</span>
    state<span class="token punctuation">,</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token function">shallowReactive</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isMounted</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u662F\u5426\u5DF2\u6302\u8F7D</span>
    <span class="token literal-property property">subTree</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    slots<span class="token punctuation">,</span>
    <span class="token literal-property property">mounted</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u5B58\u50A8setup\u4E2D\u901A\u8FC7onMounted\u51FD\u6570\u6CE8\u518C\u7684\u751F\u547D\u5468\u671F\u51FD\u6570</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> <span class="token operator">...</span>payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECEprops\u4E2D\u8BFB\u53D6\u7ED1\u5B9A\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u5E76\u6267\u884C</span>
    <span class="token keyword">const</span> eventName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">on</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> handler <span class="token operator">=</span> instance<span class="token punctuation">.</span>props<span class="token punctuation">[</span>eventName<span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span> <span class="token function">handler</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
    <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;event not found&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> setupContext <span class="token operator">=</span> <span class="token punctuation">{</span> attrs<span class="token punctuation">,</span> emit<span class="token punctuation">,</span> slots <span class="token punctuation">}</span>
  <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token comment">// \u6267\u884Csetup\u51FD\u6570\u4E4B\u524D\u8BBE\u7F6E\u5F53\u524D\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C</span>
  <span class="token keyword">const</span> setupResult <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token function">shallowReadonly</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">,</span> setupContext<span class="token punctuation">)</span>
  <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u540E\u91CA\u653E\u5168\u5C40\u53D8\u91CF</span>
  <span class="token keyword">let</span> setupState <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> setupResult <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// setup\u8FD4\u56DE\u4E86render\u51FD\u6570\u7684\u60C5\u51B5</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;setup() should not return a Function when used with render().&#39;</span><span class="token punctuation">)</span>
    render <span class="token operator">=</span> setupResult
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// setup\u8FD4\u56DE\u4E86\u72B6\u6001\u7684\u60C5\u51B5</span>
    setupState <span class="token operator">=</span> setupResult
  <span class="token punctuation">}</span>
  vnode<span class="token punctuation">.</span>component <span class="token operator">=</span> instance
  <span class="token comment">// \u521B\u5EFA\u6E32\u67D3\u4E0A\u4E0B\u6587, \u4F5C\u4E3A\u7EC4\u4EF6\u5B9E\u4F8B\u7684\u4EE3\u7406</span>
  <span class="token keyword">const</span> renderContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> k<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> props<span class="token punctuation">,</span> state<span class="token punctuation">,</span> slots <span class="token punctuation">}</span> <span class="token operator">=</span> t
      <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token string">&#39;$slots&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> slots <span class="token comment">// \u8FD4\u56DE\u63D2\u69FD\u5BF9\u8C61\uFF0C\u4EE5\u4FBF\u5728render\u51FD\u6570\u4E2D\u53EF\u4EE5\u4F7F\u7528this.$slots</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>state <span class="token operator">&amp;&amp;</span> k <span class="token keyword">in</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token keyword">in</span> props<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> props<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>setupState <span class="token operator">&amp;&amp;</span> k <span class="token keyword">in</span> setupState<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528\u4E0A\u4E0B\u6587\u8BFB\u53D6setup\u8FD4\u56DE\u7684\u72B6\u6001\u66B4\u9732\u51FA\u7684state</span>
        <span class="token keyword">return</span> setupState<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;not found&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> props<span class="token punctuation">,</span> state <span class="token punctuation">}</span> <span class="token operator">=</span> t
      <span class="token keyword">if</span><span class="token punctuation">(</span>state <span class="token operator">&amp;&amp;</span> k <span class="token keyword">in</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token keyword">in</span> props<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;props is readonly&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>setupState <span class="token operator">&amp;&amp;</span> k <span class="token keyword">in</span> setupState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        setupState<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v
      <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;not found&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  created <span class="token operator">&amp;&amp;</span> <span class="token function">created</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528\u9009\u9879\u5F0Fcreated\u94A9\u5B50</span>
  <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> subTree <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">,</span> renderContext<span class="token punctuation">)</span> <span class="token comment">// \u4FEE\u6539this\u6307\u5411</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">.</span>isMounted<span class="token punctuation">)</span><span class="token punctuation">{</span>
      beforeMount <span class="token operator">&amp;&amp;</span> <span class="token function">beforeMount</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528beforeMount\u94A9\u5B50</span>
      <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> subTree<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
      instance<span class="token punctuation">.</span>isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
      instance<span class="token punctuation">.</span>mounted <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>mounted<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">hook</span> <span class="token operator">=&gt;</span> <span class="token function">hook</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528mounted\u94A9\u5B50</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      beforeUpdate <span class="token operator">&amp;&amp;</span> <span class="token function">beforeUpdate</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528beforeUpdate\u94A9\u5B50</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>subTree<span class="token punctuation">,</span> subTree<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
      updated <span class="token operator">&amp;&amp;</span> <span class="token function">updated</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528updated\u94A9\u5B50</span>
    <span class="token punctuation">}</span>
    instance<span class="token punctuation">.</span>subTree <span class="token operator">=</span> subTree <span class="token comment">// \u7EC4\u4EF6\u6240\u6E32\u67D3\u7684\u5185\u5BB9\uFF0C\u5B50vnode(\u5B50\u7EC4\u4EF6)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">scheduler</span><span class="token operator">:</span> queueJob
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9E\u73B0\u4E00\u4E2A\u5FAE\u4EFB\u52A1\u961F\u5217\u4E0E\u8C03\u5EA6\u5668\uFF0C\u53EF\u901A\u8FC7\u8C03\u5EA6\u5668\u5BF9\u91CD\u590D\u7684\u4EFB\u52A1\u53BB\u91CD</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u4EFB\u52A1\u961F\u5217</span>
<span class="token keyword">let</span> isFlushing <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u662F\u5426\u6B63\u5728\u5237\u65B0\u9501</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">queueJob</span><span class="token punctuation">(</span><span class="token parameter">job</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u6DFB\u52A0\u4EFB\u52A1\u5230\u7F13\u51B2\u961F\u5217\u4E2D\uFF0C\u5E76\u5F00\u59CB\u5237\u65B0\u961F\u5217</span>
  queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isFlushing<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u672A\u5F00\u59CB\u5237\u65B0\u961F\u5217\uFF0C\u5219\u5F00\u59CB</span>
    isFlushing <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u52A0\u9501\uFF0C\u907F\u514D\u91CD\u590D\u5237\u65B0</span>
    p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">job</span> <span class="token operator">=&gt;</span> <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u4EFB\u52A1\u961F\u5217</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span> <span class="token comment">// \u91CD\u7F6E\u72B6\u6001</span>
        isFlushing <span class="token operator">=</span> <span class="token boolean">false</span>
        queue<span class="token punctuation">.</span>clear <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">resolveProps</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> propsData</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> propsData<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u4EE5\u5B57\u7B26\u4E32on\u5F00\u5934\u7684props\uFF0C \u5C06\u5176\u6DFB\u52A0\u5230props\u4E2D</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> options <span class="token operator">||</span> key<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;on&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> propsData<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">else</span> attrs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> propsData<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>props<span class="token punctuation">,</span> attrs<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">patchComponent</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>component <span class="token operator">=</span> n1<span class="token punctuation">.</span>component<span class="token punctuation">)</span> <span class="token comment">// \u590D\u7528\u7EC4\u4EF6\u5B9E\u4F8B </span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> instance <span class="token comment">// \u83B7\u53D6\u5F53\u524Dprops</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">hasPropsChange</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>props<span class="token punctuation">,</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span> nextProps <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">resolveProps</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>type<span class="token punctuation">.</span>props<span class="token punctuation">,</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> k <span class="token keyword">in</span> nextProps<span class="token punctuation">)</span><span class="token punctuation">{</span>
      props<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nextProps<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> k <span class="token keyword">in</span> props<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>k <span class="token keyword">in</span> nextProps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">delete</span> props<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">hasPropsChange</span><span class="token punctuation">(</span><span class="token parameter">prevProps<span class="token punctuation">,</span> nextProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5224\u5B9Aprops\u662F\u5426\u53D1\u751F\u53D8\u5316</span>
  <span class="token keyword">const</span> nextKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>nextKeys<span class="token punctuation">.</span>length <span class="token operator">!==</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>prevProps<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nextKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> nextKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> prevProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B58\u50A8\u5F53\u524D\u6B63\u5728\u521D\u59CB\u5316\u7684\u7EC4\u4EF6\u5B9E\u4F8B</span>
<span class="token keyword">let</span> currentInstance <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">function</span> <span class="token function">setCurrentInstance</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  currentInstance <span class="token operator">=</span> instance
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5176\u4ED6\u751F\u547D\u5468\u671F\u51FD\u6570\u7684\u6CE8\u518C\u7C7B\u4F3C</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>currentInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    currentInstance<span class="token punctuation">.</span>mounted<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;onMounted function only allow being called in setup&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65\u7EC4\u4EF6\u4E0E\u51FD\u6570\u5F0F\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6\u4E0E\u51FD\u6570\u5F0F\u7EC4\u4EF6" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6\u4E0E\u51FD\u6570\u5F0F\u7EC4\u4EF6</h3><p>\u5F02\u6B65\u7EC4\u4EF6\u4EE5\u5F02\u6B65\u7684\u65B9\u5F0F\u52A0\u8F7D\u5E76\u6E32\u67D3\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u6839\u636E\u52A0\u8F7D\u5668\u7684\u72B6\u6001\u6765\u51B3\u5B9A\u6E32\u67D3\u7684\u5185\u5BB9\uFF0C\u9664\u9700\u8981\u5F02\u6B65\u52A0\u8F7D\u7684\u7EC4\u4EF6\u5916\uFF0C\u8FD8\u652F\u6301\u6307\u5B9Aloading\u3001error\u72B6\u6001\u5C55\u793A\u7684\u7EC4\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C06\u52A0\u8F7D\u5668\u8F6C\u6362\u4E3A\u914D\u7F6E\u9879</span>
    options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">loader</span><span class="token operator">:</span> options
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> loader <span class="token punctuation">}</span> <span class="token operator">=</span> options

  <span class="token keyword">let</span> InnerComp <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">let</span> retries <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u8BB0\u5F55\u91CD\u8BD5\u6B21\u6570</span>
  <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>onError<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u82E5\u6307\u5B9A\u4E86\u9519\u8BEF\u5904\u7406\u51FD\u6570\uFF0C\u5219\u8C03\u7528</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token function-variable function">retry</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u5305\u88C5\u91CD\u8BD5\u51FD\u6570</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            retries<span class="token operator">++</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">const</span> <span class="token function-variable function">fail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// \u5305\u88C5\u5931\u8D25\u51FD\u6570</span>
          options<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>retry<span class="token punctuation">,</span> fail<span class="token punctuation">,</span> retries<span class="token punctuation">)</span> <span class="token comment">// \u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9\u9519\u8BEF\u5904\u7406\u51FD\u6570\uFF0C\u8BA9\u7528\u6237\u5728onError\u56DE\u8C03\u4E2D\u51B3\u5B9A\u8C03\u7528</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">throw</span> err
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;AsyncComponentWrapper&#39;</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> loaded <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token function">shallowRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// \u662F\u5426\u6B63\u5728\u52A0\u8F7D</span>
      <span class="token keyword">let</span> loadingTimer <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>delay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        loadingTimer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>delay<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token function">loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        InnerComp <span class="token operator">=</span> c
        loaded<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> error<span class="token punctuation">.</span>value <span class="token operator">=</span> err<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>loadingTimer<span class="token punctuation">)</span> <span class="token comment">// \u52A0\u8F7D\u5B8C\u6BD5\u540E\u6E05\u9664\u5EF6\u8FDF\u5B9A\u65F6\u5668</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6307\u5B9A\u4E86\u8D85\u65F6\u65F6\u957F\u5219\u5F00\u542F\u4E2A\u5B9A\u65F6\u5668</span>
        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Async component timeout after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>options<span class="token punctuation">.</span>timeout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          error<span class="token punctuation">.</span>value <span class="token operator">=</span> err
        <span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u5305\u88C5\u7EC4\u4EF6\u88AB\u5378\u8F7D\u65F6\u6E05\u9664\u5B9A\u65F6\u5668</span>
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> placeholder <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> Text<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span> <span class="token comment">// \u5360\u4F4D\u5185\u5BB9</span>

      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F\u5219\u6E32\u67D3\u7EC4\u4EF6\uFF0C\u5426\u5219\u4E00\u4E2A\u5360\u4F4D\u5185\u5BB9</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>loaded<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F\uFF0C\u5219\u6E32\u67D3\u88AB\u52A0\u8F7D\u7684\u7EC4\u4EF6</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> InnerComp <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>errorComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8D85\u65F6\u6216\u5176\u4ED6\u9519\u8BEF\uFF0C\u6E32\u67D3\u9519\u8BEF\u7EC4\u4EF6\uFF0C\u5E76\u4F20\u9012\u9519\u8BEF\u8BE6\u60C5</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> options<span class="token punctuation">.</span>errorComponent<span class="token punctuation">,</span> <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> error<span class="token punctuation">.</span>value <span class="token punctuation">}</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>loadingComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> options<span class="token punctuation">.</span>loadingComponent <span class="token punctuation">}</span> <span class="token comment">// \u5EF6\u8FDF\u540E\u5F02\u6B65\u7EC4\u4EF6\u6B63\u5728\u52A0\u8F7D\u65F6\uFF0C \u6E32\u67D3loading\u7EC4\u4EF6</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">return</span> placeholder
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

options <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u793A\u4F8B\u5F02\u6B65\u7EC4\u4EF6\u914D\u7F6E\u9879</span>
  <span class="token function-variable function">loader</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./MyComponent.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u5EF6\u8FDF\u5C55\u793Aloading\u7EC4\u4EF6\u7684\u65F6\u957F</span>
  <span class="token literal-property property">loadingComponent</span><span class="token operator">:</span> MyLoadingComp<span class="token punctuation">,</span> <span class="token comment">// \u7528\u4E8E\u914D\u7F6Eloading\u7EC4\u4EF6</span>
  <span class="token literal-property property">errorComponent</span><span class="token operator">:</span> MyErrorComp<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">unmount</span><span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// unmount\u51FD\u6570\u517C\u5BB9\u5F02\u6B65\u7EC4\u4EF6\u7684\u5185\u5BB9\u5378\u8F7D</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>type <span class="token operator">===</span> Fragment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">unmount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u4E8E\u7EC4\u4EF6\u7684\u5378\u8F7D\uFF0C\u672C\u8D28\u662F\u8981\u5378\u8F7D\u7EC4\u4EF6\u6240\u6E32\u67D3\u7684\u5185\u5BB9\uFF0C\u5373subTree, \u652F\u6301loading\u7EC4\u4EF6\u7684\u5378\u8F7D</span>
    <span class="token function">unmount</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>component<span class="token punctuation">.</span>subTree<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> parent <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>parentNode
  <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684\u672C\u4E8B\u662F\u666E\u901A\u51FD\u6570\uFF0C\u8FD4\u56DE\u503C\u662F\u865A\u62DFDOM\uFF0C \u5728vue3\u4E2D\u51FD\u6570\u5F0F\u7EC4\u4EF6\u548C\u6709\u72B6\u6001\u7EC4\u4EF6\u4E4B\u95F4\u7684\u6027\u80FD\u5DEE\u8DDD\u4E0D\u5927\uFF0C \u4F7F\u7528\u51FD\u6570\u5F0F\u7EC4\u4EF6\u901A\u5E38\u662F\u56E0\u4E3A\u5176\u7B80\u5355\u6027\u800C\u4E0D\u662F\u6027\u80FD<br> \u6302\u8F7D\u51FD\u6570\u5F0F\u7EC4\u4EF6\u53EF\u4EE5\u590D\u7528mountComponent\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>n1 <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>type <span class="token operator">!==</span> n2<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">unmount</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span>
    n1 <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> n2 <span class="token comment">// patch\u51FD\u6570\u505A\u51FA\u54CD\u5E94\u7684\u8C03\u6574</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
    <span class="token keyword">else</span> <span class="token function">patchComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isFunctional <span class="token operator">=</span> <span class="token keyword">typeof</span> vnode<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
  <span class="token keyword">let</span> componentOptions <span class="token operator">=</span> vnode<span class="token punctuation">.</span>type
  <span class="token keyword">if</span><span class="token punctuation">(</span>isFunctional<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u82E5\u4E3A\u51FD\u6570\u5F0F\u7EC4\u4EF6\uFF0C\u5219\u5C06vnode.type\u4F5C\u4E3A\u6E32\u67D3\u51FD\u6570</span>
    componentOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">render</span><span class="token operator">:</span> vnode<span class="token punctuation">.</span>type<span class="token punctuation">,</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> vnode<span class="token punctuation">.</span>type<span class="token punctuation">.</span>props
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5185\u5EFA\u7EC4\u4EF6\u548C\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u5185\u5EFA\u7EC4\u4EF6\u548C\u6A21\u5757" aria-hidden="true">#</a> \u5185\u5EFA\u7EC4\u4EF6\u548C\u6A21\u5757</h3><ul><li>keepAlive\u7EC4\u4EF6\u7684\u5B9E\u73B0\u539F\u7406\uFF0CkeepAlive\u7F13\u5B58\u4E86\u63D2\u69FD\u5185\u7684\u7EC4\u4EF6\uFF0C\u907F\u514D\u4E86\u7EC4\u4EF6\u7684\u9891\u7E41\u9500\u6BC1\u521B\u5EFA\uFF0C \u53D6\u800C\u4EE3\u4E4B\u7684\u662F\u51FA\u53D1\u6FC0\u6D3B\u4E0E\u5931\u6D3B(activate/deactivate)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> KeepAlive <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">__isKeepAlive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">include</span><span class="token operator">:</span> RegExp<span class="token punctuation">,</span> <span class="token comment">// \u6682\u4E14\u4EC5\u652F\u6301\u6B63\u5219\u5339\u914D\u7684\u5F62\u5F0F\u6307\u5B9A</span>
    <span class="token literal-property property">exclude</span><span class="token operator">:</span> RegExp<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> slots <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// key: vnode.type, value: vnode \u7F13\u5B58\u7EC4\u4EF6\u5B9E\u4F8B</span>
    <span class="token keyword">const</span> instance <span class="token operator">=</span> currentInstance <span class="token comment">// \u901A\u8FC7\u5168\u5C40\u53D8\u91CF\u83B7\u53D6\u5F53\u524DKeepAlive\u7EC4\u4EF6\u7684\u5B9E\u4F8B</span>
    <span class="token comment">// keepAliveCtx\u5C5E\u6027\u7531\u6E32\u67D3\u5668\u6CE8\u5165\uFF0C \u66B4\u9732\u6E32\u67D3\u5668\u5185\u90E8\u7684\u90E8\u5206\u65B9\u6CD5</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> move<span class="token punctuation">,</span> createElement <span class="token punctuation">}</span> <span class="token operator">=</span> instance<span class="token punctuation">.</span>keepAliveCtx
    <span class="token keyword">const</span> storageContainer <span class="token operator">=</span> <span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
    instance<span class="token punctuation">.</span><span class="token function-variable function">_deActivate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">move</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> storageContainer<span class="token punctuation">)</span> <span class="token comment">// move\u5C06\u4E00\u6BB5DOM\u79FB\u52A8\u5230\u53E6\u4E00\u4E2A\u5BB9\u5668\u4E2D</span>
    <span class="token punctuation">}</span>
    instance<span class="token punctuation">.</span><span class="token function-variable function">_activate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">move</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> rawVNode <span class="token operator">=</span> slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9ED8\u8BA4\u63D2\u69FD\u5C31\u662F\u9700\u8981KeepAlive\u7684\u7EC4\u4EF6</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> rawVNode<span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> rawVNode <span class="token comment">// \u4E0D\u662F\u7EC4\u4EF6\uFF0C\u76F4\u63A5\u6E32\u67D3</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> rawVNode<span class="token punctuation">.</span>type<span class="token punctuation">.</span>name <span class="token comment">// \u7EC4\u4EF6\u540D</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>name <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>include <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>props<span class="token punctuation">.</span>include<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>exclude <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>exclude<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> rawVNode <span class="token comment">// \u4E0D\u5728include\u4E2D\u6216\u8005\u5728exclude\u4E2D\uFF0C\u76F4\u63A5\u6E32\u67D3</span>
      <span class="token keyword">const</span> cachedVNode <span class="token operator">=</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rawVNode<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token comment">// \u5C1D\u8BD5\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u7EC4\u4EF6\u5B9E\u4F8B</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>cachedVNode<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u7F13\u5B58\u5B58\u5728\uFF0C\u5219\u6267\u884C\u6FC0\u6D3B\u64CD\u4F5C</span>
        rawVNode<span class="token punctuation">.</span>component <span class="token operator">=</span> cachedVNode<span class="token punctuation">.</span>component
        rawVNode<span class="token punctuation">.</span>keptAlive <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u7F13\u5B58\u4E0D\u5B58\u5728\uFF0C\u5219\u6267\u884C\u7F13\u5B58\u64CD\u4F5C</span>
        cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>rawVNode<span class="token punctuation">.</span>type<span class="token punctuation">,</span> rawVNode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      rawVNode<span class="token punctuation">.</span>shouldKeepAlive <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u6807\u8BB0keepAlive, \u907F\u514D\u88AB\u6E32\u67D3\u5668\u5378\u8F7D</span>
      rawVNode<span class="token punctuation">.</span>keepAliveInstance <span class="token operator">=</span> instance <span class="token comment">// \u5C06keepAlive\u7684\u5B9E\u4F8B\u6DFB\u52A0\u5230vnode\u4E0A</span>
      <span class="token keyword">return</span> rawVNode
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u76F8\u5173\u51FD\u6570\u4FEE\u6539\u9002\u914D</span>
<span class="token keyword">function</span> <span class="token function">unmount</span><span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>type <span class="token operator">===</span> Fragment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">unmount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> vnode<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>shouldKeepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// keepAlive\u7EC4\u4EF6\uFF0C\u4E0D\u5378\u8F7D\uFF0C\u800C\u6267\u884CdeActivate</span>
      vnode<span class="token punctuation">.</span>keepAliveInstance<span class="token punctuation">.</span><span class="token function">_deActivate</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">unmount</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>component<span class="token punctuation">.</span>subTree<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> parent <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>parentNode
  <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>keptAlive<span class="token punctuation">)</span> n2<span class="token punctuation">.</span>keepAliveInstance<span class="token punctuation">.</span><span class="token function">_activate</span><span class="token punctuation">(</span>n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
      <span class="token keyword">else</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token function">patchComponent</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
    <span class="token literal-property property">keepAliveCtx</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token comment">// \u53EA\u6709KeepAlive\u5B9E\u4F8B\u624D\u6709keepAlive\u7684\u4E0A\u4E0B\u6587</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isKeepAlive <span class="token operator">=</span> vnode<span class="token punctuation">.</span>type<span class="token punctuation">.</span>__isKeepAlive <span class="token comment">// \u5224\u65AD\u662F\u5426\u662FKeepAlive\u7EC4\u4EF6</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>isKeepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    instance<span class="token punctuation">.</span>keepAliveCtx <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CE8\u5165\u4E0A\u4E0B\u6587\uFF0C\u66B4\u9732\u6E32\u67D3\u5668\u7684move\u7B49\u65B9\u6CD5</span>
      <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>component<span class="token punctuation">.</span>subTree<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      createElement
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Teleport\u7EC4\u4EF6\u7684\u5B9E\u73B0\u539F\u7406</li></ul><p>Teleport\u7EC4\u4EF6\u53EF\u4EE5\u5C06\u7EC4\u4EF6\u6E32\u67D3\u5230\u6307\u5B9A\u8282\u70B9\u4E0A\uFF0C\u5176\u5B9E\u73B0\u540C\u6837\u4F9D\u8D56\u4E8E\u6846\u67B6\u7684\u5E95\u5C42\u5B9E\u73B0\u4E0E\u652F\u6301</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Teleport <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">__isTeleport</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function">process</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> internals</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> patch<span class="token punctuation">,</span> patchChildren<span class="token punctuation">,</span> move <span class="token punctuation">}</span> <span class="token operator">=</span> internals
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>n1<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6302\u8F7D</span>
      <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">typeof</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to<span class="token punctuation">)</span> <span class="token operator">:</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to
      n2<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> target<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0</span>
      <span class="token function">patchChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to <span class="token operator">!==</span> n1<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F4D\u7F6E\u53D8\u66F4\u5219\u6267\u884C\u79FB\u52A8\u64CD\u4F5C</span>
        <span class="token keyword">const</span> newTarget <span class="token operator">=</span> <span class="token keyword">typeof</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to<span class="token punctuation">)</span> <span class="token operator">:</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to
        n2<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">move</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> newTarget<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> type <span class="token punctuation">.</span>__isTeleport<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    type<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      patch<span class="token punctuation">,</span>
      patchChildren<span class="token punctuation">,</span>
      unmount<span class="token punctuation">,</span>
      <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>component <span class="token operator">?</span> vnode<span class="token punctuation">.</span>component<span class="token punctuation">.</span>subTree<span class="token punctuation">.</span>el <span class="token operator">:</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Transition\u7EC4\u4EF6\u7684\u5B9E\u73B0\u539F\u7406</li></ul><p>Transition\u5B9E\u73B0\u8FC7\u6E21\u6548\u679C\uFF0C\u901A\u8FC7\u5728\u9002\u5F53\u7684\u65F6\u673A\u8C03\u7528\u5BF9\u5E94\u7684hook\uFF0C\u6DFB\u52A0\u6216\u5220\u9664\u5BF9\u5E94\u7684\u7C7B\u540D\u6765\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Transition <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u7B80\u5355\u7684transition\u5B9E\u73B0</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Transition&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> slots <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> innerVNode <span class="token operator">=</span> slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      innerVNode<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// VNode\u5BF9\u8C61\u4E0A\u6DFB\u52A0transtion\u76F8\u5E94\u7684\u94A9\u5B50\u51FD\u6570</span>
        <span class="token function">beforeEnter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;enter-from&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8BBE\u7F6E\u521D\u59CB\u72B6\u6001</span>
          el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;enter-active&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">enter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">nextFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E0B\u4E00\u5E27\u5207\u6362\u5230\u7ED3\u675F\u72B6\u6001</span>
            el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;enter-from&#39;</span><span class="token punctuation">)</span>
            el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;enter-to&#39;</span><span class="token punctuation">)</span>
            el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;transitionend&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;enter-to&#39;</span><span class="token punctuation">)</span>
              el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;enter-leave&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">leave</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> performRemove</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;leave-from&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8BBE\u7F6E\u79BB\u573A\u8FC7\u5EA6\u7684\u521D\u59CB\u72B6\u6001</span>
          el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;leave-active&#39;</span><span class="token punctuation">)</span>
          document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>offsetHeight <span class="token comment">// \u5F3A\u5236reflow\uFF0C\u4F7F\u521D\u59CB\u72B6\u6001\u751F\u6548</span>
          <span class="token function">nextFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;leave-from&#39;</span><span class="token punctuation">)</span>
            el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;leave-to&#39;</span><span class="token punctuation">)</span>
            el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;transitionend&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;leave-to&#39;</span><span class="token punctuation">)</span>
              el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;leave-active&#39;</span><span class="token punctuation">)</span>
              <span class="token function">performRemove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> innerVNode
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mountElement</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801, after patchProps called</span>
  <span class="token keyword">const</span> needTransition <span class="token operator">=</span> vnode<span class="token punctuation">.</span>transition
  <span class="token keyword">if</span><span class="token punctuation">(</span>needTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode<span class="token punctuation">.</span>transition<span class="token punctuation">.</span><span class="token function">beforeEnter</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>needTransition<span class="token punctuation">)</span> vnode<span class="token punctuation">.</span>transition<span class="token punctuation">.</span><span class="token function">enter</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">unmout</span><span class="token punctuation">(</span><span class="token parameter">vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801, VNode\u5378\u8F7D\u65F6\u8C03\u7528\u8FC7\u5EA6\u76F8\u5173hook</span>
  <span class="token keyword">const</span> needTransition <span class="token operator">=</span> vnode<span class="token punctuation">.</span>transition
  <span class="token comment">// \u7701\u7565\u90E8\u5206\u4EE3\u7801</span>
  <span class="token keyword">const</span> parent <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>parentNode
  <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">performRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span> <span class="token comment">// \u5C01\u88C5\u5378\u8F7D\u52A8\u4F5C</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>needTransition<span class="token punctuation">)</span><span class="token punctuation">{</span>
      vnode<span class="token punctuation">.</span>transition<span class="token punctuation">.</span><span class="token function">leave</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> performRemove<span class="token punctuation">)</span> <span class="token comment">// \u5C06\u5378\u8F7D\u6267\u884C\u4EA4\u7ED9leave</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">performRemove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7F16\u8BD1\u5668" tabindex="-1"><a class="header-anchor" href="#\u7F16\u8BD1\u5668" aria-hidden="true">#</a> \u7F16\u8BD1\u5668</h2><h3 id="\u7F16\u8BD1\u5668\u6838\u5FC3\u6280\u672F\u6982\u89C8" tabindex="-1"><a class="header-anchor" href="#\u7F16\u8BD1\u5668\u6838\u5FC3\u6280\u672F\u6982\u89C8" aria-hidden="true">#</a> \u7F16\u8BD1\u5668\u6838\u5FC3\u6280\u672F\u6982\u89C8</h3><ul><li>\u6A21\u677FDSL\u7684\u7F16\u8BD1\u5668</li></ul><p>\u7F16\u8BD1\u5668\u662F\u4E00\u6BB5\u7A0B\u5E8F\uFF0C\u5C06\u4E00\u79CD\u8BED\u8A00A(\u6E90\u4EE3\u7801)\u7FFB\u8BD1\u4E3A\u53E6\u4E00\u79CD\u8BED\u8A00B(\u76EE\u6807\u4EE3\u7801)\uFF0C \u8FD9\u4E2A\u8FC7\u7A0B\u79F0\u4E3A\u7F16\u8BD1<br> vue\u6A21\u677F\u7F16\u8BD1\u5668\u7684\u76EE\u6807\u4EE3\u7801\u662F\u6E32\u67D3\u51FD\u6570, \u5176\u5BF9\u6A21\u677F\u8FDB\u884C\u8BCD\u6CD5\u5206\u6790\u548C\u8BED\u6CD5\u5206\u6790\u5F97\u5230AST\uFF0C \u5C06\u6A21\u677FAST\u8F6C\u6362\u4E3AjsAST\uFF0C \u6700\u540E\u6839\u636EjsAST\u751F\u6210js\u4EE3\u7801\u5373\u6E32\u67D3\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> templateAST <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token comment">// \u89E3\u6790\u6A21\u677F\uFF0C\u751F\u6210\u6A21\u677FAST</span>
<span class="token keyword">const</span> jsAST <span class="token operator">=</span> <span class="token function">transform</span><span class="token punctuation">(</span>templateAST<span class="token punctuation">)</span> <span class="token comment">// \u8F6C\u6362\u6A21\u677FAST\u4E3Ajs AST</span>
<span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>jsAST<span class="token punctuation">)</span> <span class="token comment">// \u6839\u636Ejs AST\u751F\u6210render\u51FD\u6570\uFF0C \u5B57\u7B26\u4E32\u5F62\u5F0F\uFF0C\u5B58\u50A8\u4E8Ecode\u5E38\u91CF\u4E2D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>\u5229\u7528\u6709\u9650\u72B6\u6001\u81EA\u52A8\u673A\u7684\u72B6\u6001\u8FC1\u79FB\u8FC7\u7A0B\uFF0C\u5206\u6790\u6A21\u677F\u5B57\u7B26\u4E32\uFF0C\u751F\u6210\u4E00\u7CFB\u5217tokens<br> \u626B\u63CFtokens\u5217\u8868\uFF0C\u7EF4\u62A4\u4E00\u4E2A\u6807\u7B7E\u6808\uFF0C\u6BCF\u5F53\u626B\u63CF\u5230\u4E00\u4E2A\u5F00\u59CB\u6807\u7B7E\u8282\u70B9\uFF0C\u5C31\u5C06\u5176\u538B\u5165\u6808\u9876\u3002\u6808\u9876\u7684\u8282\u70B9\u59CB\u7EC8\u4F5C\u4E3A\u4E0B\u4E00\u4E2A\u626B\u63CF\u7684\u8282\u70B9\u7684\u7236\u8282\u70B9\u3002\u8FD9\u6837\uFF0C\u5F53\u6240\u6709 Token \u626B\u63CF\u5B8C\u6BD5\u540E\uFF0C\u5373\u53EF\u6784\u5EFA\u51FA\u4E00\u68F5\u6811\u578B AST\u3002\u5373\u4E3A\u63CF\u8FF0\u6A21\u677F\u7684AST</p></li><li><p>\u5BF9\u6A21\u677FAST\u8FDB\u884C\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF0C\u89E3\u8026\u8282\u70B9\u7684\u8BBF\u95EE\u4E0E\u64CD\u4F5C\uFF0C\u8BBE\u8BA1\u63D2\u4EF6\u5316\u67B6\u6784(\u56DE\u8C03\u51FD\u6570\u6570\u7EC4)\u4E0E\u4E0A\u4E0B\u6587\u5BF9\u8C61, \u5E76\u5C06\u8F6C\u6362\u8FC7\u7A0B\u5206\u4E3A\u8FDB\u5165\u548C\u9000\u51FA\u9636\u6BB5(\u4E0E\u4E8B\u4EF6\u7684\u6355\u83B7\u548C\u5192\u6CE1\u7C7B\u4F3C)\uFF0C\u63A7\u5236\u8F6C\u6362\u8FC7\u7A0B\u3002\u968F\u540E\u5B9A\u4E49\u4E86\u4E00\u7CFB\u5217\u8F6C\u6362\u51FD\u6570\u5C06\u6A21\u677FAST\u8282\u70B9\u8F6C\u6362\u4E3A\u63CF\u8FF0\u6E32\u67D3\u51FD\u6570\u7684\u5BF9\u8C61\u8282\u70B9(js AST\u8282\u70B9), \u4ECE\u800C\u5B8C\u6210\u6A21\u677FAST\u5230 js AST\u7684\u8F6C\u6362</p></li><li><p>\u6700\u540E\uFF0C\u9012\u5F52js AST\uFF0C\u5B9A\u4E49\u4E00\u7CFB\u5217\u51FD\u6570\u7528\u4E8E\u751F\u6210\u4E0D\u540Cjs AST\u8282\u70B9\u5BF9\u5E94\u7684\u6E32\u67D3\u51FD\u6570\u5B57\u7B26\u4E32\uFF0C\u5E76\u901A\u8FC7\u4E0A\u4E0B\u6587\u62FC\u63A5\u5728\u4E00\u8D77</p></li></ol><h3 id="\u89E3\u6790\u5668" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790\u5668" aria-hidden="true">#</a> \u89E3\u6790\u5668</h3><p>\u89E3\u6790\u5668\uFF0C\u5BF9\u6A21\u677F\u8FDB\u884C\u89E3\u6790\uFF0C\u662F\u5BF9\u4E0A\u9762\u4E09\u6B65\u4E2D\u7684\u7B2C\u4E00\u6B65\u7684\u4F18\u5316<br> \u901A\u8FC7\u6B63\u5219\u5339\u914D\uFF0C\u4F7F\u7528\u4E0D\u540C\u7684\u6A21\u5F0F(\u6587\u672C\u6A21\u5F0F\u7B49)\u6D88\u8D39\u5339\u914D\u51FA\u7684tokens<br> \u9012\u5F52\u7684\u65B9\u5F0F\u4E0D\u65AD\u751F\u6210\u65B0\u7684\u72B6\u6001\u673A\uFF0C\u89E3\u6790\u5F53\u524D\u8282\u70B9\uFF0C\u4EE5\u7ED3\u675F\u6807\u7B7E\u6216\u5F53\u524D\u6A21\u677F\u89E3\u6790\u5B8C\u6BD5\u4E3A\u72B6\u6001\u673A\u7ED3\u675F\u65F6\u673A<br> \u540C\u65F6\u5BF9\u6587\u672C\u8282\u70B9\u4E2D\u7684html\u5B9E\u4F53\u8FDB\u884C\u89E3\u7801\uFF0C \u5BF9\u89E3\u6790\u63D2\u503C\u8BED\u53E5\u63D0\u53D6js\u8868\u8FBE\u5F0F\uFF0C\u6700\u7EC8\u751F\u6210AST\u5E76\u8F93\u51FA</p><h3 id="\u7F16\u8BD1\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u7F16\u8BD1\u4F18\u5316" aria-hidden="true">#</a> \u7F16\u8BD1\u4F18\u5316</h3><p>\u7F16\u8BD1\u4F18\u5316\u662F\u6307\u5728\u7F16\u8BD1\u5668\u5C06\u6A21\u677F\u7F16\u8BD1\u4E3A\u6E32\u67D3\u51FD\u6570\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5C3D\u53EF\u80FD\u7684\u63D0\u53D6\u5173\u952E\u4FE1\u606F\uFF0C\u5E76\u4EE5\u6B64\u4E3A\u6307\u5BFC\u751F\u6210\u6700\u4F18\u4EE3\u7801\u7684\u8FC7\u7A0B</p><p>\u66F4\u65B0\u6807\u8BB0\uFF1A\u5728\u7F16\u8BD1\u9636\u6BB5\u6253\u4E0ApatchFlag\u7528\u4E8E\u533A\u5206\u52A8\u6001\u8282\u70B9\u548C\u9759\u6001\u8282\u70B9\uFF0C \u63D0\u51FABlock\u6982\u5FF5\uFF0C\u5229\u7528dynamicChildren\u6570\u7EC4\u6536\u96C6\u6240\u6709\u7684\u52A8\u6001\u5B50\u8282\u70B9\uFF0C \u5176\u6536\u96C6\u8FC7\u7A0B\u9700\u8981\u5C42\u5C42\u5D4C\u5957\uFF0C \u914D\u5408\u52A8\u6001\u8282\u70B9\u6808\u5B8C\u6210<br> Block\u6536\u96C6\u7684\u52A8\u6001\u5B50\u8282\u70B9\u662F\u5FFD\u7565\u4E86DOM\u5C42\u7EA7\u7684\uFF0C\u56E0\u6B64\u9700\u8981\u5C06v-if\u3001v-for\u7B49\u7834\u574FDOM\u5C42\u7EA7\u7684\u6307\u4EE4\u4E5F\u6536\u96C6\u4E3ABlock\uFF0C \u5728Block\u7684\u57FA\u7840\u4E0A\u505Apatch\u66F4\u65B0\u4F1A\u5728\u6E32\u67D3\u9636\u6BB5\u8282\u7701\u5927\u91CF\u6027\u80FD</p><p>\u9759\u6001\u63D0\u5347\uFF1A\u4EE5\u6811\u7ED3\u6784\u4E3A\u5355\u4F4D\uFF0C\u5C06\u7EAF\u9759\u6001\u8282\u70B9\u63D0\u5347\u5230\u6E32\u67D3\u51FD\u6570\u4E4B\u5916\uFF0C \u907F\u514D\u66F4\u65B0\u65F6\uFF0C\u91CD\u65B0\u521B\u5EFA\u9759\u6001\u865A\u62DF\u8282\u70B9\uFF0C \u9664\u6B64\u4E4B\u5916\u8FD8\u6709\u7EAF\u9759\u6001\u7684props\u63D0\u5347\u7B49<br> \u9884\u5B57\u7B26\u4E32\u5316\uFF1A\u5728\u9759\u6001\u63D0\u5347\u7684\u57FA\u7840\u4E0A\uFF0C\u5C06\u9759\u6001\u7684\u6811\u9884\u5B57\u7B26\u4E32\u5316\uFF0C\u901A\u8FC7innerHTML\u8FDB\u884C\u8BBE\u7F6E\uFF0C\u51CF\u5C11\u865A\u62DF\u521B\u5EFA\u865A\u62DF\u8282\u70B9\u4EA7\u751F\u7684\u6027\u80FD\u5F00\u9500\uFF0C\u51CF\u5C11\u5185\u5B58\u5360\u7528\u3002<br> \u7F13\u5B58\u5185\u8054\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\uFF1Arender\u51FD\u6570\u91CD\u65B0\u6267\u884C\u65F6\u90FD\u4F1A\u4E3A\u7EC4\u4EF6\u521B\u5EFA\u5168\u65B0\u7684props\u5BF9\u8C61\uFF0C\u5BFC\u81F4\u6E32\u67D3\u5668\u5BF9\u7EC4\u4EF6\u8FDB\u884C\u66F4\u65B0\u9020\u6210\u989D\u5916\u7684\u6027\u80FD\u5F00\u9500\uFF0C \u5BF9\u5185\u8054\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u8FDB\u884C\u7F13\u5B58\uFF0C\u80FD\u591F\u907F\u514D\u8FD9\u7C7B\u65E0\u7528\u7684\u66F4\u65B0<br> v-once\u6307\u4EE4\uFF1A \u8BA9\u7528\u6237\u53EF\u4EE5\u81EA\u5B9A\u4E49\u7F13\u5B58\u5168\u90E8\u6216\u90E8\u5206\u865A\u62DF\u8282\u70B9</p><h2 id="\u670D\u52A1\u7AEF\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u6E32\u67D3" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u6E32\u67D3</h2><h3 id="\u540C\u6784\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u540C\u6784\u6E32\u67D3" aria-hidden="true">#</a> \u540C\u6784\u6E32\u67D3</h3><p>\u7EC4\u4EF6\u4EE3\u7801\u5728\u6D4F\u89C8\u5668\u4E2D\u8FD0\u884C\u5E76\u8F93\u51FADOM\u5143\u7D20\uFF0C\u5373\u5728\u5BA2\u6237\u7AEF\u8FD0\u884C\u8F93\u51FADOM\u5143\u7D20\u4E3A\u5BA2\u6237\u7AEF\u6E32\u67D3CSR<br> \u5728nodejs\u73AF\u5883\u8FD0\u884C\u5E76\u8F93\u51FADOM\u5B57\u7B26\u4E32\u53D1\u9001\u7ED9\u6D4F\u89C8\u5668\u5219\u4E3A\u670D\u52A1\u7AEF\u6E32\u67D3SSR<br> \u73B0\u4EE3\u6846\u67B6\u901A\u5E38\u5C06\u4E24\u8005\u7ED3\u5408\uFF0C\u5F62\u6210\u540C\u6784\u6E32\u67D3</p><p>SSR\u5BF9SEO\u53CB\u597D\uFF0C\u65E0\u767D\u5C4F\u95EE\u9898\uFF0C\u4F46\u5360\u7528\u670D\u52A1\u7AEF\u8D44\u6E90\u8F83\u591A\uFF0C\u7528\u6237\u4F53\u9A8C\u8F83\u5DEE\u3002CSR\u5219\u6070\u597D\u76F8\u53CD\u3002</p><p>\u540C\u6784\u6E32\u67D3\u4E2D\u7684\u9996\u6B21\u6E32\u67D3\u4E0ESSR\u5DE5\u4F5C\u6D41\u7A0B\u662F\u4E00\u81F4\u7684\uFF0C\u6574\u4E2A\u9875\u9762\u7684\u5185\u5BB9\u662F\u5728\u670D\u52A1\u7AEF\u5B8C\u6210\u6E32\u67D3\u7684\uFF0C\u4F46\u540C\u6784\u6E32\u67D3\u4F1A\u5C06api\u8BF7\u6C42\u7684\u6570\u636E\u5E8F\u5217\u5316\u4E3A\u5B57\u7B26\u4E32\uFF0C\u62FC\u63A5\u5230\u9759\u6001\u7684html\u4E2D\uFF0C\u5F53js\u8D44\u6E90\u52A0\u8F7D\u5B8C\u6BD5\u540E\uFF0C\u4F1A\u8FDB\u884C\u6FC0\u6D3B\u64CD\u4F5Chydration<br> \u540C\u6784\u6E32\u67D3\u4E2D\u5728\u670D\u52A1\u7AEF\u6E32\u67D3\u90E8\u5206\u4E0D\u5B58\u5728\u6570\u636E\u53D8\u66F4\u540E\u7684\u91CD\u65B0\u6E32\u67D3\uFF0C\u6240\u4EE5\u65E0\u9700\u5BF9\u6570\u636E\u54CD\u5E94\u5F0F\u5305\u88C5\uFF0C \u4E5F\u4E0D\u9700\u8981\u6E32\u67D3\u771F\u662FDOM\uFF0C\u56E0\u6B64\u4EC5\u4F1A\u8C03\u7528created\u94A9\u5B50\u51FD\u6570</p><p>\u5373\u5728\u5F53\u524D\u9875\u9762\u5DF2\u6E32\u67D3\u7684DOM\u5143\u7D20\u548C\u865A\u62DFDOM\u4E4B\u95F4\u5EFA\u7ACB\u8054\u7CFB\uFF0C\u4ECEhtml\u4E2D\u63D0\u53D6\u3001\u53CD\u5E8F\u5217\u5316\u6570\u636E\u3001\u4E3ADOM\u5143\u7D20\u6DFB\u52A0\u4E8B\u4EF6\u7ED1\u5B9A\uFF0C\u521D\u59CB\u5316\u6574\u4E2Avue.js\u5E94\u7528\u7A0B\u5E8F<br> \u6FC0\u6D3B\u540E\u4F1A\u6309\u7167CSR\u7684\u6D41\u7A0B\u6765\u6267\u884C\uFF0C\u4F46\u82E5\u662F\u5237\u65B0\u9875\u9762\u5219\u4F1A\u5148\u8FDB\u884C\u670D\u52A1\u7AEF\u6E32\u67D3\uFF0C\u7136\u540E\u518D\u6FC0\u6D3B</p>`,39);function d(v,m){const p=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("\u6C42\u89E3\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u5143\u7D20\u53EF\u4E0D\u8FDE\u7EED\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u4E5F\u53EF\u53C2\u770B"),n("a",k,[s("labuladong\u7B97\u6CD5\u4E2D\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"),l(p)])]),r])}const f=t(i,[["render",d],["__file","vue3plus.html.vue"]]);export{f as default};
