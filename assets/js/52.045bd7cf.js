(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{508:function(t,s,a){"use strict";a.r(s);var e=a(62),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vuex基础到原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex基础到原理"}},[t._v("#")]),t._v(" vuex基础到原理")]),t._v(" "),a("h2",{attrs:{id:"基本概念与性质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念与性质"}},[t._v("#")]),t._v(" 基本概念与性质")]),t._v(" "),a("p",[t._v("Vuex是vue的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。\nVuex实现了一个单项数据流，通过创建一个全局的 State 数据，组件通过commit操作触发mutation或通过dispatch触发action间接触发mutation来操作state中的数据"),a("br"),t._v("\n通常Mutation用于同步的修改state中的数据，而action用于异步的使用mutation，保证不会有写入冲突"),a("br"),t._v("\nstate的响应式借用vue组件的data选项实现，getter方法及响应式则与vue组件的computed属性相似")]),t._v(" "),a("h2",{attrs:{id:"基础使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[t._v("#")]),t._v(" 基础使用")]),t._v(" "),a("p",[t._v("vuex用于同一管理全局组件共享的数据,"),a("a",{attrs:{href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),a("br"),t._v(" "),a("img",{attrs:{src:"https://vuex.vuejs.org/vuex.png",alt:"vuex.png"}})]),t._v(" "),a("ul",[a("li",[t._v("绑定vuex插件")])]),t._v(" "),a("p",[t._v("vuex需要在vm实例化时,绑定实例对象到vm上,因此通常的做法时,创建一个js文件引入vue和vuex,在文件中使用Vue.use(Vuex)应用插件,随后创建并暴露"),a("code",[t._v("const store = new Vuex.Store({actions, mutations,state})")]),t._v("对象."),a("br"),t._v("\n在main.js文件中引入该对象,并配置到vue实例配置对象中"),a("code",[t._v("new Vue({...,store})")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("vuex配置项\n如上图vuex常用配置项有")]),t._v(" "),a("ul",[a("li",[t._v("actions: 响应组件中对应的"),a("code",[t._v("this.$store.dispatch('key', params)")]),t._v("动作(通常与后端api进行交互，异步的提交mutation操作数据)")]),t._v(" "),a("li",[t._v("mutations: 响应组件或actions中的"),a("code",[t._v("this.$store.commit('KEY', params)")]),t._v("动作,用于同步操作数据")]),t._v(" "),a("li",[t._v("state: 用于存储数据")]),t._v(" "),a("li",[t._v("getters: 用于将state中的数据加工,类似于组件的计算属性，通过属性方式访问时会缓存结果，通过方法的方式访问时，每次都会进行调用")]),t._v(" "),a("li",[t._v("modules：用于配置其他子模块，子模块中可配置namespaced开启命名空间")]),t._v(" "),a("li",[t._v("plugins:"),a("code",[t._v("Array<function>")]),t._v("，所有的function都将被传入store实例用于插件功能扩展，插件中不允许直接修改state")])])]),t._v(" "),a("li",[a("p",[t._v("vuex库上的map方法")])])]),t._v(" "),a("p",[a("code",[t._v("mapState(['state1', 'state2'])")]),t._v("和"),a("code",[t._v("mapGetters(['getter1'])")]),t._v("均可用于生成计算属性从state或getters中获取对应的数据"),a("br"),t._v(" "),a("code",[t._v("mapMutations({fun1:'MUTA1', fun2:'MUTA2'})")]),t._v("和"),a("code",[t._v("mapActions({fun1:'act1', fun2:'act2'})")]),t._v("可用于生成mutations或actions中的方法")]),t._v(" "),a("p",[t._v("上述map*方法返回值均为对象,需要配合解构赋值使用,这些方法均支持数组或对象的方式传参")]),t._v(" "),a("ul",[a("li",[t._v("vuex模块化")])]),t._v(" "),a("p",[t._v("将不同种类的数据拆分成文件a.js和b.js")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store/a.js  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("namespaced")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于与b文件的数据进行区分  ")]),t._v("\n  actions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  mutations"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更多配置项见官方文档  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store/index.js  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a'")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modules")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用方  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取state数据  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/get1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取a命名空间中的get1  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/act1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发a命名空间中act1,并传入params参数  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/MUTA1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与上类似  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用解构赋值放在对应的方法中  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapGetters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getter1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapMutations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MUTA1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MUTA2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapActions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'act1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'act2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])])]),a("p",[t._v("默认情况下(namespaced为false)的情况，模块内部的mutations、actions、getters是注册到全局命名空间的，仅state是局部作用"),a("br"),t._v("\nvuex的根模块和子模块之间是通过树形结构组织起来的")]),t._v(" "),a("h2",{attrs:{id:"源码核心简读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码核心简读"}},[t._v("#")]),t._v(" 源码核心简读")]),t._v(" "),a("p",[t._v("源码"),a("a",{attrs:{href:"https://github.com/vuejs/vuex.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目地址"),a("OutboundLink")],1),a("br"),t._v("\n查看版本3.6.2的src目录主要文件："),a("br"),t._v("\n├── module  // vuex模块化处理 主要是对state的处理，最后构建成一棵 module tree"),a("br"),t._v("\n│   ├── module.js // 主要导出一个Module类 vuex中模块的功能"),a("br"),t._v("\n│   └── module-collection.js // 主要导出一个ModuleCollection类"),a("br"),t._v("\n├── plugins  // 两个插件"),a("br"),t._v("\n│   ├── devtool.js  // 调试"),a("br"),t._v("\n│   ├── logger.js   // 日志"),a("br"),t._v("\n├── helpers.js  // map系列辅助函数 api"),a("br"),t._v("\n├── index.esm.js  // 用于es module的打包"),a("br"),t._v("\n├── index.js   // 入口文件 抛出 Store和 mapActions 等api 用于commonjs的打包"),a("br"),t._v("\n├── mixin.js   // 提供install方法，用于注入$store"),a("br"),t._v("\n├── store.js  // vuex的核心代码 store 仓库"),a("br"),t._v("\n├── util.js  // 一些工具函数库，如deepClone、isPromise、assert")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vuex的使用需要经历以下阶段(伪代码中省略了需要引入的库)")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件机制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化store")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载到vm实例上")]),t._v("\n  store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("全局安装")])]),t._v(" "),a("p",[t._v("index.js文件中暴露了源自store.js的Store和install方法，以及辅助函数和日志插件")]),t._v(" "),a("p",[t._v("install方法中判断是否重复安装否则利用Vue.mixin将vuexInit混入beforeCreate钩子中")]),t._v(" "),a("p",[t._v("vuexInit方法将vue的options.store挂载到"),a("code",[t._v("this.$store")]),t._v("上,若不存在则从父组件的"),a("code",[t._v("$store")]),t._v("上取，借助vue组件实例化过程能够保证所有组件中"),a("code",[t._v("$store")]),t._v("指向同一对象store")]),t._v(" "),a("ul",[a("li",[t._v("实例化Store")])]),t._v(" "),a("p",[t._v("Store中实例化了一个vue对象，借助该vue对象的data和computed属性实现state和getters的响应式，内部维持了一个ModuleCollection对象，用于收集子模块依赖和处理namespaced命名空间，保存module树"),a("br"),t._v("\nStore实例提供了commit、dispatch、get/set state等方法，在构造函数中主要过程有：")]),t._v(" "),a("ol",[a("li",[t._v("利用ModuleCollection递归的注册子模块形成模块树")]),t._v(" "),a("li",[t._v("installModule函数将options(state、actions、mutations等配置)依次注册到store对象上，其中state为树形结构，而mutation、action等方法均以namespace字符串为key进行wrap并挂载到store的对应属性上，对于childModule则进行递归调用注册安装")]),t._v(" "),a("li",[t._v("resetStoreVM函数中新建一个vm实例利用data和computed属性设置state和getters的响应式，并在oldVM存在时销毁oldVM")])]),t._v(" "),a("p",[t._v("ps：不要在生产环境将strict设置为true，strict通过"),a("code",[t._v("_withCommit")]),t._v("拦截非commit的方式修改state的行为，需要深度监听state树，严重影响性能"),a("br"),t._v("\n不可在v-model中使用store属性，因为严格模式中仅支持使用commit方法修改store属性，需要进行双向绑定时需要通过"),a("code",[t._v("get/set")]),t._v("的computed属性或通过监听input或change事件去修改")]),t._v(" "),a("ul",[a("li",[t._v("模块动态注册与卸载")])]),t._v(" "),a("p",[t._v("调用store实例的registerModule(path, module)方法可动态注册模块，逻辑与初始化store逻辑相同，先挂载到模块树上，然后调用installModule和resetStoreVM方法"),a("br"),t._v("\nunregisterModule(path)用于卸载动态注册的模块，不可卸载创建store时的注册的模块，方法中将通过Vue.delete删除state，重置并重载getters、mutations等方法，从模块树中删除该模块")]),t._v(" "),a("h2",{attrs:{id:"手写实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写实现"}},[t._v("#")]),t._v(" 手写实现")]),t._v(" "),a("p",[t._v("TODO")])])}),[],!1,null,null,null);s.default=n.exports}}]);