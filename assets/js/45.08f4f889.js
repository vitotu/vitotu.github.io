(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{494:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue2基础使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue2基础使用"}},[t._v("#")]),t._v(" vue2基础使用")]),t._v(" "),a("p",[t._v("参考尚硅谷的vue2教程\n视频教程"),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1Zy4y1K7SH?p=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("地址"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"模板语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板语法"}},[t._v("#")]),t._v(" 模板语法")]),t._v(" "),a("p",[t._v("在html中书写"),a("code",[t._v(t._s(t.表达式))]),t._v(","),a("code",[t._v("v-指令:属性='表达式'")]),t._v("等语法样式，这些语法样式由Vue实例来解析。这种方式被成为模板语法")]),t._v(" "),a("h2",{attrs:{id:"响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式"}},[t._v("#")]),t._v(" 响应式")]),t._v(" "),a("ul",[a("li",[t._v("响应式基础特性\n"),a("ol",[a("li",[t._v("Vue2在组件实例上设置属性,代理访问data配置项中的数据(vm.key与vm._data.key同源).")]),t._v(" "),a("li",[t._v("data配置项中数组对象的响应式是通过数组包装Array类型的原生"),a("code",[t._v("push()")]),t._v("、"),a("code",[t._v("pop()")]),t._v("、"),a("code",[t._v("shift()")]),t._v("、"),a("code",[t._v("unshift()")]),t._v("、"),a("code",[t._v("splice()")]),t._v("、"),a("code",[t._v("sort()")]),t._v("、"),a("code",[t._v("reverse()")]),t._v("等函数来实现的，因此在修改数组类型的数据时，想要响应式的更新都各调用处，需要使用数组方法来修改数组而不是直接使用索引。")]),t._v(" "),a("li",[t._v("data配置项中的对象都设置的了数据代理，新加的属性想要获得响应式，需要通过"),a("code",[t._v("Vue.set(target，propertyName/index，value)")]),t._v("方法或方法内"),a("code",[t._v("vm.$set(target，propertyName/index，value)")]),t._v("进行设置")]),t._v(" "),a("li",[t._v("特别注意："),a("code",[t._v("Vue.set()")]),t._v("和"),a("code",[t._v("vm.$set()")]),t._v("不能给vm 或 vm的根数据对象 添加属性！！！")])])])]),t._v(" "),a("h2",{attrs:{id:"data配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data配置项"}},[t._v("#")]),t._v(" data配置项")]),t._v(" "),a("p",[t._v("在vm实例中data的配置项可以写成对象形式,但在组件中由于组件的复用特性,data对象必须写成回调函数的形式")]),t._v(" "),a("p",[t._v("Vue获取配置项中的data对象后,对data对象进行代理(深度遍历对象给属性添加getter,setter等),然后将改造后的data对象赋给vm实例的"),a("code",[t._v("_data")]),t._v("属性,同时覆盖原有的对象引用,伪代码表示如下:")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data对象  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略其他配置项  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true  ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原有的对象引用a被覆盖了,因此不等于b对象  ")]),t._v("\n")])])]),a("h2",{attrs:{id:"根实例vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根实例vm"}},[t._v("#")]),t._v(" 根实例vm")]),t._v(" "),a("p",[t._v("vm取名字'mvvm'模型中的最后两个字符vm;model(数据),view(视图html),view-model(视图模型之间的映射)")]),t._v(" "),a("h2",{attrs:{id:"事件处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[t._v("#")]),t._v(" 事件处理")]),t._v(" "),a("ul",[a("li",[t._v("Vue中的事件修饰符：")])]),t._v(" "),a("ol",[a("li",[t._v("prevent：阻止默认事件（常用）；")]),t._v(" "),a("li",[t._v("stop：阻止事件冒泡（常用）；")]),t._v(" "),a("li",[t._v("once：事件只触发一次（常用）；")]),t._v(" "),a("li",[t._v("capture：使用事件的捕获模式；")]),t._v(" "),a("li",[t._v("self：只有event.target是当前操作的元素时才触发事件；")]),t._v(" "),a("li",[t._v("passive：事件的默认行为立即执行，无需等待事件回调执行完毕；")]),t._v(" "),a("li",[t._v("native: 使用浏览器原生事件")])]),t._v(" "),a("ul",[a("li",[t._v("按键")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Vue中常用的按键别名："),a("br"),t._v("\n回车 => enter"),a("br"),t._v("\n删除 => delete (捕获“删除”和“退格”键)"),a("br"),t._v("\n退出 => esc"),a("br"),t._v("\n空格 => space"),a("br"),t._v("\n换行 => tab (特殊，必须配合keydown去使用)"),a("br"),t._v("\n上 => up"),a("br"),t._v("\n下 => down"),a("br"),t._v("\n左 => left"),a("br"),t._v("\n右 => right")])]),t._v(" "),a("li",[a("p",[t._v("Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）")])]),t._v(" "),a("li",[a("p",[t._v("系统修饰键（用法特殊）：ctrl、alt、shift、meta"),a("br"),t._v("\n(1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。"),a("br"),t._v("\n(2).配合keydown使用：正常触发事件。")])]),t._v(" "),a("li",[a("p",[t._v("也可以使用keyCode去指定具体的按键（不推荐）")])]),t._v(" "),a("li",[a("p",[t._v("Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名")])])]),t._v(" "),a("ul",[a("li",[t._v("自定义事件")])]),t._v(" "),a("p",[t._v("自定义事件也可用于父子组件通信"),a("br"),t._v("\n标签中绑定自定义事件的方式:"),a("br"),t._v(" "),a("code",[t._v("<MyComponent @自定义事件='处理函数'/>")]),t._v("或")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("myComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'自定义事件'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 处理函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发后处理函数的调用方仍然是该组件,  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若采用箭头函数,则无法读取当前组件的实例this,因此推荐使用在methods中定义的函数  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$once")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'自定义事件a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 处理函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅触发一次  ")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n")])])]),a("p",[t._v("被绑上自定义事件的子组件可触发对应的事件并回传数据,如:"),a("code",[t._v("this.$emit('自定义事件a',params)")])]),t._v(" "),a("p",[t._v("子组件在被销毁前需在beforeDestroy生命周期函数中进行解绑自定义事件"),a("code",[t._v("beforeDestroy(){this.$off(String单个事件|Array多个事件|不传参默认所有事件)}")])]),t._v(" "),a("ul",[a("li",[t._v("事件总线")])]),t._v(" "),a("p",[t._v("由于直接使用自定义事件在组件直接进行通讯有局限性,事件总线通过在vue原型上绑定vue根实例vm作为公共组件"),a("code",[t._v("$bus")]),t._v(",在"),a("code",[t._v("$bus")]),t._v("上绑定和触发事件来实现任意组件间的通信,如下代码")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型上$bus绑定根实例vm  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("h")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//安装全局事件总线  ")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任意组件上绑定事件,解绑时请慎用解绑全部事件的写法  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是School组件，收到了数据'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 另一组件上触发  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])])]),a("p",[t._v("与事件总线相类似的还有使用第三方库pubsub-js的消息发布订阅方式，用法与事件总线类似")]),t._v(" "),a("h2",{attrs:{id:"绑定样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定样式"}},[t._v("#")]),t._v(" 绑定样式")]),t._v(" "),a("ol",[a("li",[t._v("class样式"),a("br"),t._v("\n写法"),a("code",[t._v(':class="xxx"')]),t._v(" xxx可以是字符串、对象、数组。"),a("br"),t._v("\n字符串写法适用于：类名不确定，要动态获取。"),a("br"),t._v("\n对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。"),a("br"),t._v("\n数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。")]),t._v(" "),a("li",[t._v("style样式"),a("br"),t._v(" "),a("code",[t._v(':style="{fontSize: xxx}"')]),t._v("其中xxx是动态值。"),a("br"),t._v(" "),a("code",[t._v(':style="[a,b]"')]),t._v("其中a、b是样式对象。")])]),t._v(" "),a("h2",{attrs:{id:"列表渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表渲染"}},[t._v("#")]),t._v(" 列表渲染")]),t._v(" "),a("p",[t._v("可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）")]),t._v(" "),a("blockquote",[a("p",[t._v("react、vue中的key有什么作用？（key的内部原理）")])]),t._v(" "),a("ol",[a("li",[t._v("虚拟DOM中key的作用："),a("br"),t._v("\nkey是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】,\n随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：")]),t._v(" "),a("li",[t._v("对比规则："),a("br"),t._v("\n(1). 旧虚拟DOM中找到了与新虚拟DOM相同的key："),a("br"),t._v("\n①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！"),a("br"),t._v("\n②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。"),a("br"),t._v("\n(2). 旧虚拟DOM中未找到与新虚拟DOM相同的key"),a("br"),t._v("\n创建新的真实DOM，随后渲染到到页面。")]),t._v(" "),a("li",[t._v("用index作为key可能会引发的问题："),a("br"),t._v("\na. 若对数据进行：逆序添加、逆序删除等破坏顺序操作:"),a("br"),t._v("\n会产生没有必要的真实DOM更新 ==> 界面效果没问题, 但效率低。"),a("br"),t._v("\nb. 如果结构中还包含输入类的DOM："),a("br"),t._v("\n会产生错误DOM更新 ==> 界面有问题。")]),t._v(" "),a("li",[t._v("开发中如何选择key?:"),a("br"),t._v("\na. 最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。"),a("br"),t._v("\nb. 如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，"),a("br"),t._v("\n使用index作为key是没有问题的。")])]),t._v(" "),a("h2",{attrs:{id:"表单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单"}},[t._v("#")]),t._v(" 表单")]),t._v(" "),a("p",[t._v("收集表单数据："),a("br"),t._v("\n若："),a("code",[t._v('<input type="text"/>')]),t._v("，则v-model收集的是value值，用户输入的就是value值。"),a("br"),t._v("\n若："),a("code",[t._v('<input type="radio"/>')]),t._v("，则v-model收集的是value值，且要给标签配置value值。"),a("br"),t._v("\n若："),a("code",[t._v('<input type="checkbox"/>')]),a("br"),t._v("\n1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）"),a("br"),t._v("\n2.配置input的value属性:"),a("br"),t._v("\n(1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）"),a("br"),t._v("\n(2)v-model的初始值是数组，那么收集的的就是value组成的数组"),a("br"),t._v("\n备注：v-model的三个修饰符："),a("br"),t._v("\nlazy：失去焦点再收集数据"),a("br"),t._v("\nnumber：输入字符串转为有效的数字"),a("br"),t._v("\ntrim：输入首尾空格过滤")]),t._v(" "),a("h2",{attrs:{id:"过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[t._v("#")]),t._v(" 过滤器")]),t._v(" "),a("p",[t._v("过滤器："),a("br"),t._v("\n定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。"),a("br"),t._v("\n语法："),a("br"),t._v("\n1.注册过滤器：Vue.filter(name,callback) 或 new Vue{filters:{}}"),a("br"),t._v("\n2.使用过滤器："+t._s(t._f("过滤器名")(t.xxx))+'  或  v-bind:属性 = "xxx | 过滤器名"'),a("br"),t._v("\n备注："),a("br"),t._v("\n1.过滤器也可以接收额外参数、多个过滤器也可以串联"),a("br"),t._v("\n2.并没有改变原本的数据, 是产生新的对应的数据")]),t._v(" "),a("h2",{attrs:{id:"指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),a("ul",[a("li",[t._v("常用的指令："),a("br"),t._v("\nv-bind : 单向绑定解析表达式, 可简写为 "),a("code",[t._v(":xxx")]),a("br"),t._v("\nv-model : 双向数据绑定"),a("br"),t._v("\nv-for   : 遍历数组/对象/字符串"),a("br"),t._v("\nv-on    : 绑定事件监听, 可简写为@"),a("br"),t._v("\nv-if    : 条件渲染（动态控制节点是否存存在）"),a("br"),t._v("\nv-else  : 条件渲染（动态控制节点是否存存在）"),a("br"),t._v("\nv-show  : 条件渲染 (动态控制节点是否展示)")]),t._v(" "),a("li",[t._v("v-text指令："),a("br"),t._v("\n1.作用：向其所在的节点中渲染文本内容。"),a("br"),t._v("\n2.与插值语法的区别：v-text会替换掉节点中的内容，"+t._s(t.xx)+"则不会。")]),t._v(" "),a("li",[t._v("v-html指令："),a("br"),t._v("\n1.作用：向指定节点中渲染包含html结构的内容。"),a("br"),t._v("\n2.与插值语法的区别："),a("br"),t._v("\n(1).v-html会替换掉节点中所有的内容，"+t._s(t.xx)+"则不会。"),a("br"),t._v("\n(2).v-html可以识别html结构。"),a("br"),t._v("\n3.严重注意：v-html有安全性问题！！！！"),a("br"),t._v("\n(1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击(如：通过插入html向特定网站发送用户的cookie等数据)。"),a("br"),t._v("\n(2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！")]),t._v(" "),a("li",[t._v("v-cloak指令（没有值）："),a("br"),t._v("\n1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。"),a("br"),t._v("\n2.使用css "),a("code",[t._v("diaplay:none")]),t._v("配合v-cloak可以解决网速慢时页面展示出模板"),a("code",[t._v(t._s(t.xxx))]),t._v("的问题。")]),t._v(" "),a("li",[t._v("v-once指令："),a("br"),t._v("\n1.v-once所在节点在初次动态渲染后，就视为静态内容了。"),a("br"),t._v("\n2.以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。")]),t._v(" "),a("li",[t._v("v-pre指令："),a("br"),t._v("\n1.跳过其所在节点的编译过程。"),a("br"),t._v("\n2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。")]),t._v(" "),a("li",[t._v("自定义指令总结：\n"),a("ol",[a("li",[a("p",[t._v("定义语法："),a("br"),t._v("\n(1).局部指令："),a("br"),t._v(" "),a("code",[t._v("new Vue({directive:{指令名:配置对象}})")]),t._v("或"),a("br"),t._v(" "),a("code",[t._v("new Vue({directive{指令名:回调函数}})")]),t._v("  // 简写模式回调函数默认是指bind和update"),a("br"),t._v("\n(2).全局指令："),a("br"),t._v(" "),a("code",[t._v("Vue.directive(指令名,配置对象/回调函数)")])])]),t._v(" "),a("li",[a("p",[t._v("配置对象中常用的3个回调："),a("br"),t._v("\n(1)"),a("code",[t._v(".bind(element, binding)")]),t._v("：指令与元素成功绑定时调用。"),a("br"),t._v("\n(2)"),a("code",[t._v(".inserted(element, binding)")]),t._v("：指令所在元素被插入页面时调用。"),a("br"),t._v("\n(3)"),a("code",[t._v(".update(element, binding)")]),t._v("：指令所在模板结构被重新解析时调用。")])]),t._v(" "),a("li",[a("p",[t._v("备注："),a("br"),t._v("\n1.指令定义时不加v-，但使用时要加v-；"),a("br"),t._v("\n2.指令名如果是多个单词，要使用kebab-case命名方式，不要用camelCase命名。")])])])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("v-if")]),t._v("指令应该注意的地方")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("v-if")]),t._v("指定修饰的节点在条件变为不满足时，将摧毁该节点及其子节点；当条件再变为满足时，新创建的节点及子节点与原有节点不同；"),a("br"),t._v("\n这点在echarts这类需要持有DOM实例进行渲染的库中，由于持有的旧DOM实例与新节点的DOM实例不同，会出现不能渲染的情况，解决方案是在此类场景中使用"),a("code",[t._v("v-show")]),t._v("或重新获取新节点DOM并初始化echarts实例"),a("br"),t._v(" "),a("code",[t._v("v-if")]),t._v("与"),a("code",[t._v("v-else-if")]),t._v("等条件语句之间还存在着直接子节点复用的情况，添加key值可避免复用的情况发生"),a("br"),t._v("\n总结下来高频切换用"),a("code",[t._v("v-show")]),t._v("，否则用"),a("code",[t._v("v-if")])])])]),t._v(" "),a("h2",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cn.vuejs.org/images/lifecycle.png",alt:"lifecycle"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("常用的生命周期钩子："),a("br"),t._v("\n1.mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。"),a("br"),t._v("\n2.beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等【收尾工作】。")])]),t._v(" "),a("li",[a("p",[t._v("关于销毁Vue实例"),a("br"),t._v("\n1.销毁后借助Vue开发者工具看不到任何信息。"),a("br"),t._v("\n2.销毁后自定义事件会失效，但原生DOM事件依然有效。"),a("br"),t._v("\n3.一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了。")])]),t._v(" "),a("li",[a("p",[t._v("父子组件生命周期执行顺序")]),t._v(" "),a("ol",[a("li",[t._v("加载过程：父组件beforeCreate => 父组件created => 父组件beforeMount => 子组件beforeCreate => 子组件created => 子组件 beforeMount => 子组件mounted => 父组件mounted")]),t._v(" "),a("li",[t._v("更新过程：父组件beforeUpdate => 子组件beforeUpdate => 子组件updated => 父组件updated")]),t._v(" "),a("li",[t._v("销毁过程：父组件beforeDestroy => 子组件 beforeDestroy => 子组件 destroyed => 父组件 destroyed")])])])]),t._v(" "),a("h2",{attrs:{id:"组件化编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化编程"}},[t._v("#")]),t._v(" 组件化编程")]),t._v(" "),a("p",[t._v("Vue中使用组件的三大步骤：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一、定义一个组件"),a("br"),t._v("\n使用Vue.extend(options)创建，其中options和new Vue(options)时传入的那个options几乎一样，但也有点区别；"),a("br"),t._v("\n1.编写组件时不挂载元素,因此不写el属性"),a("br"),t._v("\n2.data必须写成函数形式,便于组件实例化时每次都生成新的数据对象"),a("br"),t._v("\n3.在脚手架中推荐在options对象中使用name属性，其值命名多单词组成时可使用大驼峰(推荐方式,需在脚手架环境下)或"),a("code",[t._v("-")]),t._v("连字符的方式"),a("br"),t._v("\n4.组件文件名命名推荐与name属性保持一致"),a("br"),t._v("\n备注：使用template可以配置组件结构。"),a("br"),t._v("\n全局定义组件时可简写:"),a("code",[t._v("const school = Vue.extend(options) => const school = options")])])]),t._v(" "),a("li",[a("p",[t._v("二、注册组件"),a("br"),t._v("\n1.局部注册：靠new Vue的时候传入components选项"),a("br"),t._v("\n2.全局注册：靠Vue.component('组件名',组件)")])]),t._v(" "),a("li",[a("p",[t._v("三、使用组件标签："),a("br"),t._v("\n闭合标签和自闭合标签(需脚手架环境)均可,vue解析标签时实例化vue组件对象")])]),t._v(" "),a("li",[a("p",[t._v("四、组件与vm之间的关系"),a("br"),t._v("\n内置关系："),a("code",[t._v("VueComponent.prototype.__proto__ === Vue.prototype")])])])]),t._v(" "),a("p",[t._v("组件化编程中main.js文件中用于创建vm,唯一实例化的vue对象作为入口挂载组件,App.vue文件中定义根组件容器用于管理其它组件")]),t._v(" "),a("p",[t._v("ps：构造函数的prototype显式原型属性与其实例化后的实例的__proto__隐式原型属性指向同一个原型对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("组件的函数式调用"),a("br"),t._v("\n通过在父组件的生命周期中调用函数，从而使用子组件的方式。适合于简单组件如非模态的弹窗消息、loading遮罩等\n定义方式示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MyMessage "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MyMessage.vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以函数式调用的组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MsgCreator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyMessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成MyMessage组件构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MsgVM "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MsgCreator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化组件此时可传入props数据,并使用$mount函数生成DOM")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在此函数中还可通过事件监听、设置el等方式添加更多功能")]),t._v("\n  el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MsgVM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 操作DOM将组件追加到传入的el子元素末尾")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" MsgVM "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回MsgVM实例以便功能扩展")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("createMessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 暴露函数，调用方引入该函数并调用即可使用MyMessage组件")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"组件间通信的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信的方式"}},[t._v("#")]),t._v(" 组件间通信的方式")]),t._v(" "),a("p",[t._v("TODO：详细展开")]),t._v(" "),a("ul",[a("li",[t._v("props & emit")]),t._v(" "),a("li",[t._v("EventBus 事件总线")]),t._v(" "),a("li",[t._v("vuex")]),t._v(" "),a("li",[t._v("provide & inject")]),t._v(" "),a("li",[t._v("$parent & $children ref属性和refs引用的方式")]),t._v(" "),a("li",[t._v("发布订阅模式")])]),t._v(" "),a("h2",{attrs:{id:"脚手架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚手架"}},[t._v("#")]),t._v(" 脚手架")]),t._v(" "),a("p",[t._v("main.js文件中使用"),a("code",[t._v("render: h => h(App)")]),t._v("的原因是"),a("br"),t._v("\n通过脚手架import的vue只包含核心功能没有模板解析器，因此不能使用template配置项，需要使用render函数接收到的createElement函数(简写为h)去指定具体内容"),a("br"),t._v("\nrender函数将App组件放入容器中")]),t._v(" "),a("h2",{attrs:{id:"组件属性及配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件属性及配置"}},[t._v("#")]),t._v(" 组件属性及配置")]),t._v(" "),a("ul",[a("li",[t._v("ref属性")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("School")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("sch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \nthis.$refs.sch 可获取到真实的DOM元素或School组件实例对象  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("School")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n")])])]),a("ul",[a("li",[t._v("props属性")])]),t._v(" "),a("p",[t._v("父传子直接在props中传递数据即可，子传父需父组件先传递回调函数，子组件通过调用回调函数的方式向父组件传递数据，在子组件中不推荐直接修改父组件传过来的props数据")]),t._v(" "),a("p",[t._v("props用于父子组件通信,常用写法如下:")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//简单声明接收  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型限制  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型限制+默认值的指定+必要性的限制  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("required")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与default属性二选一  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// default:'张三'  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("ul",[a("li",[t._v("mixin混入")])]),t._v(" "),a("p",[t._v("将vue配置项的一部分提取出去,给各组件复用的方式称为混入;"),a("br"),t._v("\n局部混入:通过import导入对象,在配置项中使用"),a("code",[t._v("mixins:[mixinObj1,mixinObj2]")]),a("br"),t._v("\n全局混入:全局混入将混入每一个vue实例中,导入后,通过"),a("code",[t._v("Vue.mixin(mixinObj1)")]),t._v("逐个混入"),a("br"),t._v("\n混入的配置项若有重复,不会覆盖原配置,"),a("br"),t._v("\n混入的对象型选项会进行合并，若key值冲突，则组件的属性值将覆盖该选项，hook函数则将合并调用，混入的hook优先被调用")]),t._v(" "),a("ul",[a("li",[t._v("插件")])]),t._v(" "),a("p",[t._v("在实例化vm之前,调用"),a("code",[t._v("Vue.use(plugins,params)")]),t._v("的方式挂载插件,传入plugins对象中必须包含install方法,install可以接收到Vue构造函数和params参数,在此阶段全局过滤器,全局混入,第三方库等功能挂载到原型对象上,增加vue的功能")]),t._v(" "),a("ul",[a("li",[t._v("scoped")])]),t._v(" "),a("p",[t._v("在vue文件中"),a("code",[t._v("<style scoped></style>")]),t._v("中使用该属性,标签中的属性将只在本组件中生效."),a("br"),t._v("\nvue是通过将模板中的标签加入"),a("code",[t._v("data-生成数字")]),t._v("属性来约束样式的")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("$nextTick")])])]),t._v(" "),a("p",[a("code",[t._v("$nextTick")]),t._v("属性用于传入一个回调函数,该函数在下次DOM更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的DOM."),a("br"),t._v(" "),a("code",[t._v("$nextTick")]),t._v("也算是生命周期图之外的一个生命周期函数")]),t._v(" "),a("ul",[a("li",[t._v("过渡动画")])]),t._v(" "),a("p",[t._v("vue中还支持使用标签"),a("code",[t._v("<transition></transition>")]),t._v("或"),a("code",[t._v("<transition-group></transition-group>")]),t._v("设置过渡效果,详见"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("vue-resource")])]),t._v(" "),a("p",[t._v("vue-resource是vue1.×版本提供的ajax请求插件,vue2.0以后不再维护,推荐使用axios发起ajax请求")]),t._v(" "),a("h2",{attrs:{id:"插槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插槽"}},[t._v("#")]),t._v(" 插槽")]),t._v(" "),a("p",[t._v("vue通过插槽向子组件中传递html结构"),a("br"),t._v("\n由于结构是在父组件中定义的,所以结构的样式和数据也可引用父组件")]),t._v(" "),a("ul",[a("li",[t._v("默认插槽")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("子组件")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("要插入的html结构"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("子组件")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 子组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("默认值/结构"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 要插入的html结构占位符 --\x3e")]),t._v("  \n")])])]),a("ul",[a("li",[t._v("具名插槽")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("子组件")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html结构1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("slot")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("占位1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html结构1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html结构2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("slot")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("占位2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html结构2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("子组件")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 子组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("占位1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("默认值/结构"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("占位2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("默认值/结构"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n")])])]),a("ul",[a("li",[t._v("作用域插槽")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scope")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("childrenParams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 可接收子组件传来的参数childrenParams(可自命令) --\x3e")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html结构")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{childrenParams}}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html结构")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 子组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":params1")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("params2")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("string2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 可传递多个参数，将被包裹在一个对象中 --\x3e")]),t._v("  \n")])])]),a("h2",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),a("p",[t._v("详细使用方法见:"),a("a",{attrs:{href:"https://router.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("路由的绑定与vuex类似")])]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// router/index.js  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VueRouter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MyComponent "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../component/MyComponent'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入自定义组件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/myComponent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MyComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置项  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/mutilRouter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'namedRouter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名路由  ")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("MyComponent1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("MyComponent2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应命名视图  ")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多级路由children配置与routes类似  ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path："),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("child1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子路由中可省略根路径'/'字符  ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path："),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child2/:arg1/:arg2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("child2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置:arg1占位表示params方式路由传参  ")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VueRouter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" router "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./router'")]),t._v("  \nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VueRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("router")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处省略了其他配置项  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])])]),a("ul",[a("li",[t._v("路由的使用")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 导航组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/myComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我的组件"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 最终会被编译为<a>标签 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/mutilRouter/child1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("子组件中的多级路由"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 导航组件中内容展示区占位 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("路由占位符/多级路由也适用"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("命名视图占位符"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 路由传参 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("`/mutilRouter/child1?arg1=${this.arg1}&arg2=${this.arg2}`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("拼字符串的形式传递路由query参数"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("`/mutilRouter/child2/${this.arg1}/${this.arg2}`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("拼字符串的形式传递路由params参数"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{  \n  path:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/mutilRouter/child1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(",  \n  // name:namedRouter, // 若定义了命名路由可直接写name不用写path属性  \n  query:{arg1:this.arg1, arg2:this.arg2},  \n  // params:{arg1:this.arg1, arg2:this.arg2} //params方式传参  \n}"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("传对象形式传递路由query参数"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 被路由的组件中 --\x3e")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{$route.query.arg1}}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n")])])]),a("p",[t._v("路由配置中可传递固定参数props,子组件中能够通过props属性访问到对应的参数")]),t._v(" "),a("ul",[a("li",[t._v("路由方式与编程式路由导航")])]),t._v(" "),a("p",[t._v("默认路由方式为push模式,url访问历史以push的方式记录,设置标签replace属性:"),a("code",[t._v("<router-link replace>")]),t._v("该路由模式改为replace模式,新的url访问历史将不断替换上一条记录")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object参数与标签中to参数类似  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以replace模式路由  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后退  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forward")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进或后退n条记录  ")]),t._v("\n")])])]),a("ul",[a("li",[t._v("路由中的生命周期函数")])]),t._v(" "),a("p",[t._v("通过一下方式可以缓存路由组件,以便进行快速路由切换.被缓存的组件中定时器等回调不会停止运行")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("要缓存的路由组件名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <keep-alive :include=\"['组件1', '组件2']\"> --\x3e")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 若跳转至其上级路由，由于父组件被销毁，因此子组件也会被销毁 --\x3e")]),t._v("  \n")])])]),a("p",[t._v("路由组件中独有的两个声明周期函数")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("activated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被路由展示时触发  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在此函数中启动激活交互所需的事件/定时器  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deactivated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由切走,组件被缓存时触发  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在此事件中停止失活后不需要的事件/定时器  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("ul",[a("li",[t._v("路由守卫")])]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局路由守卫,初始化及每次路由切换之前被调用  ")]),t._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to 要路由到的目标route  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from 发起跳转的来源  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// next回调函数,调用对该路由请求放行  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后置路由守卫,初始化及每次路由切换后调用  ")]),t._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 独享路由守卫,通过beforeEnter属性添加到routes配置对应的路由中  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'要守卫的路由'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/before'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Home"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeEnter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅该路由及其子路由会被拦截  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件内路由守卫路由规则卸载组件内,与生命周期函数平级  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteEnter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过路由规则进入该组件时被调用  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteLeave")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过路由规则离开该组件时被调用  ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"cookbook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookbook"}},[t._v("#")]),t._v(" Cookbook")]),t._v(" "),a("p",[t._v("参考资料"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/cookbook/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookbook"),a("OutboundLink")],1),t._v("中主要介绍了vue的编程技巧")]),t._v(" "),a("h2",{attrs:{id:"添加实例property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加实例property"}},[t._v("#")]),t._v(" 添加实例property")]),t._v(" "),a("p",[a("code",[t._v("vue.prototype.$appName = 'My App'")]),t._v("其中$符号是为了避免命名冲突而约定的符号。\n当在原型时绑定自定义函数时，该函数通过this，能够访问到实例的作用域。\n为了保证安全，应尽量避免使用该模式")]),t._v(" "),a("h2",{attrs:{id:"表单校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单校验"}},[t._v("#")]),t._v(" 表单校验")]),t._v(" "),a("h2",{attrs:{id:"vue-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli"}},[t._v("#")]),t._v(" vue-cli")]),t._v(" "),a("h2",{attrs:{id:"vue-lib模式打包生成umd文件笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-lib模式打包生成umd文件笔记"}},[t._v("#")]),t._v(" vue lib模式打包生成umd文件笔记")]),t._v(" "),a("p",[t._v("通过使用vue"),a("a",{attrs:{href:"https://cli.vuejs.org/zh/guide/build-targets.html#%E5%BA%93",target:"_blank",rel:"noopener noreferrer"}},[t._v("打包命令"),a("OutboundLink")],1),t._v("中的target参数 指定构建模式为lib，可打包生产umd文件。"),a("br"),t._v("\nlib模式下默认不会打包vue，若要打包vue可使用命令"),a("code",[t._v("vue-cli-service build --target lib --inline-vue")]),t._v("\n打包完成后可生成文件"),a("br"),t._v("\n×××.common.js: 一个给打包器用的 CommonJS 包 (不幸的是，webpack 目前还并没有支持 ES modules 输出格式的包)"),a("br"),t._v("\n×××.umd.js: 一个直接给浏览器或 AMD loader 使用的 UMD 包"),a("br"),t._v("\n×××.umd.min.js: 压缩后的 UMD 构建版本"),a("br"),t._v("\n×××.css: 提取出来的 CSS 文件 (可以通过在 vue.config.js 中设置css: { extract: false } 强制内联)")]),t._v(" "),a("h2",{attrs:{id:"关联问题js模块化历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联问题js模块化历史"}},[t._v("#")]),t._v(" 关联问题js模块化历史")]),t._v(" "),a("ol",[a("li",[t._v("立即执行函数"),a("br"),t._v("\n通过立即执行函数封装一个局部作用域")]),t._v(" "),a("li",[t._v("CommonJS标准"),a("br"),t._v("\nnodejs出现后为了解决打包文件相互依赖问题，出现了commonjs语法\n引入使用var fs = require('fs'), 导出使用module.export a = 1;")]),t._v(" "),a("li",[t._v("AMD(异步模块定义)"),a("br"),t._v("\nCommonjs是同步执行，但浏览器经常需要异步加载资源，于是有了AMD的语法，通过回调方式拿到异步变量 require('vue', (Vue) => {new Vue();})")]),t._v(" "),a("li",[t._v("import/export"),a("br"),t._v("\n为了统一2、3两种方式js委员会发布了标准的import/export语法，通过import导入模块，export导出模块。同时，这种打包方式能够更好的在编译时进行静态优化\n这种标准随之es6标准一起出现，因此也称这种模块为es6模块")])]),t._v(" "),a("p",[t._v("UMD(统一模块定义):这种模块语法会自动监测开发人员使用的是 Common.js/AMD/import/export 种的哪种方式，然后再针对各自的语法进行导出，这种方式可以兼容所有其他的模块定义方法。")])])}),[],!1,null,null,null);s.default=e.exports}}]);